schema {
  query: Query
  mutation: Mutations
}

"""
AccessContext is an object that describes a user's relationship with this object -- whether or not they have access to read,
write, or share it. It lets the user know who is
"""
type AccessContext {
  """
  A flag designating whether or not a the User has access to read to this object
  """
  read: Boolean

  """
  A flag designating whether or not a the User has access to write to this object
  """
  write: Boolean

  """
  A flag designating whether or not a the User has access to share to this object
  """
  share: Boolean

  """The ID of the user that owns this object"""
  granting_user_id: ID

  """The ID of the user that owns this object"""
  accessing_user_id: ID
}

"""
Activates an ExpensePartner for the group. Only one partner can be active.
"""
type ActivateExpensePartner {
  expense_partner_config: ExpensePartnerConfig
}

type AddAddress {
  id: String
}

"""Adds a favorite airline for a user."""
type AddFavoriteAirline {
  airline: Airline
}

type AddFavoriteHotel {
  hotel: Hotel
}

"""
Adds the home airport for the user. If one already exists, it is replaced.
"""
type AddHomeAirport {
  airport: Airport
}

input AddLoyaltyInput {
  user_id: ID!
  loyalty_program_id: ID!
  loyalty_program_number: String!
}

type AddTravelerLoyalty {
  user_loyalty_program: UserLoyaltyProgram
}

input AddTravelerLoyaltyInput {
  traveler_profile_id: ID!
  loyalty_program_id: ID!
  loyalty_program_number: String!
}

type AddUserLoyalty {
  user_loyalty_program: UserLoyaltyProgram
}

"""Reusable for hotels/flights/cars"""
input AgentExternalBookingInfo {
  """When the external booking was actually made"""
  booking_datetime: DateTime!

  """The reason for booking externally"""
  booking_reason: ExternalBookingReason!

  """The external site this booking was made on"""
  booking_site: String!

  """
  The internal reference/confirmation number provided by the
                                                         booking site, if any
  """
  booking_site_reference_number: String

  """The confirmation number to be shown to the customer"""
  customer_confirmation_number: String!

  """Any additional agent notes"""
  notes: String

  """Whether or not an agency IATA number was used"""
  iata_number_entered: Boolean = false
}

type AgentNote {
  id: ID
  creator: User
  text: String
  last_updated: DateTime
  last_updated_by: String
}

type AirItineraryNode {
  """
  A blob populated by harrison to give details on the overall score and the scoring breakdown
  """
  score: GenericScalar
  created: DateTime
  id: ID!
  fares: [FareNode]
  modified: DateTime

  """
  A blob populated by harrison to give a boolean "within_guidelines" for whether
  or not a result falls in a companies guidelines and details as to why a result
  falls in or out of policy
  """
  guideline: GenericScalar
}

"""Represents an airline."""
type Airline {
  """The id of the airline."""
  id: ID

  """The IATA designator of this airline."""
  code: String

  """The shortened name of the airline."""
  short_name: String

  """The name of the airline."""
  name: String

  """The airline's phone number."""
  phone: String

  """The airline's website."""
  url: String

  """The alliance this airline is a part of."""
  airline_alliance: AirlineAlliance

  """a url for the logo of the airline"""
  logo_image: Image
  airline_alliance_id: Int @deprecated(reason: "Please request the id on the airline alliance instead. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  other_alliance_airlines: JSONString @deprecated(reason: "Please request airlines on airline_alliance instead. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  deleted: Boolean @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  modified: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  properties: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  status: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  tags: JSONString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  version: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

"""Represents an airline alliance."""
type AirlineAlliance {
  """The id of the alliance."""
  id: ID

  """The name of the alliance"""
  name: String
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  deleted: Boolean @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  modified: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  properties: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  tags: JSONString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  version: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

type AirlineAllianceNode {
  name: String
  created: DateTime
  deleted: Boolean
  tags: JSONString
  modified: DateTime
  id: ID!
  version: Int
  properties: GenericScalar
}

type AirlineConfirmation {
  airline: Airline
  airline_id: String @deprecated(reason: "use airline.id")
  confirmation_number: String
  pnr_ref: String
  provider: String
}

type AirlineFareFamilies {
  """Airline these fare families are associated with"""
  airline: Airline!

  """
  A list of fare families sorted by their default ranking. Note, this is static data.
  """
  families: [FareFamily]
}

"""Airline information. NOTE: This is a legacy input node """
input AirlineInputSchema {
  code: String
}

type AirlineLoyaltyProgramSupplier {
  id: ID
  primary_supplier: Boolean

  """Airline"""
  airline: Airline
}

type AirlineNode {
  status: String
  code: String
  name: String
  short_name: String
  tags: JSONString
  deleted: Boolean
  created: DateTime
  modified: DateTime
  id: ID!
  phone: String
  version: Int
  url: String
  airline_alliance: AirlineAllianceNode
  airline_alliance_id: Int
  properties: GenericScalar
  other_alliance_airlines: JSONString
}

type AirlineRoute {
  """The estimated arrival time in the local timezone"""
  arrival_time: DateTime!

  """The IATA code of the airport at which this route arrives."""
  arrival_airport: Airport!

  """The departure time in the local timezone"""
  departure_time: DateTime!

  """The IATA code of the airport from which this route departs."""
  departure_airport: Airport!

  """Airline for this route"""
  airline: Airline!
  flight_number: Int

  """a list of layovers within this flight leg option"""
  layovers: [Layover]!
}

type AirlineRoutes {
  """Airline for this route"""
  airline: Airline!
  routes: [AirlineRoute]

  """Whether or not this airline also operates some of these routes"""
  has_operating_routes: Boolean
}

"""Represents an airport."""
type Airport {
  """The id of the airport."""
  id: ID

  """The name of the airport"""
  name: String

  """The airport's IATA 3-letter code"""
  code: String

  """The short name for the airport"""
  short_name: String

  """The state province the airport is located in"""
  state_province_code: String

  """The city the airport is located in"""
  city: String

  """The first line of the address"""
  street1: String

  """The second line of the address"""
  street2: String

  """The country of the airport."""
  country_code: ISOCountryCode

  """The latitude of the airport"""
  latitude: Float

  """The longitude of the airport"""
  longitude: Float

  """
  Some media for the airport. This isn't really structured and, if you want to
  use it, please talk with backend about your requirements so that we can better
  accomodate your needs with a more structured field.
  """
  media: GenericScalar
  searchable: Boolean

  """
  Standard IANA timezone strings (see: https://www.iana.org/time-zones). Example: 'America/New_York', 'Europe/London', etc.
  """
  timezone: String

  """The airport's website"""
  url: String

  """Whether this airport is a metropolitan area instead of a real airport."""
  is_metro_area: Boolean
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  deleted: Boolean @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  modified: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  properties: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  status: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  tags: JSONString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  version: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

"""
AisleBoundary contains two seat letters bounding an aisle on an aircraft
"""
type AisleBoundary {
  left_seat_letter: String
  right_seat_letter: String
}

enum AlternatePriceSource {
  ALT_PRICE_SOURCE_LOLA
}

type AlternatePricing {
  """Source of the alternate price"""
  source: AlternatePriceSource

  """
  The total price in cents including taxes and any fees associated with this fare
  """
  total_price: Int

  """Alternate price currency"""
  currency_code: ISOCurrencyCode

  """Alternate price converted into another currency"""
  converted_alternate_pricing(currency_code: ISOCurrencyCode!): AlternatePricing
}

type Amenity {
  name: RoomAmenity
  displayable_name: String

  """List of circumstances under which the amenity is offered."""
  qualifiers: [AmenityQualifier]
}

enum AmenityQualifier {
  """AFTERNOON"""
  AFTERNOON

  """AGE_RESTRICTIONS"""
  AGE_RESTRICTIONS

  """AT_FRONT_DESK"""
  AT_FRONT_DESK

  """COMPLIMENTARY"""
  COMPLIMENTARY

  """COVERED"""
  COVERED

  """DEPOSIT"""
  DEPOSIT

  """DISCOUNT"""
  DISCOUNT

  """EVENING"""
  EVENING

  """FALL"""
  FALL

  """FREE"""
  FREE

  """GROUP"""
  GROUP

  """HEATED"""
  HEATED

  """IN_COMMON_AREAS"""
  IN_COMMON_AREAS

  """IN_LOBBY"""
  IN_LOBBY

  """IN_MEETING_ROOMS"""
  IN_MEETING_ROOMS

  """IN_ROOM"""
  IN_ROOM

  """INDOOR"""
  INDOOR

  """LIMITED_HOURS"""
  LIMITED_HOURS

  """LOCAL"""
  LOCAL

  """MORNING"""
  MORNING

  """NEARBY"""
  NEARBY

  """OFF_SITE"""
  OFF_SITE

  """ON_SITE"""
  ON_SITE

  """OUTDOOR"""
  OUTDOOR

  """PAID"""
  PAID

  """POOLSIDE"""
  POOLSIDE

  """PRIVATE"""
  PRIVATE

  """PUBLIC"""
  PUBLIC

  """SEASONAL"""
  SEASONAL

  """SPRING"""
  SPRING

  """SUMMER"""
  SUMMER

  """SURCHARGE"""
  SURCHARGE

  """SWIM_UP"""
  SWIM_UP

  """TWENTY_FOUR_HOUR"""
  TWENTY_FOUR_HOUR

  """VIP"""
  VIP

  """WEEKDAYS_ONLY"""
  WEEKDAYS_ONLY

  """WEEKENDS_ONLY"""
  WEEKENDS_ONLY

  """WINTER"""
  WINTER

  """WITH_RESTRICTIONS"""
  WITH_RESTRICTIONS
}

"""Represents an app, which has config on it. """
type App {
  """App configuration information"""
  config: GenericScalar
}

type ArchiveGroupDepartment {
  ok: Boolean
  group_department: GroupDepartment
}

type AssignUsersGroupPolicy {
  num_users_added: Int
  num_users_removed: Int
  user_ids: [ID]
}

type BanUser {
  ok: Boolean
  user: User
}

"""DEPRECATED: THIS IS ONLY FOR LOLA WORKS AND WE SHOULD GET RID OF THIS"""
type BaseHotelRoomNightlyRateNode {
  promo_rate: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  is_promo: Boolean @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  tax: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  base_rate: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  date: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  local_tax: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  local_currency: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

enum BedCategory {
  """CALIFORNIA_KING"""
  CALIFORNIA_KING

  """FULL"""
  FULL

  """KING"""
  KING

  """QUEEN"""
  QUEEN

  """TWIN"""
  TWIN
}

"""A count of a particular type of bed in a hotel room"""
input BedCategoryCount {
  """The type of bed"""
  bed_category: BedCategory!

  """The number present of that bed type"""
  num: Int!
}

type BedCount {
  bed_category: BedCategory
  num_beds: Int
}

type BigBoardInternal {
  search_statistic(category: String!): SearchStatistic
  recent_flight_booking: RecentFlightBooking
  recent_hotel_booking: RecentHotelBooking
  performance_metrics(category: String!, interval: Int): PerformanceStatistic
}

type BillingAddress {
  id: String

  """Concatenated first/middle/last names"""
  name: String @deprecated(reason: "Use explicit first/middle/last name instead")
  first_name: String
  middle_name: String
  last_name: String
  address1: String
  address2: String
  city: String
  province_code: String
  country_code: String
  postal_code: String
}

input BillingAddressInput {
  """Required when not using deprecated `name`"""
  first_name: String
  middle_name: String

  """Required when not using deprecated `name`"""
  last_name: String
  name: String
  address1: String
  address2: String
  city: String
  province_code: String
  country_code: String
  postal_code: String
}

type BookCarRate {
  ok: Boolean
  booking: CarBooking
}

type BookedFlightNode {
  trip_plan_id: String
  trip_plan: TripPlanNode
  user_id: String
  user: UserNode!
  tags: JSONString
  deleted: Boolean
  trip_id: String
  trip: TripNode
  created: DateTime
  modified: DateTime
  id: ID!
  source: EnumString
  version: Int
  result: AirItineraryNode!
  query: UserQueryNode
  query_id: Int
  group_id: String
  group: GroupNode
  type: EnumString
  properties: GenericScalar
}

type BookedHotelRate {
  """A UUID that uniquely identifies the rate"""
  id: ID!

  """Normalized room category as defined in the enum RateCategory"""
  category: RateCategory

  """Nicely formatted rate category that can be displayed to client"""
  displayable_category: String
  description: String
  refundable: Boolean
  cancellation_policy: CancellationPolicy
  amenities: [Amenity]

  """Normalized view category as defined in the enum ViewCategory"""
  view_category: ViewCategory

  """Nicely formatted view category that can be displayed to client"""
  displayable_view_category: String

  """Legal/CC terms"""
  payment_terms: String

  """Normalized deposit type"""
  deposit_type: PartialPaymentType

  """
  A raw text description of the package - may include additional details unclear
  by the rate category and amenities definition alone.
  """
  package: String

  """
  Priceline-specific field indicating whether the rate is a Closed User Group
  rate -- these are usually cheaper than non CUG rates
  """
  is_cug_rate: Boolean

  """
  Priceline-specific field for the benchmark average nightly rate in cents for
  CUG rates. Used to compute savings w.r.t. the average nightly rate and does
  notinclude taxes or fees.
  """
  average_nightly_rate_benchmark: Int
  base_rate: Int!
  total_cost: Int!

  """The total of all taxes and fees"""
  total_tax: Int!

  """
  If != 0, the resort fee charged by the hotel on arrival. Not included as part of total_tax.
  """
  resort_fee: Int!

  """
  If != 0, additional fees charged by the hotel on arrival. Not included as part of total_tax.
  """
  mandatory_fee: Int!

  """A prepay fee that must be included in total taxes and fees."""
  mandatory_fee_prepay: Int

  """
  If != 0, additional taxes charged by the hotel on arrival, e.g. VAT or
  state/local taxes. Not included as part of total_tax.
  """
  mandatory_tax: Int!

  """If != 0, the service fee component of total_tax"""
  service_fee: Int!

  """
  An additional fee for extra people on the booking. Not included as part of total_tax
  """
  extra_person_fee: Int!

  """If != 0, the occupancy tax component of total_tax"""
  occupancy_tax: Int!

  """If != 0, the sales tax component of total_tax"""
  sales_tax: Int!

  """If != 0, the property tax component of total_tax"""
  property_fee: Int!

  """If != 0, the 'Tax' component of total_tax"""
  tax_surcharge: Int!
  average_nightly_rate: Int!
  eligible_for_loyalty_points: Boolean

  """Guideline details for this rate"""
  guidelines: HotelRateGuidelines

  """
  Check-in details for this room - likely to be HTML, but sanitized for safety during parsing
  """
  check_in_instructions: String

  """
  Special check-in details for this room - likely to be HTML, but sanitized for safety during parsing
  """
  special_check_in_instructions: String

  """Just for Lola Desktop"""
  backwards_compatible_amenities: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  payment_policy: EnumString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  rate_type: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")

  """Please use average_nightly_rate instead."""
  nightly_rates: [BaseHotelRoomNightlyRateNode] @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  currency: ISOCurrencyCode

  """Detailed taxes and fees info currently only from Priceline"""
  taxes_and_fees_information: [String]

  """
  Relevant reservation and hotel information (e.g. guarantee policy, room charge
  disclosure, etc.) currently only from Priceline
  """
  important_information: [String]

  """Whether the reservation is only partially refundable"""
  is_partially_refundable: Boolean

  """Whether the reservation is fully (i.e. total cost) refundable"""
  is_fully_refundable: Boolean

  """Whether the reservation is not refundable"""
  is_non_refundable: Boolean

  """Rate pricing in multiple currencies."""
  rate_pricing(
    """Currencies to return the rate pricing in."""
    currency_codes: [ISOCurrencyCode!]
  ): [HotelRatePricing]
  provider: DeprecatedBookedHotelProviderNode @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

type BookedHotelRoom {
  """A UUID that uniquely identifies the room"""
  id: ID!
  images: [HotelImage]
  room_description: String
  display_title: String

  """Normalized room category as defined in the enum RoomCategory"""
  room_category: RoomCategory

  """A collection of BedCount nodes"""
  bed_counts: [BedCount]
  media: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  room_type: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  rates: [BookedHotelRate]!
}

type BookedSeat {
  segment_id: ID @deprecated(reason: "Please request the segment on BookedSeat. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  segment: Segment
  traveler: BookingTravelerProfile!
  seat_letter: String!
  row_number: Int!
  is_premium: Boolean!
  premium_currency: EnumString
  premium_cost: Int

  """
  The status of whether a seat has been assigned. Can be in pending, success, failure, or unknown.
  """
  status: EnumString!
  booking_code: String
}

type BookFlightFare {
  ok: Boolean
  booking: FlightBooking
}

type BookHotelRate {
  ok: Boolean
  booking: HotelBooking
}

interface Booking {
  """The id of the booking"""
  id: ID

  """
  The provider used for making this booking. Generally sabre or amadeus. We should change this to an enum at some point.
  """
  provider: String

  """
  Whether or not this is an internal (our systems) or external booking. We should change this to an enum at some point.
  """
  source: EnumString

  """How a customer has catgorized/tagged this booking expense."""
  expense_tag: ExpenseTag @deprecated(reason: "Please use `expense_tags` to get all of the tags associated with the booking.")

  """How a customer has catgorized/tagged this booking expense."""
  expense_tags: [ExpenseTag]

  """The emails that are following this booking."""
  booking_followers: [BookingFollower]

  """The overall status of this booking, from a *user's* point of view."""
  booking_status: BookingStatus

  """
  A code representing the nature of why this booking errored (if it did). Note
  that more information about the error is available internally, but this
  provides a simple interface so clients can customize their messaging.
  """
  booking_error_key: String

  """The internal status of the booking, derived from its events."""
  status: String @deprecated(reason: "Please use `booking_status` for conveying statuses to users.")

  """
  Whether this booking has been processed and is ready to be displayed to a user.
  """
  consumable: Boolean

  """
  Indicates how likely it is that the booking is fradulent. Negative is good, positive is bad. From roughly -10 to 10.
  """
  fraud_score: Int

  """The loyalty programs that were successfully applied to this booking."""
  applied_user_loyalty_programs: [UserLoyaltyProgram]

  """The group this booking was made under."""
  group: Group

  """
  The group department under which this booking should be counted for reporting.
  """
  group_department: GroupDepartment

  """Information about what payment method was used to place this booking."""
  payment_info: PaymentInfo

  """The travelers for this booking"""
  travelers: [BookingTravelerProfile]

  """The email which will be used for expense reporting."""
  expensing_email: String

  """Whether or not this booking can be expensed"""
  expensable: Boolean

  """Whether or not this booking can have its expense sent"""
  expense_sendable: Boolean

  """Whether the expense has already been sent or not."""
  expense_sent: Boolean

  """The user who made/requested this booking."""
  user: User

  """The trips this booking is part of."""
  trips: [Trip]

  """A flag denoting whether or not this booking was made by you."""
  is_booked_by_you: Boolean

  """What the user paid for something."""
  price_details: PriceDetails

  """whether or not the booking is external or booked through Lola"""
  is_external: Boolean

  """
  When this booking was reported as being made, either by the provider or the importing user.
  """
  reported_booking_time: DateTime
  component: ItineraryComponentNode @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  component_id: String @deprecated(reason: "Please request the id on the component. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  component_type: String @deprecated(reason: "Please request the type on the component. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  deleted: Boolean @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  group_id: String @deprecated(reason: "Please request the id on the group instead. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  installation_id: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  modified: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  participants: JSONString @deprecated(reason: "Please request the travelers instead. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  previous_booking_id: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  tags: JSONString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  total_price: Int @deprecated(reason: "Please use price_details instead.")
  trip: TripNode @deprecated(reason: "This is unrelated to the current implementation of trips. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  trip_id: Int @deprecated(reason: "This is unrelated to the current implementation of trips. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  user_id: ID @deprecated(reason: "Please request the id on the user. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  version: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

input BookingDetailsInput {
  """Basis code for a passenger fare per flight segment"""
  basis_code: String

  """Booking code for a passenger fare per flight segment"""
  booking_code: String

  """the cabin type for this flight segment"""
  cabin_type: CabinType!

  """The uniquely-identifying ID of the segment to which these codes apply"""
  segment_id: ID

  """The branded name of a cabin type"""
  branded_product: String
}

type BookingDetailsNode {
  ticket_designator: String
  cabin_type: EnumString
  fare_rules: GenericScalar
  leg: LegNode!
  leg_id: Int
  available_seats: Int
  branded_product: String
  passenger_type: EnumString
  fare_type: String
  availability_type: String
  segment_group_id: String
  segment: SegmentNode!
  segment_id: Int
  id: ID!
  booking_code: String
  created: DateTime
  basis_code: String
  modified: DateTime
  fare_family_details: FareFamilyDetailsNode
  fare_family_details_id: Int
}

type BookingEventNode {
  requesting_user_id: String
  requesting_user: UserNode
  changed_objects: GenericScalar
  event_type: String
  component_type: EnumString
  created: DateTime
  deleted: Boolean
  modified: DateTime
  version: Int
  details: GenericScalar
  reported_timestamp: DateTime
  id: ID!
  booking: BookingNode!
  booking_id: Int
}

"""
BookingFollowers are pairings of emails and bookings that allow us to dispatch flight notifications to any email address
that is interested in following updates on a booking. This is part of the Friend Alerts feature.
"""
type BookingFollower {
  """The email of the person following the trip."""
  follower_email: String

  """The id of the trip that the email wants to follow."""
  trip_id: String

  """The id of the user traveling on this booking."""
  traveling_user_id: String

  """The code associated with the shared trip URL."""
  share_code: String
}

type BookingGroupLoyaltyAssociationNode {
  """The id of the booking_group_loyalty_association"""
  id: ID

  """The id of the group loyalty program used at time of booking"""
  group_loyalty_program_id: ID

  """The id of the group that made the booking"""
  group_id: ID

  """The actual booking id"""
  booking_id: ID

  """The program number in use at time of booking"""
  program_number: String

  """The type of program used for the booking"""
  program_type: String

  """The short name of the program used at time of booking"""
  program_name: String

  """The full name of the program used at time of booking"""
  program_long_name: String

  """The name of the supplier providing the loyalty program"""
  program_supplier_name: String

  """The loyalty program supplier code"""
  program_supplier_code: String
}

input BookingInput {
  booking_type: String
  booking_input: JSONString
}

type BookingLoyaltyProgram {
  id: ID

  """The user's loyalty program membership number."""
  number: String!

  """The name of the loyalty program"""
  name: String

  """The long name of the loyalty program"""
  long_name: String

  """The type of the loyalty program"""
  program_type: LoyaltyProgramType
}

type BookingNode {
  payment_account_id: String

  """
  Deprecated -- this reflects the latest event. Please use the booking_status
  for more consistent type independent information.
  """
  status: String
  tags: JSONString
  deleted: Boolean

  """This field is deprecated."""
  component: ItineraryComponentNode

  """This field is deprecated."""
  component_id: Int

  """
  The department the booking belongs to, as computed (or manually assigned) for reporting purposes.
  """
  group_department_id: String
  expensing_email: String

  """
  The total price in integer cents. Deprecated in favor of total_price_mills
  """
  total_price: Int
  user: UserNode!
  user_id: Int
  modified: DateTime

  """
  The type independent state of the booking. Starts in pending -> book,
  book_fail, book_unknown -> cancel, cancel_fail, cancel_unknown
  """
  booking_status: EnumString
  id: ID!

  """
  The total price in integer mills, nullable for backwards compatibility.  There
  is no default value so we can distinguish between booking created with integer
  cent values vs. the newer integer mills values
  """
  total_price_mills: Int
  fraud_score: Int

  """
  The datetime that the booking transaction was considered settled, it will be used for determine currency conversion rates
  """
  transaction_date: DateTime

  """
  This refers to the type of booking (for now, only flight or hotel). The name
  refers to the now-deprecated `ItineraryComponent` model, but now only the enum is in use.
  """
  component_type: EnumString
  created: DateTime
  participants: JSONString

  """
  This property is used to distinguish between internal and external bookings
  """
  source: EnumString

  """
  A point-in-time snapshot of the booking user's department in the booking's
  group, if any. Along with capturing the travelers' departments on BTPs, this
  will make us data-sufficient to revisit the logic of how we report on
  departments in the future.
  """
  user_group_department_id: String
  version: Int
  details: GenericScalar
  previous_booking_id: String
  provider: String

  """This field is deprecated."""
  expense_tag_id: String

  """This field is deprecated."""
  expense_tag: ExpenseTagNode

  """
  The group (team) that this booking belongs to. For instance, Alice is a member
  of the Lola Team and books a business trip, this field would point to the Lola
  Team. If she makes a personal booking, this shouldn't point to the Lola Team.
  """
  group_id: String

  """
  The ISOCurrencyCode of the currency that this booking transaction was settled in
  """
  currency_code: EnumString
  installation_id: String
}

input BookingReportingInfo {
  """The group this Booking is made on behalf of."""
  group_id: ID!

  """
  Deprecated: Please use `expense_tag_ids` instead. The ExpenseTag to use for this Booking.
  """
  expense_tag_id: ID

  """Up to 3 ExpenseTags to use for this Booking."""
  expense_tag_ids: [ID]

  """The email to use when automatically expensing this Booking."""
  expensing_email: String
}

enum BookingStatus {
  """BOOK_FAIL"""
  BOOK_FAIL

  """BOOK_UNKNOWN"""
  BOOK_UNKNOWN

  """BOOKED"""
  BOOKED

  """CANCEL_FAIL"""
  CANCEL_FAIL

  """CANCEL_UNKNOWN"""
  CANCEL_UNKNOWN

  """CANCELLED"""
  CANCELLED

  """PENDING"""
  PENDING
}

"""
A BookingTravelerProfile is a point-in-time representation of a TravelerProfile at booking. Each
BookingTravelerProfile represents someone who is booked and traveling as part of a Booking.
"""
type BookingTravelerProfile {
  """
  A display name for referring to this profile. E.g. Business International
  """
  profile_name: String

  """The first name of the traveler specified on their travel ID."""
  first_name: String

  """The middle name of the traveler specified on their travel ID."""
  middle_name: String

  """The last name of the traveler specified on their travel ID."""
  last_name: String

  """The generational suffix of a user. Ex: Jr./Sr./IV/III, etc"""
  generational_suffix: GenerationalSuffix

  """The gender of the traveler specified on their travel ID."""
  gender: Gender

  """The birthdate of the traveler specified on their travel ID."""
  birthdate: Date @deprecated(reason: "Removed PII, only birthyear is stored now")

  """The birth year of the traveler specified on their travel ID."""
  birthyear: Int

  """An alternative phone number for this profile."""
  phone: String

  """An alternative email to send booking confirmations to."""
  confirmation_email: String

  """Whether this profile should be auto shared to groups"""
  share_with_groups: Boolean

  """Whether this profile should be auto shared to groups"""
  is_group_profile: Boolean

  """
  Designates this profile as representing the user who owns it. This does not
  tell us whether or not the user who owns it "is you". Please use
  "this_traveler_is_you" for that
  """
  is_owning_user: Boolean

  """The country which issued the passport."""
  passport_country: ISOCountryCode

  """The date of expiration for the passport."""
  passport_expiration: Date

  """A passport number with no leading or trailing whitespace."""
  passport_number: String @deprecated(reason: "Removed PII, only last4 is stored now")

  """Last 4 of passport number with no leading or trailing whitespace."""
  passport_number_last4: String

  """
  A number issued to the traveler by the US TSA's Secure Flight program to match the traveler with
                         their watch list redress case.
  """
  redress_number: String @deprecated(reason: "Removed PII, only last4 is stored now")

  """
  Last 4 of a number issued to the traveler by the US TSA's Secure Flight program to
                         match the traveler with their watch list redress case.
  """
  redress_number_last4: String

  """
  A KTN is a nine digit number issued to the traveler by the Global Entry, NEXUS, SENTRI, or TSA
                         Pre programs run by the US Government. This is required to get a boarding pass which lets the
                         traveler use the TSA Precheck security lines.
  """
  known_traveler_number: String @deprecated(reason: "Removed PII, only last4 is stored now")

  """
  Last 4 of of a KTN, which is a nine digit number issued to the traveler by the Global Entry,
                         NEXUS, SENTRI, or TSA Pre programs run by the US Government. This is required to get a
                         boarding pass which lets the traveler use the TSA Precheck security lines.
  """
  known_traveler_number_last4: String

  """
  First digit of a KTN, which is a nine digit number issued to the traveler by the Global Entry,
                         NEXUS, SENTRI, or TSA Pre programs run by the US Government. This is required to get a
                         boarding pass which lets the traveler use the TSA Precheck security lines.
  """
  known_traveler_number_first_digit: String

  """DEPRECATED"""
  expense_partner_options: GenericScalar

  """First name of traveler, if different on passport"""
  passport_first_name: String

  """Middle name of traveler, if different on passport"""
  passport_middle_name: String

  """Last name of traveler, if different on passport"""
  passport_last_name: String

  """Suffix of traveler, if different on passport"""
  passport_suffix: String

  """This traveler's country of residence."""
  passport_country_of_residence: ISOCountryCode

  """This traveler's passport nationality."""
  passport_nationality: ISOCountryCode

  """This traveler's known traveler number expiration."""
  known_traveler_number_expiration: Date

  """The type of profile"""
  profile_type: TravelerProfileType

  """The id of the BookingTravelerProfile."""
  id: ID!

  """
  The original user who owned the TravelerProfile the BookingTravelerProfile was created from.
  """
  traveler_profile_secret_user_id: String

  """
  The original TravelerProfile which the BookingTravelerProfile was created from.
  """
  traveler_profile_secret_profile_id: String

  """
  The user who owns the TravelerProfile the BookingTravelerProfile was created from.
  """
  traveling_user: User

  """The TravelerProfile which the BookingTravelerProfile was created from."""
  traveler_profile: TravelerProfile

  """
  The name which should be displayed to the user as the title of this profile.
  This may or may not represent the actual name on the BTP.
  """
  display_name: String

  """
  The name which should be displayed to the user as the first name. This may or
  may not represent the actual name on the BTP.
  """
  display_first_name: String

  """
  The name which should be displayed to the user as the middle name. This may or
  may not represent the actual name on the BTP.
  """
  display_middle_name: String

  """
  The name which should be displayed to the user as the last name. This may or may not represent the actual name on the BTP.
  """
  display_last_name: String

  """The first name of the chaperone for this traveler, if there is one."""
  chaperone_first_name: String

  """The last name of the chaperone for this traveler, if there is one."""
  chaperone_last_name: String

  """The age group that the traveler belongs to at the time of booking."""
  age_group: BookingTravelerType

  """
  Designates whether or not this traveler is you for the current acting user.
  From the wombat console perspective, this relies on the console acting as the
  user it is asking for.
  """
  this_traveler_is_you: Boolean

  """The loyalty programs associated with this booking traveler profile."""
  loyalty_programs: [BookingLoyaltyProgram]
}

enum BookingTravelerType {
  """ADULT"""
  ADULT

  """CHILD"""
  CHILD

  """INFANT"""
  INFANT

  """INFANT_LAP"""
  INFANT_LAP

  """SENIOR"""
  SENIOR
}

type BrandedFare {
  name: String
  key: String
}

type BrandedFareOption {
  """The max cabin_type associated with these FareOptions"""
  cabin_type: CabinType

  """
  Airline-unique class pricing identifier for specifying the desired class of selected leg options
  """
  class_id: String

  """Branded name for the cabin class"""
  branded_name: String

  """Fare attributes (amenities)"""
  attributes: [FareAttribute]

  """A list of FareOptions ordered from least to most expensive"""
  fare_options: [FareOption]

  """Potential error"""
  error: FareUpsellError
}

type CabinClassPolicyDetailsNode {
  threshold: Int
  cabin_class: EnumString
  id: ID!
  modified: DateTime
  created: DateTime
}

type CabinClassPolicyNode {
  created: DateTime
  deleted: Boolean
  tags: JSONString
  modified: DateTime
  policy_category: EnumString
  id: ID!
  version: Int
  details: CabinClassPolicyDetailsNode!
  policy_type: EnumString
  group_id: String
  group: GroupNode!
  properties: GenericScalar
}

enum CabinType {
  """BASIC_ECONOMY"""
  BASIC_ECONOMY

  """BUSINESS"""
  BUSINESS

  """ECONOMY"""
  ECONOMY

  """FIRST"""
  FIRST

  """PREMIUM_ECONOMY"""
  PREMIUM_ECONOMY
}

"""
Deprecated: unfortunately not compatible with autoconverted enums, which we should be using. Do not reference in new things.
"""
enum CabinTypeOld {
  business
  economy
  first
  premium
}

"""
A CalendarFeed allows users to create a link that will give them automatic updates to their calendar client,
such as Google, Outlook, etc.
"""
type CalendarFeed {
  """
  UUID used to differentiate which entity_type and entity_id to use so the proper calendar
          can be created.
  """
  calendar_feed_uuid: String

  """ID of one of the entity types defined in CalendarFeedEntityTypes"""
  entity_id: ID

  """Type of entity that the uuid belongs to. (i.e. group)"""
  entity_type: CalendarFeedEntityTypes

  """The id of the CalendarFeed."""
  id: ID!

  """The url that the user will see in order to access their calendar feed"""
  url: String
}

enum CalendarFeedEntityTypes {
  """GROUP"""
  GROUP

  """USER"""
  USER
}

type CancelCarBooking {
  ok: Boolean
  booking: CarBooking
}

type CancelFlightBooking {
  ok: Boolean
  booking: FlightBooking
}

type CancelHotelBooking {
  ok: Boolean
  booking: HotelBooking
}

type CancellationPolicy {
  description: String
  segments: [CancellationPolicySegment]!

  """Please request description instead."""
  normalized_policy_description: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")

  """Please request segments instead."""
  normalized_segments: [CancellationPolicySegment] @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

type CancellationPolicySegment {
  deadline: DateTime

  """
  This is no longer requested by lola-desktop, but needs to stay here until we
  decide how to remove GraphQL fields without breaking older versions of the mobile app
  """
  percentage: String
  amount: Int
  total_penalty_amount: Int
}

type Car {
  """An example of the model of car offered"""
  example_model: String

  """The description of the car offered"""
  description: String
  category: CarCategoryPair
  type: CarTypePair

  """Passenger capacity"""
  num_passengers: Int

  """Bag/luggage capacity"""
  num_bags: Int

  """Door config"""
  num_doors: String
  transmission_type: TransmissionType
  has_ac: Boolean
  images: [CarImage]
}

type CarAgency {
  name: String
  code: String
  logo_url: String
}

type CarBooking implements Booking {
  """The id of the booking"""
  id: ID

  """
  The provider used for making this booking. Generally sabre or amadeus. We should change this to an enum at some point.
  """
  provider: String

  """
  Whether or not this is an internal (our systems) or external booking. We should change this to an enum at some point.
  """
  source: EnumString

  """How a customer has catgorized/tagged this booking expense."""
  expense_tag: ExpenseTag @deprecated(reason: "Please use `expense_tags` to get all of the tags associated with the booking.")

  """How a customer has catgorized/tagged this booking expense."""
  expense_tags: [ExpenseTag]

  """The emails that are following this booking."""
  booking_followers: [BookingFollower]

  """The overall status of this booking, from a *user's* point of view."""
  booking_status: BookingStatus

  """
  A code representing the nature of why this booking errored (if it did). Note
  that more information about the error is available internally, but this
  provides a simple interface so clients can customize their messaging.
  """
  booking_error_key: String

  """The internal status of the booking, derived from its events."""
  status: String @deprecated(reason: "Please use `booking_status` for conveying statuses to users.")

  """
  Whether this booking has been processed and is ready to be displayed to a user.
  """
  consumable: Boolean

  """
  Indicates how likely it is that the booking is fradulent. Negative is good, positive is bad. From roughly -10 to 10.
  """
  fraud_score: Int

  """The loyalty programs that were successfully applied to this booking."""
  applied_user_loyalty_programs: [UserLoyaltyProgram]

  """The group this booking was made under."""
  group: Group

  """
  The group department under which this booking should be counted for reporting.
  """
  group_department: GroupDepartment

  """Information about what payment method was used to place this booking."""
  payment_info: PaymentInfo

  """The travelers for this booking"""
  travelers: [BookingTravelerProfile]

  """The email which will be used for expense reporting."""
  expensing_email: String

  """Whether or not this booking can be expensed"""
  expensable: Boolean

  """Whether or not this booking can have its expense sent"""
  expense_sendable: Boolean

  """Whether the expense has already been sent or not."""
  expense_sent: Boolean

  """The user who made/requested this booking."""
  user: User

  """The trips this booking is part of."""
  trips: [Trip]

  """A flag denoting whether or not this booking was made by you."""
  is_booked_by_you: Boolean

  """What the user paid for something."""
  price_details: PriceDetails

  """whether or not the booking is external or booked through Lola"""
  is_external: Boolean

  """
  When this booking was reported as being made, either by the provider or the importing user.
  """
  reported_booking_time: DateTime
  component: ItineraryComponentNode @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  component_id: String @deprecated(reason: "Please request the id on the component. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  component_type: String @deprecated(reason: "Please request the type on the component. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  deleted: Boolean @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  group_id: String @deprecated(reason: "Please request the id on the group instead. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  installation_id: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  modified: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  participants: JSONString @deprecated(reason: "Please request the travelers instead. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  previous_booking_id: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  tags: JSONString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  total_price: Int @deprecated(reason: "Please use price_details instead.")
  trip: TripNode @deprecated(reason: "This is unrelated to the current implementation of trips. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  trip_id: Int @deprecated(reason: "This is unrelated to the current implementation of trips. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  user_id: ID @deprecated(reason: "Please request the id on the user. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  version: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")

  """
  Car agency confirmation code. This is the one that the traveler cares about.
  """
  confirmation_number: String

  """
  Provider confirmation code. This is the one that the agents use to service the booking.
  """
  provider_confirmation_number: String
  guidelines_info: GroupCarBookingGuidelinesInfo
  rate: CarRate

  """
  Whether the booked price was different than what was expected. The difference
  should always be in favor of the customer. A price may drop when booking with
  a personal loyalty program.
  """
  price_changed_on_book: Boolean

  """
  The original expected total price. Only returned when `price_changed_on_book` is true
  """
  original_total_price: Int
}

enum CarCategory {
  """COMPACT"""
  COMPACT

  """COMPACT_ELITE"""
  COMPACT_ELITE

  """ECONOMY"""
  ECONOMY

  """ECONOMY_ELITE"""
  ECONOMY_ELITE

  """FULLSIZE"""
  FULLSIZE

  """FULLSIZE_ELITE"""
  FULLSIZE_ELITE

  """LUXURY"""
  LUXURY

  """LUXURY_ELITE"""
  LUXURY_ELITE

  """MIDSIZE"""
  MIDSIZE

  """MIDSIZE_ELITE"""
  MIDSIZE_ELITE

  """MINI"""
  MINI

  """MINI_ELITE"""
  MINI_ELITE

  """OVERSIZE"""
  OVERSIZE

  """PREMIUM"""
  PREMIUM

  """PREMIUM_ELITE"""
  PREMIUM_ELITE

  """STANDARD"""
  STANDARD

  """STANDARD_ELITE"""
  STANDARD_ELITE

  """SUPPLIERS_CHOICE"""
  SUPPLIERS_CHOICE
}

type CarCategoryPair {
  key: CarCategory
  value: String
}

type CarDetailedLocationInfo {
  address: String
  latitude: Float
  longitude: Float
  is_airport: Boolean
  is_in_terminal: Boolean
  airport: Airport

  """
  Google directions from a given lat/long to the car pickup/dropoff location
  """
  google_directions(
    """
    starting point lat/long for a google directions lookup to the car pickup/dropoff location
    """
    starting_point: LocationInput!
  ): [GoogleDirectionsRoute]
  time: DateTime
  tz: Float
  phone_number: String
  hours: String
  counter_details: String
}

type CarDetailedPricing {
  """Base price in cents"""
  base_price: Int

  """Daily price in cents"""
  daily_price: Int

  """(Daily price * number of days) + taxes and fees in cents"""
  total_price: Int
  display_base_price: String
  display_total_price: String
  display_pay_now_price: String
  display_pay_later_price: String
  payment_type: CarPaymentType
  requires_credit_card: Boolean
  free_cancellation: Boolean
  is_cancellable: Boolean
  display_currency: ISOCurrencyCode
  local_currency: ISOCurrencyCode

  """The number of days that this booking is from the provider perspective"""
  number_of_days: Int
  taxes_and_fees: CarTaxesAndFees
  price_disclaimer: String
  is_corporate_rate: Boolean
  corporate_rate_code: String
}

type CarImage {
  """The intended device size"""
  size: DeviceType

  """The image url"""
  url: String
}

type CarImportantInformationItem {
  title: String
  text: String

  """Whether this item must be display on the checkout page"""
  is_mandatory: Boolean
}

type CarLocationInfo {
  address: String
  latitude: Float
  longitude: Float
  is_airport: Boolean
  is_in_terminal: Boolean
  airport: Airport

  """
  Google directions from a given lat/long to the car pickup/dropoff location
  """
  google_directions(
    """
    starting point lat/long for a google directions lookup to the car pickup/dropoff location
    """
    starting_point: LocationInput!
  ): [GoogleDirectionsRoute]
}

type CarLoyaltyProgramSupplier {
  id: ID
  primary_supplier: Boolean

  """Car Agency"""
  car_agency: CarAgency
}

type CarOption {
  """A unique car option ID that includes the pricing details"""
  id: ID

  """A "shared" unique car option ID that does not include pricing details"""
  non_price_id: ID
  car: Car
  agency: CarAgency
  pricing: CarPricing
  rules: CarRules
  pickup_info: CarLocationInfo
  dropoff_info: CarLocationInfo
}

enum CarPaymentType {
  """POSTPAY"""
  POSTPAY

  """PREPAY"""
  PREPAY
}

type CarPolicyInformationItem {
  title: String
  text: String
}

type CarPricing {
  """Base price in cents"""
  base_price: Int

  """Daily price in cents"""
  daily_price: Int

  """(Daily price * number of days) + taxes and fees in cents"""
  total_price: Int
  display_base_price: String
  display_total_price: String
  display_pay_now_price: String
  display_pay_later_price: String
  payment_type: CarPaymentType
  requires_credit_card: Boolean
  free_cancellation: Boolean
  is_cancellable: Boolean
  display_currency: ISOCurrencyCode
  local_currency: ISOCurrencyCode
}

type CarRate {
  """An ID that maps to a contract in Priceline's system"""
  contract_id: ID
  pricing: CarDetailedPricing
  agency: CarAgency
  pickup_info: CarDetailedLocationInfo
  dropoff_info: CarDetailedLocationInfo
  important_information: [CarImportantInformationItem]
  car_policy_information: [CarPolicyInformationItem]
  shuttle_information: String
  rules: CarRules
  car: Car
}

input CarRateParams {
  car_option_id: ID!
  user_loyalty_program_id: ID
}

type CarRules {
  mileage_rule_type: MileageRuleType
  allowed_mileage: Int
  requires_credit_card: Boolean
}

input CarSearchLocationInput {
  """Type of Location Query"""
  type: CarSearchLocationType!

  """Name of Location"""
  name: String

  """Locations database ID"""
  location_id: ID

  """Airport code"""
  code: String

  """Latitude of search location"""
  latitude: String

  """Longitude of search location"""
  longitude: String
}

enum CarSearchLocationType {
  """AIRPORT"""
  AIRPORT

  """LATLONG"""
  LATLONG

  """LOCATION"""
  LOCATION
}

type CarStream {
  """The unique identifier for this stream"""
  stream_id: ID!

  """
  Indication of whether this stream is complete, meaning there are no longer any
  pending flight searches and so polling can stop
  """
  complete: Boolean!

  """
  An int between 0-100 indicating an approximate completion percentage of this stream
  """
  percent_complete: Int

  """Whether this search has guidelines that will be sent"""
  has_guidelines_set: Boolean

  """Guideline information related to this stream"""
  guidelines: GroupCarGuidelines
  car_options: [CarOption]!

  """Error keys raised during search stream execution"""
  error_keys: [String]
}

input CarStreamInit {
  """Car pickup location"""
  pickup_location: CarSearchLocationInput!

  """Car pickup date"""
  pickup_date: Date!

  """Car pickup time in 24-hour string format (e.g., 13:00:00)"""
  pickup_time: String

  """Car dropoff location"""
  dropoff_location: CarSearchLocationInput!

  """Car dropoff date"""
  dropoff_date: Date!

  """Car dropoff time in 24-hour string format (e.g., 13:00:00))"""
  dropoff_time: String
}

input CarStreamPoll {
  """The unique identifier for this stream"""
  stream_id: ID!

  """Return results from the beginning of the stream."""
  reset: Boolean = false
}

type CarTaxesAndFees {
  total: Int
  display_total: String
  breakdown: [CarTaxOrFee]
}

type CarTaxOrFee {
  title: String
  price: Int
  display_price: String
}

enum CarType {
  """CAR"""
  CAR

  """CONVERTIBLE"""
  CONVERTIBLE

  """MONOSPACE"""
  MONOSPACE

  """MOTOR_HOME"""
  MOTOR_HOME

  """PICKUP_TRUCK"""
  PICKUP_TRUCK

  """RECREATIONAL_VEHICLE"""
  RECREATIONAL_VEHICLE

  """SUPPLIERS_CHOICE"""
  SUPPLIERS_CHOICE

  """SUV"""
  SUV

  """TWO_WHEEL_VEHICLE"""
  TWO_WHEEL_VEHICLE

  """VAN"""
  VAN
}

type CarTypePair {
  key: CarType
  value: String
}

type ChangeGroupDestinationName {
  ok: Boolean
  group_destination: GroupDestination
}

type ChangeOwnershipOfProfile {
  ok: Boolean
  traveler_profile: TravelerProfile
}

"""Grants or revokes access to corporate cards. """
type ChangePaymentMethodAccess {
  ok: Boolean
}

enum ClearableTravelerProfileField {
  birthdate
  birthyear
  gender
  generational_suffix
  known_traveler_number
  known_traveler_number_expiration
  known_traveler_number_first_digit
  known_traveler_number_last4
  middle_name
  passport_country
  passport_country_of_residence
  passport_expiration
  passport_first_name
  passport_last_name
  passport_middle_name
  passport_nationality
  passport_number
  passport_number_last4
  passport_suffix
  phone
  redress_number
  redress_number_last4
}

"""Clears an enqueued booking."""
type ClearEnqueuedBooking {
  ok: Boolean
}

"""Configure an integration with an ExpensePartner."""
type ConfigureExpensePartner {
  ok: Boolean
  expense_partner_config: ExpensePartnerConfig
}

"""Represents a fare that has been converted into a different currency"""
type ConvertedFare {
  """Fare currency code"""
  currency_code: ISOCurrencyCode

  """The base price of the fare."""
  base_price: Int

  """The total price of the fare."""
  total_price: Int

  """The total tax of the fare."""
  total_tax: Int

  """The penalty associated with a refund"""
  refund_penalty: Int
}

"""GroupFlightBookingGuidelinesInfo converted into a different currency"""
type ConvertedGroupFlightBookingGuidelinesInfo {
  """Currency code of the converted guidelines info"""
  currency_code: ISOCurrencyCode

  """Total price of the booking in hundredths"""
  total_price: Int

  """Price target cap in hundredths before wiggle room is applied"""
  guideline_base_price: Int

  """Price target cap in hundredths including wiggle room policy"""
  max_price: Int

  """Price target cap in hundredths including non-stop wiggle room policy"""
  non_stop_max_price: Int
}

"""
A GroupHotelBookingGuidelinesInfo that has been converted into a particular currency
"""
type ConvertedGroupHotelBookingGuidelinesInfo {
  """The guidelines applied to this booking"""
  guidelines: GroupHotelGuidelines

  """The group these guidelines apply to"""
  group: Group

  """Total price of the booking"""
  total_price: Int

  """City in which this booking will take place"""
  city: String

  """Target price cap set by Harrison"""
  harrison_adjusted_price: Int

  """Whether or not the booking is within guidelines"""
  within_guidelines: Boolean

  """Reason code for booking out of guidelines"""
  reason_for_booking_out_of_guidelines_code: OutOfGuidelinesReasonCode

  """User entered reason for why they booked out of guidelines"""
  reason_for_booking_out_of_guidelines: String
  currency_code: ISOCurrencyCode
}

type CreateBooking {
  ok: Boolean
}

"""
Return a shared code and url for a trip.
The user creating the code must have access to the trip.
The returned url can be used by the trip owner and
public users to view the trip. The frontend owns
the logic for determining if the current user should
view the contents of the Trip or PublicTrip graphql node.
"""
type CreateCode {
  code: String
  url: String
}

type CreateDestination {
  ok: Boolean
  group_destination: GroupDestination
}

type CreateEmployeesRN {
  ok: Boolean
}

"""Add a payment account to a pre-existing expense config"""
type CreateExpensePartnerPaymentAssociation {
  ok: Boolean
}

type CreateExpenseTag {
  ok: Boolean
  expense_tag: ExpenseTag
}

type CreateFlightCostEvent {
  ok: Boolean
  cost_event_id: ID
}

type CreateGroupDepartment {
  ok: Boolean
  group_department: GroupDepartment
}

type CreateGroupLoyaltyProgramAssociation {
  ok: Boolean

  """The ID of the group loyalty association created"""
  id: ID
}

type CreateGroupPolicyAssignment {
  ok: Boolean
  group_policy_assignment: GroupPolicyAssignment
}

type CreateGroupRecommendation {
  group_recommendation: GroupRecommendation
  group_recommendation_summary: GroupRecommendationSummary @deprecated(reason: "If this is ultimately needed, we will expose it differently")
}

type CreateNote {
  agent_note: AgentNote
}

type CreatePaymentMethod {
  payment_method: PaymentMethod
}

"""Creates a TravelerProfile belonging to the given user."""
type CreateTravelerProfile {
  ok: Boolean
  traveler_profile: TravelerProfile
}

"""Price details in a specific currency."""
type CurrencyPriceDetails {
  """The ISO 4217 currency code."""
  currency_code: ISOCurrencyCode

  """The total cost in 100ths of a currency unit."""
  total_cost: Int

  """The total tax in 100ths of a currency unit."""
  total_tax: Int

  """The total fees in 100ths of a currency unit."""
  total_fees: Int
}

type CustomBooking implements Booking {
  id: ID

  """
  The provider used for making this booking. Generally sabre or amadeus. We should change this to an enum at some point.
  """
  provider: String

  """
  Whether or not this is an internal (our systems) or external booking. We should change this to an enum at some point.
  """
  source: EnumString

  """How a customer has catgorized/tagged this booking expense."""
  expense_tag: ExpenseTag @deprecated(reason: "Please use `expense_tags` to get all of the tags associated with the booking.")

  """How a customer has catgorized/tagged this booking expense."""
  expense_tags: [ExpenseTag]

  """The emails that are following this booking."""
  booking_followers: [BookingFollower]

  """The overall status of this booking, from a *user's* point of view."""
  booking_status: BookingStatus

  """
  A code representing the nature of why this booking errored (if it did). Note
  that more information about the error is available internally, but this
  provides a simple interface so clients can customize their messaging.
  """
  booking_error_key: String

  """The internal status of the booking, derived from its events."""
  status: String @deprecated(reason: "Please use `booking_status` for conveying statuses to users.")

  """
  Whether this booking has been processed and is ready to be displayed to a user.
  """
  consumable: Boolean

  """
  Indicates how likely it is that the booking is fradulent. Negative is good, positive is bad. From roughly -10 to 10.
  """
  fraud_score: Int

  """The loyalty programs that were successfully applied to this booking."""
  applied_user_loyalty_programs: [UserLoyaltyProgram]

  """The group this booking was made under."""
  group: Group

  """
  The group department under which this booking should be counted for reporting.
  """
  group_department: GroupDepartment

  """Information about what payment method was used to place this booking."""
  payment_info: PaymentInfo

  """The travelers for this booking"""
  travelers: [BookingTravelerProfile]

  """The email which will be used for expense reporting."""
  expensing_email: String

  """Whether or not this booking can be expensed"""
  expensable: Boolean

  """Whether or not this booking can have its expense sent"""
  expense_sendable: Boolean

  """Whether the expense has already been sent or not."""
  expense_sent: Boolean

  """The user who made/requested this booking."""
  user: User

  """The trips this booking is part of."""
  trips: [Trip]

  """A flag denoting whether or not this booking was made by you."""
  is_booked_by_you: Boolean

  """What the user paid for something."""
  price_details: PriceDetails

  """whether or not the booking is external or booked through Lola"""
  is_external: Boolean

  """
  When this booking was reported as being made, either by the provider or the importing user.
  """
  reported_booking_time: DateTime
  component: ItineraryComponentNode @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  component_id: String @deprecated(reason: "Please request the id on the component. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  component_type: String @deprecated(reason: "Please request the type on the component. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  deleted: Boolean @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  group_id: String @deprecated(reason: "Please request the id on the group instead. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  installation_id: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  modified: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  participants: JSONString @deprecated(reason: "Please request the travelers instead. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  previous_booking_id: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  tags: JSONString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  total_price: Int @deprecated(reason: "Please use price_details instead.")
  trip: TripNode @deprecated(reason: "This is unrelated to the current implementation of trips. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  trip_id: Int @deprecated(reason: "This is unrelated to the current implementation of trips. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  user_id: ID @deprecated(reason: "Please request the id on the user. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  version: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")

  """
  For the title of the booking in the trip's itinerary view. e.g., Avis car rental
  """
  title: String

  """The type of the booking, for display"""
  custom_type: String

  """The start of this custom booking"""
  start_date: DateTime

  """The end of this custom booking"""
  end_date: DateTime
  payment_policy: PaymentPolicy
  customer_confirmation_code: String

  """The ordered sections of fields for this custom booking"""
  sections: [CustomBookingSection]
  guideline_info: [CustomBookingInfo]
}

type CustomBookingField {
  id: ID

  """The label of the custom field"""
  name: String

  """The value of the custom field"""
  value: GenericScalar

  """Allows the user to toggle visibility of free text."""
  display_can_toggle: Boolean

  """The suggested width of this field for display"""
  display_width: CustomBookingFieldDisplayWidth
}

enum CustomBookingFieldDisplayWidth {
  """FULL"""
  FULL

  """HALF"""
  HALF
}

input CustomBookingFieldInput {
  """The label of the custom field"""
  name: String

  """The value of the custom field"""
  value: GenericScalar

  """The type of field"""
  type: CustomBookingFieldType

  """Allows the user to toggle visibility of free text."""
  display_can_toggle: Boolean = false

  """The suggested width of this field for display"""
  display_width: CustomBookingFieldDisplayWidth
}

enum CustomBookingFieldType {
  """DEFAULT"""
  DEFAULT
}

type CustomBookingGuideline {
  booking_id: String
  guideline_id: String
  spending_cap: Int
}

type CustomBookingInfo {
  guideline: CustomBookingGuideline
}

input CustomBookingInfoInput {
  """the type of custom booking"""
  custom_type: CustomBookingType!

  """The start of the booking"""
  start_date: DateTime!

  """The end of the booking"""
  end_date: DateTime!

  """prepay/postpay/deposit"""
  payment_policy: PaymentPolicy!

  """The user-facing confirmation number, if any"""
  customer_confirmation_code: String

  """The base rate for the booking, without taxes or fees"""
  base_rate: Int!

  """The sum of all taxes applied to the booking"""
  total_taxes: Int = 0

  """The sum of all fees applied to the booking"""
  total_fees: Int = 0

  """The ordered sections of fields for this custom booking"""
  sections: [CustomBookingSectionInput]!

  """
  Descriptive title relevant to the custom booking (ex: Hertz car rental)
  """
  display_title: String!
}

type CustomBookingSection {
  id: ID

  """Used for label text in the section header."""
  name: String

  """The ordered fields in this section"""
  fields: [CustomBookingField]
}

input CustomBookingSectionInput {
  """Used for label text in the section header."""
  name: String!

  """The ordered fields in this section"""
  fields: [CustomBookingFieldInput]!
}

enum CustomBookingType {
  """BUS"""
  BUS

  """CAR"""
  CAR

  """CRUISE"""
  CRUISE

  """FERRY"""
  FERRY

  """FLIGHT"""
  FLIGHT

  """HOTEL"""
  HOTEL

  """OTHER"""
  OTHER

  """RESTAURANT"""
  RESTAURANT

  """TRAIN"""
  TRAIN
}

type CustomerNode {
  status: String
  created: DateTime
  auto_renew_on: Boolean
  is_paid: Boolean
  credit_amount: Int
  modified: DateTime
  version: Int
  parent_customer: CustomerNode
  parent_customer_id: Int
  next_renewal_date: DateTime
  customer_id: String
  id: ID!
}

input CustomerRegistrationInput {
  hubspot_id: String!
  salesforce_id: String
  admin_email: String!
  company_name: String!
  acquisition_pipeline: String!
}

enum DailyWeeklyPreferenceType {
  """daily"""
  daily

  """never"""
  never

  """weekly"""
  weekly
}

"""
The `Date` scalar type represents a Date
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar Date

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

type DaySavingsSummary {
  policy_savings: Int
  alt_price_savings: Int
  total_savings: Int
  spend: Int
  num_bookings: Int
  num_travelers: Int
  num_bookings_assoc_with_dep: Int
  date: String
}

type DayTripCounts {
  booked_count: Int
  upcoming: Int
  active: Int
  past: Int
  top_destinations: [TopDestination]
  hours_traveled: Int
  days_traveled: Int
  miles_traveled: Int
  date: String
}

"""
Activates an ExpensePartner for the group. Only one partner can be active.
"""
type DeactivateExpensePartner {
  expense_partner_config: ExpensePartnerConfig
}

type DeleteAddress {
  id: String
}

type DeleteBookingExpense {
  ok: Boolean
  booking: Booking
}

"""Deleting a default payment method that we will autoselect when booking"""
type DeleteDefaultPaymentMethod {
  ok: Boolean
}

"""Delete a PaymentAccountExpensePartnerConfigsAssociation."""
type DeleteExpensePartnerPaymentAssociation {
  ok: Boolean
}

"""Deletes a favorite airline for a user."""
type DeleteFavoriteAirline {
  ok: Boolean
  airline_id: ID
}

type DeleteFavoriteHotel {
  ok: Boolean
  hotel_id: ID
}

type DeleteGroupLoyaltyProgramAssociation {
  ok: Boolean

  """The ID of the deleted record"""
  id: ID
}

type DeleteGroupPolicyAssignment {
  user_ids_removed: [ID]
}

"""Deletes the home airport for the user."""
type DeleteHomeAirport {
  ok: Boolean
  airport_code: String!
}

type DeleteNote {
  ok: Boolean
}

type DeletePassport {
  id: String
}

type DeletePaymentMethod {
  id: String
}

type DeleteTravelerLoyalty {
  id: String
}

"""Deletes a given TravelerProfile."""
type DeleteTravelerProfile {
  ok: Boolean
  traveler_profile: TravelerProfile
}

type DeleteUserLoyalty {
  id: String
}

type DepartmentSavingsSummary {
  total: VerticalSavingsSummary
  flights: VerticalSavingsSummary
  hotels: VerticalSavingsSummary
  cars: VerticalSavingsSummary
  id: ID
  name: String
}

"""
DEPRECATED: THIS IS ONLY FOR THE WOMBAT CONSOLE AND WE SHOULD GET RID OF THIS,
this get the provider off the HotelProvider pogo
"""
type DeprecatedAvailableHotelProviderNode {
  name: String @deprecated(reason: "We should use the provider enum off HotelBookingInfo")
}

"""
DEPRECATED: THIS IS ONLY FOR THE WOMBAT CONSOLE AND WE SHOULD GET RID OF THIS
"""
type DeprecatedBookedHotelProviderNode {
  name: String @deprecated(reason: "We should use the provider enum off HotelBookingInfo")
}

type DerivedHotelAttributesNode {
  price_level: Int
  attributes_version: Int
  curated_extras: GenericScalar
  citycenter: String
  trustyou_version: Int
  id: ID!
  category_version: Int
  category: String
  created: DateTime
  modified: DateTime
  trustyou: GenericScalar
  citycenter_distance: Float
  landmark: String
  attributes: GenericScalar
  price_level_version: Int
  landmark_distance: Float
}

type DesktopWomconBookingsTable {
  """Entire search results count"""
  row_count: Int
  rows: [DesktopWomconBookingsTableRow]
}

input DesktopWomconBookingsTableQueryParams {
  """Format should be yyyy-mm-dd"""
  start_date: String

  """Format should be yyyy-mm-dd"""
  end_date: String

  """Search by user ids. It will match booking.user_id"""
  user_ids: [ID]

  """Search by group ids. It will match booking.group_id"""
  group_ids: [ID]

  """Airline code, e.g., DL for Delta Airline"""
  airlines: [String]

  """Airport code, e.g., BOS for Boston"""
  airports: [String]

  """Airline confirmation number e.g. AA123"""
  air_confirm_nums: [String]

  """Flight number e.g. AA123"""
  flight_nums: [String]

  """
  Column names to sort by as in DesktopWomconBookingsTableRow and its direction i.e., asc or desc
  """
  sort_by: [[String]]

  """Booking traveler profile full names"""
  booking_traveler_full_names: [String]
  row_per_page: Int
  page: Int

  """
  Only return bookings with a booking_status column whose enum value is in this
  list. If this list is not provided or empty, all booking statuses will be
  returned in results.
  """
  booking_statuses: [BookingStatus]
}

type DesktopWomconBookingsTableRow {
  booking_id: ID

  """owning user's ID"""
  user_id: ID

  """Type of booking such as flight, hotel, car, or custom"""
  booking_type: String

  """Title of the booking. e.g., BOS-LAX or Grand Hilton Back Bay"""
  description: String
  booking_start_date: DateTime
  booking_end_date: DateTime

  """
  Name of the last event related to the booking. e.g., booked, pnr_updated, ticket_created, etc.
  """
  last_event: String

  """
  A person who actually booked. If wombat booked on behalf of a customer, this will be the wombat's full name
  """
  booker: DesktopWomconBookingsTableRowUser

  """
  'external' if the user is an agent who imported using external import'pnr' if
  the user is an agent who imported using PNR import'user' if the user is an
  owning user who booked by themselves
  """
  booker_type: String

  """owning user's ID"""
  group_id: ID

  """Group's name. Most time this will be the company name"""
  group_name: String

  """Either 'lola' or external_partner's name. e.g., 'gbt'"""
  hub_name: String

  """
  Related booking_traveler_profiles: traveler_profile_id, first_name, last_name
  """
  travelers: [DesktopWomconBookingsTableRowTravelerProfile]

  """Related passenger_fare's pnr_refs"""
  pnr_refs: [String]

  """Total cost of the booking"""
  total_price: Int

  """
  For custom bookings, the type of custom booking (e.g. 'car'), otherwise empty string
  """
  custom_type: String

  """The overall status of this booking, from a *user's* point of view."""
  booking_status: String
}

type DesktopWomconBookingsTableRowTravelerProfile {
  traveler_profile_id: ID
  first_name: String
  middle_name: String
  last_name: String
  confirmation_email: String
}

type DesktopWomconBookingsTableRowUser {
  user_id: ID
  first_name: String
  last_name: String
}

type DesktopWomconTripsTable {
  """Entire search results count"""
  row_count: Int
  rows: [DesktopWomconTripsTableRow]
}

input DesktopWomconTripsTableQueryParams {
  """start_date on booking entries: Format should be yyyy-mm-dd"""
  start_date: String

  """end_date on booking entries: Format should be yyyy-mm-dd"""
  end_date: String

  """Search by user ids. It will match booking.user_id"""
  user_ids: [ID]

  """Search by group ids. It will match booking.group_id"""
  group_ids: [ID]

  """Airline code, e.g., DL for Delta Airline"""
  airlines: [String]

  """Airport code, e.g., BOS for Boston"""
  airports: [String]

  """Airline confirmation number e.g. AA123"""
  air_confirm_nums: [String]

  """Flight number e.g. AA123"""
  flight_nums: [String]
  sort_by: [[String]]
  row_per_page: Int

  """Booking traveler profile full names"""
  booking_traveler_full_names: [String]
  page: Int

  """
  Only return bookings with a booking_status column whose enum value is in this
  list. If this list is not provided or empty, all booking statuses will be
  returned in results.
  """
  booking_statuses: [BookingStatus]
}

type DesktopWomconTripsTableRow {
  itinerary_id: ID

  """owning user's ID"""
  user_id: ID
  itinerary_name: String

  """Format should be yyyy-mm-dd"""
  itinerary_start_date: String

  """Format should be yyyy-mm-dd"""
  itinerary_end_date: String

  """Either past, current or upcoming"""
  trip_status: String

  """owning group's ID"""
  group_id: ID
  group_name: String

  """If external_partner exists, its name (e.g., 'gbt'). Or 'lola'"""
  hub_name: String

  """
  Related booking_traveler_profiles: traveler_profile_id, first_name,
  middle_name, last_name, confirmation_email of all bookings of this itinerary
  """
  travelers: [DesktopWomconBookingsTableRowTravelerProfile]

  """The number of flight bookings of this itinerary"""
  flight_count: Int

  """The number of hotel bookings of this itinerary"""
  hotel_count: Int

  """The number of car bookings of this itinerary"""
  car_count: Int

  """The number of custom bookings of this itinerary"""
  custom_count: Int

  """
  The specific type of each custom booking counted in custom_count, e.g. ["car", "hotel"]
  """
  custom_types: [String]
}

input DestinationInput {
  id: String
  group_id: String
  name: String
  address: String
  latitude: String
  longitude: String
  location_name: String
  google_places_id: String
  hotel_ids: JSONString
}

enum DeviceType {
  DESKTOP
  MOBILE
}

type DirectPreferredPolicyDetailsNode {
  amount: Int
  created: DateTime
  id: ID!
  currency_code: EnumString
  modified: DateTime
}

type DirectPreferredPolicyNode {
  tags: JSONString
  deleted: Boolean
  created: DateTime
  modified: DateTime
  policy_category: EnumString
  id: ID!
  version: Int
  details: DirectPreferredPolicyDetailsNode!
  policy_type: EnumString
  group_id: String
  group: GroupNode!
  properties: GenericScalar
}

"""Disable an ExpensePartnerConfig."""
type DisableExpensePartner {
  ok: Boolean
  expense_partner_config: ExpensePartnerConfig
}

type EditAddress {
  id: String
}

input EditAddressInput {
  id: String
  street1: String
  street2: String
  city: String
  province_code: String
  postal_code: String
  country_code: String
}

type EditExpenseTag {
  ok: Boolean
  expense_tag: ExpenseTag
}

"""
Edits preferred cabin_type, avoid_red_eyes, and seat_preferences for a user.
"""
type EditFlightPreferences {
  ok: Boolean
}

input EditLoyaltyInput {
  user_id: String
  user_loyalty_id: String
  loyalty_program_number: String
}

type EditPassport {
  user_id: String
}

type EditTravelerLoyalty {
  user_loyalty_program: UserLoyaltyProgram
}

input EditTravelerLoyaltyInput {
  traveler_profile_id: ID!
  user_loyalty_id: String
  loyalty_program_number: String
}

"""Edits trip fields. """
type EditTrip {
  """DEPRECATED: Please request trip.id."""
  trip_id: String @deprecated(reason: "Please request trip.id.")

  """DEPRECATED: Please request trip.name."""
  name: String @deprecated(reason: "Please request trip.name.")

  """DEPRECATED: Please request trip.archived."""
  archived: Boolean @deprecated(reason: "Please request trip.archived.")
  trip: Trip
}

type EditUser {
  user_id: String
}

input EditUserInput {
  user_id: String
  first_name: String
  last_name: String
  legal_name_first: String
  legal_name_middle: String
  legal_name_last: String
  email: String
  phone: String
  gender: String
  birthdate: String
  known_traveler_number: String
  redress_number: String
  company: String
  preferred_language: String
  preferred_country: String
  preferred_currency: String
  profile_image_url: String
}

type EditUserLoyalty {
  user_loyalty_program: UserLoyaltyProgram
}

type EditUserRole {
  ok: Boolean
}

type EmailPreferences {
  group: Group

  """email to send booking confirmations to"""
  email: String

  """whether or not the admin wants to receive booking confirmation emails"""
  receive_group_booking_receipts: Boolean

  """
  whether or not user wants to receive emails about new members joining this group
  """
  receive_new_member_emails: Boolean

  """
  frequency of whether or not user wants to receive emails about traveling members
  """
  receive_on_the_road_email_frequency: DailyWeeklyPreferenceType

  """
  frequency of booking alert emails that a group admin wouldlike to receive
  """
  group_booking_receipt_frequency: EmailPreferenceType
}

enum EmailPreferenceType {
  """always"""
  always

  """guidelines"""
  guidelines

  """never"""
  never
}

interface Employee {
  id: String
  group_id: String
  first_name: String
  last_name: String
  status: EnumString
  role: EnumString
  email: String
  email_validated: Boolean

  """List of payment account ids this employee can access"""
  allowed_payment_methods: [String]
}

type EmployeeFromGroupAssociation implements Employee {
  id: String
  group_id: String
  first_name: String
  last_name: String
  status: EnumString
  role: EnumString
  email: String
  email_validated: Boolean

  """List of payment account ids this employee can access"""
  allowed_payment_methods: [String]
}

type EmployeeFromGroupInvite implements Employee {
  id: String
  group_id: String
  first_name: String
  last_name: String
  status: EnumString
  role: EnumString
  email: String
  email_validated: Boolean

  """List of payment account ids this employee can access"""
  allowed_payment_methods: [String]
}

type EnqueuedBooking {
  booking_id: ID
  user: String
  reason: String
  group: String
  enqueued: String
}

scalar EnumString

"""
An expense partner is used to describe information needed when linking to expensify, etc.
"""
type ExpensePartner {
  """The name of the expense partner"""
  name: String

  """The code for the expense partner"""
  code: ExpensePartnerName

  """URL for expense partner icon"""
  icon: String
}

"""
Represents a configuration for an ExpensePartner. If it exists, the integration is on.
"""
type ExpensePartnerConfig {
  id: ID

  """The ExpensePartner this config is for"""
  partner: ExpensePartner

  """
  Email connected to corporate account for expensing corporate card bookings
  """
  corporate_account_email: String

  """Whether this config is the single active config for the group."""
  active: Boolean
}

"""
Represents a configuration for an ExpensePartner. If `active` is True, the integration is on.
"""
type ExpensePartnerConfigAndCards {
  id: ID

  """The ExpensePartner this config is for"""
  partner: ExpensePartner

  """
  Email connected to corporate account for expensing corporate card bookings
  """
  corporate_account_email: String
  expense_cards: [PaymentAccountAndEmail]

  """Whether this config is the single active config for the group."""
  active: Boolean
}

enum ExpensePartnerName {
  EXPENSIFY
}

"""
ExpenseTags enable our customers to categorize expenses. For instance, they may be a consulting firm which needs to
bill customers for travel. An ExpenseTag can denote which customer they will bill a booking to.
"""
type ExpenseTag {
  """The name of the ExpenseTag."""
  name: String

  """
  Whether or not a tag is hidden from view. This is intended to be used when the
  tag should no longer appear in the drop down list of tags for normal users.
  """
  archived: Boolean

  """The id of the ExpenseTag."""
  id: ID
}

"""Represents editable fields on an ExpenseTag."""
input ExpenseTagInput {
  """The name of the ExpenseTag."""
  name: String

  """
  Whether or not a tag is hidden from view. This is intended to be used when the
  tag should no longer appear in the drop down list of tags for normal users.
  """
  archived: Boolean
}

type ExpenseTagNode {
  archived: Boolean
  group: GroupNode!
  group_id: Int
  name: String
  created: DateTime
  deleted: Boolean
  modified: DateTime
  version: Int
  id: ID!
}

type ExternalBookedSegmentOption {
  """the unique hash for this SegmentOption"""
  id: ID!

  """local time of departure for this flight segment"""
  departure_time_local: DateTime

  """utc time of departure for this flight segment"""
  departure_time_utc: DateTime

  """local time of arrival for this flight segment"""
  arrival_time_local: DateTime

  """utc time of arrival for this flight segment"""
  arrival_time_utc: DateTime

  """the duration of the flight leg in minutes"""
  duration: Int

  """the airport code for the point of departure"""
  departure_airport: Airport

  """the airport code for the point of arrival"""
  arrival_airport: Airport

  """
  the number assigned by the marketing airline to the flight - this may differ
  from the flight number of the operating airline
  """
  flight_number: Int

  """the airline selling this flight segment"""
  marketing_airline: Airline

  """the airline selling this flight segment"""
  operating_airline: Airline
}

input ExternalBookedSegmentOptionInput {
  departure_date: DateTime
  flight_number: String

  """airline code"""
  airline_code: String!
}

input ExternalBookedSegmentOptionQuery {
  segment_option_input: ExternalBookedSegmentOptionInput!
}

enum ExternalBookingReason {
  """ADD_ADDITIONAL_NIGHTS"""
  ADD_ADDITIONAL_NIGHTS

  """ADJUSTMENT"""
  ADJUSTMENT

  """BLOCK_BOOKING"""
  BLOCK_BOOKING

  """BUDGET_AIRLINE"""
  BUDGET_AIRLINE

  """CONF_RATE"""
  CONF_RATE

  """CORP_RATE"""
  CORP_RATE

  """GOV_RATE"""
  GOV_RATE

  """HACKER_FARE"""
  HACKER_FARE

  """INVENTORY"""
  INVENTORY

  """LOLA_BUG"""
  LOLA_BUG

  """LOWER_RATE"""
  LOWER_RATE

  """LOYALTY_PROGRAM_POINTS"""
  LOYALTY_PROGRAM_POINTS

  """LOYALTY_RATES"""
  LOYALTY_RATES

  """MULTIPLE_ROOMS"""
  MULTIPLE_ROOMS

  """NON_STANDARD_OCCUPANTS"""
  NON_STANDARD_OCCUPANTS

  """OTHER"""
  OTHER

  """PURCHASING_SEAT_UPGRADES"""
  PURCHASING_SEAT_UPGRADES

  """RATE_DISCREPANCY"""
  RATE_DISCREPANCY

  """REDEEMING_UNUSED_TICKET"""
  REDEEMING_UNUSED_TICKET

  """REFUNDABLE_FARE"""
  REFUNDABLE_FARE

  """SOUTHWEST"""
  SOUTHWEST

  """SPECIAL_FLIGHT_FARE"""
  SPECIAL_FLIGHT_FARE

  """SUPPLIER_NOT_ON_LOLA"""
  SUPPLIER_NOT_ON_LOLA

  """TRAVELER_CONVENIENCE"""
  TRAVELER_CONVENIENCE

  """TRIPS_AT_LOLA"""
  TRIPS_AT_LOLA

  """UNSUPPORTED_PASSENGER_TYPE"""
  UNSUPPORTED_PASSENGER_TYPE

  """VENDOR_BIAS"""
  VENDOR_BIAS
}

input ExternalFlightBookingInput {
  """Code of the issuing airline for this booking"""
  issuing_airline_code: String!

  """A collection of traveler profile IDs with related metadata"""
  travelers: [TravelerInput]!

  """A collection of legs that constitute this booking"""
  external_leg_options: [ExternalLegOptionInput]!
}

"""Basic information about an externally-booked hotel rate"""
input ExternalHotelRate {
  """The ID of the hotel"""
  hotel_id: ID!

  """The check-in date"""
  checkin_date: Date!

  """The checkout-date"""
  checkout_date: Date!

  """The beds in the room, broken down by type + number"""
  beds: [BedCategoryCount]!

  """The type of room"""
  room_category: RoomCategory

  """The type of view"""
  view_category: ViewCategory

  """The type of rate"""
  rate_category: RateCategory

  """The base rate for the booking, without taxes or fees"""
  base_rate: Int!

  """The sum of all taxes applied to the booking"""
  total_taxes: Int = 0

  """The sum of all fees applied to the booking"""
  total_fees: Int = 0
}

input ExternalLegOptionInput {
  """Departure airport code"""
  departure_airport_code: String!

  """Arrival airport code"""
  arrival_airport_code: String!

  """List of external segments POGO IDs"""
  segment_ids: [ID]!
}

type Fare {
  id: ID

  """The base price of the fare."""
  base_price: Int

  """The total price of the fare."""
  total_price: Int

  """The total tax of the fare."""
  total_tax: Int

  """Whether this fare is refundable"""
  refundable: Boolean

  """The penalty associated with a refund"""
  refund_penalty: Int

  """Whether the info about refundability is considered 'guaranteed'"""
  refund_info_guaranteed: Boolean
  tickets: [Ticket] @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  booking_details: [BookingDetailsNode] @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  currency_code: EnumString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  derived_identifier: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  fee_details: [FeeDetailsNode] @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  interline_valid: Boolean @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  issuing_airline: Airline @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  issuing_airline_id: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  legs: [Leg] @deprecated(reason: "Please request legs on the FlightBooking. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  modified: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  passenger_fares: [PassengerFareNode] @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  provider: EnumString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")

  """The fare converted into a different currency"""
  converted_fare(currency_code: ISOCurrencyCode!): ConvertedFare
}

type FareAttribute {
  status: FareAttributeStatus

  """A consistent id_name associated with the attribute"""
  id_name: FareAttributeType

  """Branded attribute name"""
  branded_name: String

  """A possible associated quantity"""
  quantity: Int
}

enum FareAttributeStatus {
  """INCLUDED"""
  INCLUDED

  """NOT_AVAILABLE"""
  NOT_AVAILABLE

  """WITH_CHARGE"""
  WITH_CHARGE
}

enum FareAttributeType {
  """ALCOHOL"""
  ALCOHOL

  """CARRYON_BAGS"""
  CARRYON_BAGS

  """CHANGEABLE"""
  CHANGEABLE

  """CHECKED_BAGS"""
  CHECKED_BAGS

  """CHECKED_BAGS_INTERNATIONAL"""
  CHECKED_BAGS_INTERNATIONAL

  """ENTERTAINMENT"""
  ENTERTAINMENT

  """HEADSETS"""
  HEADSETS

  """PRIORITY_BOARDING"""
  PRIORITY_BOARDING

  """REFUNDABLE"""
  REFUNDABLE

  """REWARDS"""
  REWARDS

  """SEAT_SELECTION"""
  SEAT_SELECTION

  """SNACKS"""
  SNACKS

  """UPGRADEABLE"""
  UPGRADEABLE

  """WIFI"""
  WIFI
}

type FareCancellationPendingDetailsNode {
  created: DateTime
  id: ID!
  reported_timestamp: DateTime
  modified: DateTime
}

type FareFamily {
  """Fare family display name"""
  name: String!

  """
  A programmatic key representing a fare family variant of an airline. Should
  match up with `FareFamily.key`s returned on `FareOptions` and `SegmentDetails`
  """
  key: String!

  """Whether this family option can be hidden when none are available"""
  optional: Boolean!

  """Fare attributes/amenities"""
  attributes: [FareAttribute]
}

type FareFamilyDetailsNode {
  name: String
  created: DateTime
  description: String
  carrier_code: String
  modified: DateTime
  id: ID!
}

input FareFamilyInput {
  airline_codes: [String]!
  exclude_basic_economy: Boolean
}

type FareNode {
  """The total tax in cents. Deprecated in favor of total_tax_mills"""
  total_tax: Int

  """The total price in mills. Nullable for backwards compatibility"""
  total_price_mills: Int
  within_guidelines: Boolean

  """
  Whether the refundability information from mini rulesis considered guaranteed
  """
  refund_info_guaranteed: Boolean

  """Penalty associated with a refund, in cents"""
  refund_penalty_mills: Int

  """
  Penalty associated with a refund, in cents. Deprecated in favor ofrefund_penalty_mills
  """
  refund_penalty: Int

  """Whether a fare is refundable"""
  refundable: Boolean
  interline_valid: Boolean
  id: ID!
  booking_details: [BookingDetailsNode]

  """The total tax in mills. Nullable for backwards compatibility"""
  total_tax_mills: Int

  """
  Storing the hash derived from a subset of fields that can be used to determine a unique flight
  """
  derived_identifier: String

  """The total price in cents. Deprecated in favor of total_price_mills"""
  total_price: Int

  """The group flight guidelines used to determine within guidelines"""
  group_flight_guidelines_id: Int
  issuing_airline_code: String
  created: DateTime
  issuing_airline: AirlineNode!
  issuing_airline_id: Int
  modified: DateTime

  """The oid/pcc used to make the booking"""
  office_id: String

  """The base price in cents. Deprecated in favor of base_price_mills"""
  base_price: Int
  fee_details: [FeeDetailsNode]
  provider: EnumString

  """The original mini rule group that this fare referred to"""
  raw_mini_rule: GenericScalar

  """The base price in mills. Nullable for backwards compatibility"""
  base_price_mills: Int
  legs: [LegNode]
  passenger_fares: [PassengerFareNode]
  currency_code: EnumString
  flight_credential_key: EnumString
}

type FareOption {
  """the unique identifier for this FareOption"""
  id: ID!

  """a breakdown of prices relevant to the fare"""
  price_details: PriceDetail

  """
  the unique information required for identifying a cached fare during search
  """
  cache_identity: String

  """a breakdown of the tax associated with this fare"""
  tax_details: [TaxDetail]

  """The currency of this fare"""
  currency: ISOCurrencyCode

  """ticketing details relevant to each passenger type"""
  passenger_pricing: [PassengerFareOption]

  """the issuing airline for this fare"""
  issuing_airline: Airline

  """Flight scoring details relevant for this fare"""
  score: FlightScore

  """Flight pricing guidelines relevant for this fare"""
  guidelines: FlightGuidelines

  """a list of leg options corresponding to this fare option"""
  leg_options: [LegOption]

  """a list of metadata related to fare rules + the fare rules"""
  fare_rules_details: [FareRulesDetails] @deprecated(reason: "Please use FlightQuery.fare_rules_details instead")

  """the minimum cabin type for all flights"""
  min_cabin_type: CabinType

  """the maximum cabin type for all flights"""
  max_cabin_type: CabinType

  """a mapping of segment id to accommodation details"""
  segment_details: [SegmentDetail]

  """the maximum fare family of all segment details on this fare"""
  max_fare_family_key: String
  branded_pricing: [BrandedFareOption]

  """Whether this fare requires a CVV to book"""
  requires_cvv: Boolean

  """Whether this is a GBT negotiated fare"""
  is_gbt_fare: Boolean

  """Whether this fare is refundable"""
  refundable: Boolean

  """The penalty associated with a refund"""
  refund_penalty: Int

  """Whether the info about refundability is considered 'guaranteed'"""
  refund_info_guaranteed: Boolean

  """Whether this fare supports seat selection"""
  supports_seat_selection: Boolean

  """Alternate fare pricing"""
  alternate_pricing: [AlternatePricing]

  """Fare pricing in multiple currencies"""
  fare_pricing(currency_codes: [ISOCurrencyCode]): [FarePricing]
}

"""Flight fare pricing in a particular currency."""
type FarePricing {
  """ISO 4217 currency code."""
  currency_code: ISOCurrencyCode

  """Breakdown of prices relevant to the fare."""
  price_details: PriceDetail

  """Breakdown of taxes relevant to the fare."""
  tax_details: [TaxDetail]

  """The penalty that must be paid to refund the fare."""
  refund_penalty: Int

  """Alternate fare pricing"""
  alternate_pricing: [AlternatePricing]
}

input FarePricingInfo {
  """The base fare price for the booking, without taxes or fees"""
  base_fare: Int!

  """The sum of all taxes applied to the booking"""
  total_taxes: Int = 0

  """The sum of all fees applied to the booking"""
  total_fees: Int = 0
}

enum FareRefundability {
  """ONLY_REFUNDABLE"""
  ONLY_REFUNDABLE

  """PREFER_NON_REFUNDABLE"""
  PREFER_NON_REFUNDABLE
}

type FareRule {
  """title for this section of the fare rules"""
  title: String

  """a category code for this rule, probably not displayed"""
  category: String

  """body of text outlining this rule"""
  text: String
}

type FareRulesDetails {
  """passenger type to which these rules apply"""
  passenger_type: PassengerType

  """
  code for the departure airport of the segment to which these rules apply
  """
  departure_airport_code: String

  """code for the arrival airport of the segment to which these rules apply"""
  arrival_airport_code: String

  """basis code to which these rules apply"""
  basis_code: String

  """booking code to which these rules apply"""
  booking_code: String

  """segment id to which these rules apply"""
  segment_id: ID

  """list of the fare rules"""
  fare_rules: [FareRule]
}

type FareStream {
  """The unique identifier for this stream"""
  stream_id: ID!

  """
  The unique identifier for this specific chunk of the result stream. This is
  used to determine results that have not yet been sent.
  """
  chunk_id: ID! @deprecated(reason: "Arbitrary stream chunks are no longer supported.")

  """
  Indication of whether this stream is complete, meaning there are no longer any
  pending flight searches and so polling can stop
  """
  complete: Boolean!

  """
  An int between 0-100 indicating an approximate completion percentage of this stream
  """
  percent_complete: Int

  """Whether this search has guidelines that will be sent"""
  has_guidelines_set: Boolean

  """Guideline information related to this stream"""
  guidelines: StreamGuidelines
  fare_options: [FareOption]!
  leg_options: [LegOption]
  non_stop_routes: [AirlineRoutes]
}

type FareStreamCancel {
  ok: Boolean
}

input FareStreamInit {
  leg_option_inputs: [LegOptionInput]!
  cabin_types: [CabinType]!
  num_adults: Int!
  max_stops: Int
  included_airlines: [String]
  excluded_airlines: [String]

  """
  How we should treat refundability in search results. Defaults to
  PREFER_NON_REFUNDABLE which is equivalent to a regular search.
  """
  refundability: FareRefundability
  currency: ISOCurrencyCode

  """Extra options to apply to streams"""
  options: FareStreamOptions
}

input FareStreamOptions {
  """
  When `False`, `FareStream.fare_options` results will only contain fares with a
  max-cabin-type that is equal to or higher than the requested cabin-type.
  """
  include_lower_cabin_classes: Boolean = true

  """
  When `False`, `FareStream.fare_options` results will only contain fares with a
  max-cabin-type that is equal to or less than the requested cabin-type. Setting
  this option to `False` does *not* affect "branded airlines" for which we
  support fare families
  """
  include_higher_cabin_classes: Boolean = true
  unbundle_legs: Boolean = false
}

input FareStreamPoll {
  """The unique identifier for this stream"""
  stream_id: ID!

  """
  Do not limit the number of returned fare options. By default, smaller chunk
  sizes will be preferred to reduce poll response times.
  """
  large_chunks: Boolean

  """Return results from the beginning of the stream."""
  reset: Boolean = false

  """
  The unique identifier received with the previous poll result. This is used to
  paginate results. This is an optional parameter. When not specified, the
  chunk_id will be automatically tracked on the backend for a given stream_id. A
  stream's results can be "reset" by passing a chunk_id of `0`.
  """
  chunk_id: ID
}

enum FareUpsellError {
  INTERNAL_ERROR
  SOLD_OUT
  UNAVAILABLE
}

input FavoriteHotelInput {
  user_id: ID!
  hotel_id: ID!
}

type FeeDetailsNode {
  description: String
  created: DateTime
  modified: DateTime

  """The fee amount in mills. Nullable for backwards compatibility"""
  amount_mills: Int
  tax_code: String

  """The fee amount in cents. Deprecated in favor of amount_mills"""
  amount: Int

  """
  The date the amounts are quoted for. this is only nullable for backwards compatibility
  """
  transaction_date: DateTime
  id: ID!

  """This currency code that applies to all amount properties."""
  currency_code: EnumString
}

type FFNAdditionFailureDetailsNode {
  category: EnumString
  created: DateTime
  event_details: GenericScalar
  applied_airline: AirlineNode!
  applied_airline_id: Int
  number: String
  modified: DateTime

  """
  a serialized LolaClientError. It has the full, nested causal chain with an
  appropriate "key" that will give greater detail as to the category of failure
  """
  error_details: GenericScalar
  reported_timestamp: DateTime
  provider: EnumString
  member_airline: AirlineNode!
  member_airline_id: Int
  passenger_id: String
  id: ID!
}

input FilterInput {
  """restrict search results to this list of brands"""
  filtered_brand_ids: [ID]

  """restrict search results to this list of hotels """
  filtered_hotel_ids: [ID]

  """restrict search results to hotels with these amenities"""
  filtered_amenities: [ID]
}

type FlagFraudulentBooking {
  ok: Boolean
}

type FlightBooking implements Booking {
  """The id of the booking"""
  id: ID

  """
  The provider used for making this booking. Generally sabre or amadeus. We should change this to an enum at some point.
  """
  provider: String

  """
  Whether or not this is an internal (our systems) or external booking. We should change this to an enum at some point.
  """
  source: EnumString

  """How a customer has catgorized/tagged this booking expense."""
  expense_tag: ExpenseTag @deprecated(reason: "Please use `expense_tags` to get all of the tags associated with the booking.")

  """How a customer has catgorized/tagged this booking expense."""
  expense_tags: [ExpenseTag]

  """The emails that are following this booking."""
  booking_followers: [BookingFollower]

  """The overall status of this booking, from a *user's* point of view."""
  booking_status: BookingStatus

  """
  A code representing the nature of why this booking errored (if it did). Note
  that more information about the error is available internally, but this
  provides a simple interface so clients can customize their messaging.
  """
  booking_error_key: String

  """The internal status of the booking, derived from its events."""
  status: String @deprecated(reason: "Please use `booking_status` for conveying statuses to users.")

  """
  Whether this booking has been processed and is ready to be displayed to a user.
  """
  consumable: Boolean

  """
  Indicates how likely it is that the booking is fradulent. Negative is good, positive is bad. From roughly -10 to 10.
  """
  fraud_score: Int

  """The loyalty programs that were successfully applied to this booking."""
  applied_user_loyalty_programs: [UserLoyaltyProgram]

  """The group this booking was made under."""
  group: Group

  """
  The group department under which this booking should be counted for reporting.
  """
  group_department: GroupDepartment

  """Information about what payment method was used to place this booking."""
  payment_info: PaymentInfo

  """The travelers for this booking"""
  travelers: [BookingTravelerProfile]

  """The email which will be used for expense reporting."""
  expensing_email: String

  """Whether or not this booking can be expensed"""
  expensable: Boolean

  """Whether or not this booking can have its expense sent"""
  expense_sendable: Boolean

  """Whether the expense has already been sent or not."""
  expense_sent: Boolean

  """The user who made/requested this booking."""
  user: User

  """The trips this booking is part of."""
  trips: [Trip]

  """A flag denoting whether or not this booking was made by you."""
  is_booked_by_you: Boolean

  """What the user paid for something."""
  price_details: PriceDetails

  """whether or not the booking is external or booked through Lola"""
  is_external: Boolean

  """
  When this booking was reported as being made, either by the provider or the importing user.
  """
  reported_booking_time: DateTime
  component: ItineraryComponentNode @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  component_id: String @deprecated(reason: "Please request the id on the component. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  component_type: String @deprecated(reason: "Please request the type on the component. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  deleted: Boolean @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  group_id: String @deprecated(reason: "Please request the id on the group instead. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  installation_id: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  modified: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  participants: JSONString @deprecated(reason: "Please request the travelers instead. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  previous_booking_id: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  tags: JSONString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  total_price: Int @deprecated(reason: "Please use price_details instead.")
  trip: TripNode @deprecated(reason: "This is unrelated to the current implementation of trips. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  trip_id: Int @deprecated(reason: "This is unrelated to the current implementation of trips. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  user_id: ID @deprecated(reason: "Please request the id on the user. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  version: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  arrival_date: DateTime
  confirmation_numbers: [AirlineConfirmation]

  """
  Fare family of the segment with the maximum fare family on this booking.
  """
  branded_fare: BrandedFare
  departure_date: DateTime
  fare: Fare
  legs: [Leg]
  tickets: [Ticket]
  applied_group_loyalty_programs: [BookingGroupLoyaltyAssociationNode]

  """The reason why the PNR cannot be refreshed; empty string otherwise."""
  pnr_refresh_disabled_reason: String
  details: Fare @deprecated(reason: "Please request fare instead. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  passengers: [Passenger] @deprecated(reason: "Please request travelers instead.")
  guidelines_info: GroupFlightBookingGuidelinesInfo
  alternate_pricing: [AlternatePricing]
  external_booking_reason: String

  """
  Flag to determine if a flight booking must be manually cancelled by a wombat
  """
  must_cancel_manually: Boolean
}

input FlightCostItemInput {
  """Cost item type. e.g., PAID_SEAT_COST_ITEM"""
  cost_type: FlightCostType!

  """
  Leave this empty if the change applies to the entire booking. e.g., full refund
  """
  booking_traveler_profile_id: ID

  """dollar amount of the fee paid"""
  change_fee: Int!

  """dollar amount of the refund received"""
  refund_amount: Int!

  """dollar amount of the fee paid in mills"""
  change_fee_mills: Int

  """dollar amount of the refund received in mills"""
  refund_amount_mills: Int

  """
  For partial_refund event, wombats need to know if the flight is partially flown or not flown at all
  """
  partially_flown: Boolean

  """The date of the transaction"""
  transaction_date: DateTime

  """
  The currency code of the currency that was used to handle the transaction
  """
  currency_code: String = "USD"
}

enum FlightCostType {
  """BAGGAGE_COST_ITEM"""
  BAGGAGE_COST_ITEM

  """FULL_REFUND_COST_ITEM"""
  FULL_REFUND_COST_ITEM

  """PAID_SEAT_COST_ITEM"""
  PAID_SEAT_COST_ITEM

  """PARTIAL_REFUND_COST_ITEM"""
  PARTIAL_REFUND_COST_ITEM

  """USER_FLIGHT_CHANGE_COST_ITEM"""
  USER_FLIGHT_CHANGE_COST_ITEM
}

type FlightFFNAddFailEventNode {
  requesting_user_id: String
  requesting_user: UserNode
  changed_objects: GenericScalar
  event_type: EnumString
  component_type: EnumString
  created: DateTime
  deleted: Boolean
  modified: DateTime
  version: Int
  details: FFNAdditionFailureDetailsNode
  reported_timestamp: DateTime
  id: ID!
  booking: BookingNode!
  booking_id: Int
}

"""
FlightFilterOptions restrict or include flight search results based on certain parameters
"""
input FlightFilterOptions {
  """a list of airline codes that must be returned in the filtered results"""
  included_airlines: [ID]

  """
  a list of airline codes that must not be returned in the filtered results
  """
  excluded_airlines: [ID]

  """
  a list of airport codes that should not be returned in the filtered results
  """
  excluded_layover_airports: [String]

  """the earliest local departure time for filtered results"""
  min_departure_time: DateTime

  """the latest local departure time for filtered results"""
  max_departure_time: DateTime

  """the earliest local arrival time for filtered results"""
  min_arrival_time: DateTime

  """the latest local arrival time for filtered results"""
  max_arrival_time: DateTime

  """the maximum number of stops that should be returned"""
  max_stops: Int

  """whether to only show refundable fares"""
  only_refundable: Boolean
}

type FlightGuidelines {
  """
  Whether this fare is within guidelines associated with the current user
  """
  is_within_guidelines: Boolean
}

type FlightMajorModificationDetailsNode {
  """The source of the major modification to the flight"""
  source: EnumString
  reported_timestamp: DateTime

  """any additional unstructured details"""
  additional_details: GenericScalar
  created: DateTime

  """
  The message we would like to associate with the modification event. We may
  choose to default this value by implementing type
  """
  message: String
  modified: DateTime
  id: ID!
}

type FlightPNRCancelFailEventNode {
  requesting_user_id: String
  requesting_user: UserNode
  changed_objects: GenericScalar
  event_type: EnumString
  component_type: EnumString
  created: DateTime
  deleted: Boolean
  modified: DateTime
  version: Int
  details: FlightPNRCancellationFailureDetailsNode
  reported_timestamp: DateTime
  id: ID!
  booking: BookingNode!
  booking_id: Int
}

type FlightPNRCancellationFailureDetailsNode {
  created: DateTime
  event_details: GenericScalar
  modified: DateTime
  pnr_ref: String

  """
  a serialized LolaClientError. It has the full, nested causal chain with an
  appropriate "key" that will give greater detail as to the category of failure
  """
  error_details: GenericScalar
  reported_timestamp: DateTime
  provider: EnumString
  id: ID!
}

type FlightPNRCancellationManualRequestDetailsNode {
  pnr_ref: String
  reported_timestamp: DateTime
  created: DateTime
  server_message: String
  customer_message: String
  modified: DateTime
  id: ID!
}

type FlightPNRCancellationSuccessDetailsNode {
  pnr_ref: String
  reported_timestamp: DateTime
  created: DateTime
  event_details: GenericScalar
  provider: EnumString
  modified: DateTime
  id: ID!
}

type FlightPNRCreateFailEventNode {
  requesting_user_id: String
  requesting_user: UserNode
  changed_objects: GenericScalar
  event_type: EnumString
  component_type: EnumString
  created: DateTime
  deleted: Boolean
  modified: DateTime
  version: Int
  details: FlightPNRCreationFailureDetailsNode
  reported_timestamp: DateTime
  id: ID!
  booking: BookingNode!
  booking_id: Int
}

type FlightPNRCreationFailureDetailsNode {
  """
  a serialized LolaClientError. It has the full, nested causal chain with an
  appropriate "key" that will give greater detail as to the category of failure
  """
  error_details: GenericScalar
  reported_timestamp: DateTime
  created: DateTime
  event_details: GenericScalar
  provider: EnumString
  modified: DateTime
  id: ID!
}

type FlightPreferences {
  avoid_red_eyes: Boolean
  day_seat_preference: String
  night_seat_preference: String
  favorite_airlines: [Airline]
  home_airport: Airport
  class_preferences: [String]
}

"""A user's flight preferences."""
input FlightPreferencesInput {
  """A list of preferred cabin types."""
  cabin_types: [CabinTypeOld]!

  """Whether or not to avoid red eyes."""
  avoid_red_eyes: Boolean

  """What seat the user likes during the day"""
  day_seat_preference: SeatPreference

  """What seat the user likes at night"""
  night_seat_preference: SeatPreference
}

type FlightScore {
  """The flight score for this fare"""
  score: Int
}

type FlightSeatAddFailEventNode {
  requesting_user_id: String
  requesting_user: UserNode
  changed_objects: GenericScalar
  event_type: EnumString
  component_type: EnumString
  created: DateTime
  deleted: Boolean
  modified: DateTime
  version: Int
  details: SeatAdditionFailureDetailsNode
  reported_timestamp: DateTime
  id: ID!
  booking: BookingNode!
  booking_id: Int
}

type FlightTicketCancelFailEventNode {
  requesting_user_id: String
  requesting_user: UserNode
  changed_objects: GenericScalar
  event_type: EnumString
  component_type: EnumString
  created: DateTime
  deleted: Boolean
  modified: DateTime
  version: Int
  details: TicketCancellationFailureDetailsNode
  reported_timestamp: DateTime
  id: ID!
  booking: BookingNode!
  booking_id: Int
}

type FlightTicketFailEventNode {
  requesting_user_id: String
  requesting_user: UserNode
  changed_objects: GenericScalar
  event_type: EnumString
  component_type: EnumString
  created: DateTime
  deleted: Boolean
  modified: DateTime
  version: Int
  details: TicketingFailureDetailsNode
  reported_timestamp: DateTime
  id: ID!
  booking: BookingNode!
  booking_id: Int
}

type FlightWigglePolicyDetailsNode {
  amount: Int
  created: DateTime
  id: ID!
  currency_code: EnumString
  modified: DateTime
}

type FlightWigglePolicyNode {
  tags: JSONString
  deleted: Boolean
  created: DateTime
  modified: DateTime
  policy_category: EnumString
  id: ID!
  version: Int
  details: FlightWigglePolicyDetailsNode!
  policy_type: EnumString
  group_id: String
  group: GroupNode!
  properties: GenericScalar
}

type FollowTrip {
  ok: Boolean
  created_booking_followers: [BookingFollower]
  error_message: String
}

"""
Sends a magic login code link to the user via email. The MagicLinkLogin mutation allows the user
to then login with that code.
"""
type ForgotPassword {
  ok: Boolean
}

enum Gender {
  """FEMALE"""
  FEMALE

  """MALE"""
  MALE
}

enum GenerationalSuffix {
  """I"""
  I

  """II"""
  II

  """III"""
  III

  """IV"""
  IV

  """JR"""
  JR

  """SR"""
  SR

  """V"""
  V

  """VI"""
  VI
}

"""
The `GenericScalar` scalar type represents a generic
GraphQL scalar value that could be:
String, Boolean, Int, Float, List or Object.
"""
scalar GenericScalar

"""Creates a CalendarFeed belonging to the given entity."""
type GetOrCreateCalendarFeed {
  ok: Boolean
  calendar_feed: CalendarFeed
}

"""Defines the northeast and southwest boundaries of a journey."""
type GoogleDirectionsBounds {
  """Northeast boundary of journey"""
  northeast: GoogleDirectionsLatLong

  """Southwest boundary of journey"""
  southwest: GoogleDirectionsLatLong
}

"""Provides a latitude/longitude pair as Floats."""
type GoogleDirectionsLatLong {
  """Latitude of a location"""
  lat: Float

  """Longitude of a location"""
  lng: Float
}

"""
Defines a series of 'steps', or segments of the journey, as well as some summary
information about distance, duration, and start/end locations.
"""
type GoogleDirectionsLeg {
  """Distance in meters"""
  distance: Int

  """Human-readable distance in English with units: '0.2 mi'"""
  human_readable_distance: String

  """Duration in seconds"""
  duration: Int

  """Human-readable duration in English with units: '40 min'"""
  human_readable_duration: String

  """Start location as a lat/long pair"""
  start_location: GoogleDirectionsLatLong

  """End location as a lat/long pair"""
  end_location: GoogleDirectionsLatLong

  """Start location address"""
  start_address: String

  """End location address"""
  end_address: String

  """Series of steps required to complete journey"""
  steps: [GoogleDirectionsStep]
}

"""
Defines a route, including legs, boundaries, a polyline containing encoded
latitude/longitude pairs, and a Google-provided general summary of the journey
"""
type GoogleDirectionsRoute {
  """Boundaries of the journey"""
  bounds: GoogleDirectionsBounds

  """Legs necessary for completing journey"""
  legs: [GoogleDirectionsLeg]

  """Encoded lat/long pairs for the journey"""
  overview_polyline: String

  """Summary of main component of journey, ie 'I-40 W'"""
  summary: String
}

"""
Defines a 'step', or a segment of a journey, including start/end locations
as well as duration and distance values.
"""
type GoogleDirectionsStep {
  """Distance in meters"""
  distance: Int

  """Human-readable distance in English with units: '0.2 mi'"""
  human_readable_distance: String

  """Duration in seconds"""
  duration: Int

  """Human-readable duration in English with units: '40 min'"""
  human_readable_duration: String

  """Start location as a lat/long pair"""
  start_location: GoogleDirectionsLatLong

  """End location as a lat/long pair"""
  end_location: GoogleDirectionsLatLong

  """Next step described in HTML/English"""
  html_instructions: String

  """Provides encoded latitude/longitude pairs"""
  polyline: String

  """Travel mode, ie walking, driving, transit, or bicycling"""
  travel_mode: String
}

enum GoogleDirectionsTransportMode {
  BICYCLING
  DRIVING
  TRANSIT
  WALKING
}

"""Grants access to a given TravelerProfile to an email."""
type GrantAccessToTravelerProfile {
  ok: Boolean
  traveler_profile: TravelerProfile
}

type GrantGBTContentToGroup {
  ok: Boolean
  group: Group
}

"""Represents a Lola Team."""
type Group {
  id: ID!
  invitation_url: String

  """The unique name for this group"""
  shortname: String

  """Whether or not the group has been verified by a user via some email."""
  verified: Boolean
  address1: String
  address2: String
  city: String
  country: String
  country_code: String
  name: String
  phone: String
  postal_code: String
  latitude: Float
  longitude: Float
  province: String
  province_code: String
  tax_id: String
  creator: User
  num_members: Int

  """Whether this company is a GBT-acquired company"""
  is_gbt_company: Boolean

  """customer source/owner"""
  acquisition_pipeline: String

  """The unique GBT identifier for this company"""
  gbt_key: String

  """Whether users with role "member" can access LW at all."""
  allow_member_access: Boolean

  """The list of email domains affiliated with this group."""
  domains: [GroupDomain]

  """
  Bookings the group has access to -- will only resolve if you are an admin of the group
  """
  bookings(
    """An optional list of booking ids that we intend to grab"""
    ids: [ID]
    exclude_custom_bookings: Boolean = false
  ): [Booking]

  """Trips that contain bookings made available to this group"""
  trips(
    """An optional list of specific trip ids"""
    ids: [ID]

    """The filter start date, inclusive."""
    start_date: Date

    """The filter end date, inclusive"""
    end_date: Date
    exclude_custom_bookings: Boolean = false
  ): [Trip]

  """The active admins of this group"""
  admins: [User]

  """All users currently associated with this group, with role/status info."""
  group_associations: [GroupAssociation]

  """Destinations belonging to this group"""
  destinations: [GroupDestination]

  """A destination belonging to this group"""
  destination(id: ID!): GroupDestination

  """The groups payment accounts"""
  payment_methods: [PaymentMethod]

  """The people in this group (active members and invitees)"""
  people: [GroupPerson]

  """The departments in this group"""
  departments(
    """Whether or not to filter out archived departments"""
    filter_archived: Boolean = true
  ): [GroupDepartment]

  """The policies in this group"""
  policy_assignments: [GroupPolicyAssignment]

  """The group's flight wiggle room policy"""
  flight_wiggle_policy: GroupFlightWigglePolicy

  """The group's direct flight policy"""
  flight_direct_policy: GroupFlightDirectPolicy

  """The group's cabin class policies"""
  flight_cabin_class_policies: [GroupFlightCabinClassPolicy]

  """The group's hotel tier and related info"""
  hotel_tier_policy: GroupHotelTierPolicy @deprecated(reason: "Use Group.hotel_guidelines.target_price_level instead")

  """The group's hotel guidelines"""
  hotel_guidelines: GroupHotelGuidelines

  """The group flight guideline assigned to user"""
  flight_guidelines: GroupFlightGuidelines

  """The group's car guidelines"""
  car_guidelines: GroupCarGuidelines
  negotiated_rates(group_id: String): [HotelNegotiatedRateOutputValues]

  """A high-level summary of the group's bookings, broken down over time"""
  booking_summary(
    """The id of a specific department to summarize"""
    group_department_id: ID
  ): GenericScalar

  """A high-level summary of the groups's trips, broken down over time"""
  trip_summary: GenericScalar

  """
  ExpenseTags which may be used by employees to categorize expenses when booking.
  """
  expense_tags(
    """Filter archived ExpenseTags from result set."""
    filter_archived: Boolean = true
  ): [ExpenseTag]

  """Configurations for various expense partner integrations."""
  expense_partner_configs: [ExpensePartnerConfig]

  """The group's active expense config"""
  expense_partner_config: ExpensePartnerConfigAndCards

  """Preferences for this group"""
  group_preferences: GroupPreferences

  """Loyalty programs associated with this group"""
  group_airline_loyalty_programs: [GroupAirlineLoyaltyProgram]

  """Loyalty programs associated with this group"""
  group_car_loyalty_programs: [GroupCarLoyaltyProgram]

  """The notes wombats have saved with the group"""
  agent_notes: [AgentNote]

  """Traveler Profiles that are visible to the entire group"""
  traveler_profiles: [TravelerProfile]
  domain: String @deprecated(reason: "We now use domain models for this, rather than a single domain.")

  """The first created, non-deleted group admin."""
  admin: User @deprecated(reason: "Use `admins`")
  url: String @deprecated(reason: "Use `domains.url`")
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  creator_id: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  deleted: Boolean @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  group_type: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  industry: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  modified: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  preferences: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  properties: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  tags: JSONString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  version: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

type GroupAirlineLoyaltyProgram {
  """Loyalty program Id"""
  id: ID

  """Loyalty program number"""
  loyalty_program_number: String!

  """Loyalty program name"""
  name: String

  """Loyalty program long name"""
  long_name: String

  """Loyalty program type"""
  program_type: LoyaltyProgramType

  """Loyalty program URL"""
  url: String

  """List of airlines that support this loyalty program"""
  suppliers: [AirlineLoyaltyProgramSupplier]
}

type GroupAssociation {
  """A unique identifier for the group association"""
  id: ID

  """The group on the association"""
  group: Group

  """The user who belongs to a group"""
  user: User

  """The department on the association"""
  department: GroupDepartment
  role: GroupAssociationRole
  status: GroupAssociationStatus
  accepted_invitation: Boolean
  has_logged_in: Boolean
}

type GroupAssociationNode {
  status: EnumString
  tags: JSONString
  deleted: Boolean
  user_id: String
  user: UserNode!
  id: ID!
  has_logged_in: Boolean
  created: DateTime
  accepted_invitation: Boolean
  modified: DateTime
  properties: GenericScalar
  version: Int
  role: EnumString
  primary_shard_id: String
  group_id: String
  group: GroupNode!

  """The ID of the policy category the user is assigned to"""
  group_policy_assignment_id: String
  department_id: String
}

enum GroupAssociationRole {
  """ADMIN"""
  ADMIN

  """MEMBER"""
  MEMBER

  """OWNER"""
  OWNER

  """READER"""
  READER
}

enum GroupAssociationStatus {
  """ACTIVE"""
  ACTIVE

  """INVITED"""
  INVITED

  """SUSPENDED"""
  SUSPENDED
}

type GroupBookerBookingDetailsData {
  """a list containing group booker booking details"""
  group_booker_booking_details_data: [GroupBookerBookingDetailsEntry]
}

type GroupBookerBookingDetailsEntry {
  group_booker_booking_details_entry: GroupBookerBookingOutputValues
}

type GroupBookerBookingOutputValues {
  name: String
  type: String
  travelers: Int
  booked_on: String
  dates: String
  spend: Int
  savings: Int
  expense_tag_names: [String]
  within_guidelines: Boolean
  reason_for_booking_out_of_guidelines: String
  status: String
  booking_id: String
  reason_for_booking_out_of_guidelines_code: String

  """
  Component type of the booking.        Used to distinguish between custom and car bookings. Use the type field.
  """
  component_type: String
}

input GroupBookingDetailsInputParams {
  """start_date on booking entries: Format should be yyyy-mm-dd"""
  start_date: String

  """end_date on booking entries: Format should be yyyy-mm-dd"""
  end_date: String

  """
  Department ID. Omit if you want data for all departments or pass
  'no_department' for retrieving savings info for bookings not associated with any department
  """
  group_department_id: String

  """
  Expense Tag ID. Omit or pass all_expense_tags if you want data for bookings
  with any expense tag or pass 'no_expense_tag' for retrieving bookings not
  associated with any expense tag
  """
  expense_tag_id: String
}

type GroupBookingsData {
  """List of all group bookings"""
  group_bookings_report_data: [GroupBookingsEntry]
}

type GroupBookingsEntry {
  """Group booking entry"""
  group_bookings_entry: GroupBookingsOutputValues
}

input GroupBookingsInputParams {
  """Exclude custom bookings"""
  exclude_custom_bookings: String

  """
  Group Id if not provided current group Id will be used. If both unavailable, exception will be thrown
  """
  group_id: ID
}

type GroupBookingsOutputValues {
  """Booking ID"""
  booking_id: ID

  """Booking type: flight, hotel or car"""
  booking_type: String

  """Date booked"""
  booked_on: DateTime

  """Name of the person who made the booking"""
  booker: String

  """Travel begin date"""
  travel_date1: Date

  """Travel end date"""
  travel_date2: Date

  """Number of days booking was made before travel"""
  days_booked_before_travel: Int

  """Hotel name"""
  hotel_name: String

  """Hotel payment policy"""
  hotel_payment_policy: String

  """Hotel stay destination city and state"""
  destination: String

  """Airline name"""
  airline_name: String

  """Airline class"""
  airline_class: String

  """Flight departure city and state or car pick up city and state"""
  departure_city: String

  """Flight arrival city and state or car drop off city and state"""
  arrival_city: String

  """Car model and make"""
  car: String

  """Car class"""
  car_class: String

  """Names of travelers on this booking"""
  travelers: [String]

  """Number of travelers"""
  number_of_travelers: Int

  """The name of the department under which this booking should be reported"""
  department_name: String

  """Total cost of booking"""
  total_spend: String

  """
  Credit card nickname or type and last 4 digits if corporate, otherwise 'personal'
  """
  card: String

  """The names of the expense tags associated with the booking"""
  expense_tags: [String]

  """Is booking cancelled"""
  is_canceled: Boolean

  """Whether or not the booking is within policy"""
  is_within_policy: Boolean

  """Amount allowed by policy"""
  policy_amount: String

  """Reason for booking out of policy"""
  out_of_policy_reason: String
}

type GroupCarBookingDetailsData {
  """a list containing group car booking details"""
  group_car_booking_details_data: [GroupCarBookingDetailsEntry]
}

type GroupCarBookingDetailsEntry {
  group_car_booking_details_entry: GroupCarBookingOutputValues
}

type GroupCarBookingGuidelinesInfo {
  """Whether or not the booking is within guidelines"""
  within_guidelines: Boolean

  """Reason code for booking out of guidelines"""
  reason_for_booking_out_of_guidelines_code: OutOfGuidelinesReasonCode

  """User entered reason for why they booked out of guidelines"""
  reason_for_booking_out_of_guidelines: String

  """The car booking spending capacity of the group"""
  spending_cap: Int
}

type GroupCarBookingOutputValues {
  agency: String
  traveler: String
  car_class: String
  booked_on: String
  dates: String
  total: Int
  savings: Int
  expense_tag_names: [String]
  within_guidelines: Boolean
  reason_for_booking_out_of_guidelines: String
  status: String
  booking_id: String
  booking_traveler_profile_id: String
  reason_for_booking_out_of_guidelines_code: String

  """
  Component type of the booking. Distinguishes between custom booking and car bookings
  """
  component_type: String
}

type GroupCarGuidelines {
  id: ID

  """The group these guidelines apply to"""
  group: Group

  """The car booking spending capacity of the group"""
  spending_cap: Int

  """The currency type/unit used within car guideline setting"""
  currency_code: String

  """The id of the category to assign to the guideline"""
  group_policy_assignment_id: String
}

type GroupCarLoyaltyProgram {
  """Loyalty program Id"""
  id: ID

  """Loyalty program number"""
  loyalty_program_number: String!

  """Loyalty program name"""
  name: String

  """Loyalty program long name"""
  long_name: String

  """Loyalty program type"""
  program_type: LoyaltyProgramType

  """Loyalty program URL"""
  url: String

  """List of airlines that support this loyalty program"""
  suppliers: [CarLoyaltyProgramSupplier]
}

type GroupDepartment {
  """The unique identifier for the department"""
  id: ID

  """The free-text name of the department"""
  name: String

  """The group this department belongs to"""
  group: Group

  """The people in the department"""
  people: [GroupPerson]

  """Whether this department should be available for new people to join"""
  archived: Boolean
}

type GroupDepartmentBookingDetailsData {
  """a list containing group department booking details"""
  group_department_booking_details_data: [GroupDepartmentBookingDetailsEntry]
}

type GroupDepartmentBookingDetailsEntry {
  group_department_booking_details_entry: GroupDepartmentBookingOutputValues
}

type GroupDepartmentBookingOutputValues {
  department: String
  traveler: String
  type: String
  spend: Int
  savings: Int
  expense_tag_names: [String]
  within_guidelines: Boolean
  reason_for_booking_out_of_guidelines: String
  status: String
  booking_id: String
  booking_traveler_profile_id: String
  reason_for_booking_out_of_guidelines_code: String

  """
  Component type of the booking.        Used to distinguish between custom and car bookings. Use the type field.
  """
  component_type: String
}

input GroupDepartmentInput {
  name: String
  user_ids: [String]
}

type GroupDestination {
  id: String

  """The group this destination belongs to"""
  group: Group

  """The destination's name, entered by group admin as freeform text"""
  name: String

  """The address selected for this destination"""
  address: String

  """The destination's latitude"""
  latitude: Float

  """The destination's longitude"""
  longitude: Float

  """A stock image associated with this destination"""
  image: Image

  """a list of hotels within 10 mi radius that have been booked by company"""
  group_destination_hotels: [GroupDestinationHotel]

  """
  the number of visits to this destination. Essentially just the number of hotel bookings
  """
  visits: Int

  """Recommendations for the destination"""
  recommendations(
    """
    If specified, filter recommendations to preferred (admin-dictated) or not
    """
    preferred: Boolean

    """If specified, filter recommendations to a type"""
    recommendation_type: GroupRecommendationType

    """If specified, filter recommendations to only those for this object"""
    recommended_object_id: ID
  ): [GroupRecommendation]
  group_recommendations: [GroupRecommendation] @deprecated(reason: "Use `recommendations`")
  hotel_ids: JSONString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  group_id: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  modified: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  properties: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  tags: JSONString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  version: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  deleted: Boolean @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

type GroupDestinationHotel {
  """id of the Hotel."""
  id: ID

  """name of the hotel"""
  name: String

  """ First Address Line of the hotel"""
  address1: String

  """city where the hotel is located"""
  city: String

  """province where the hotel is located"""
  province: String

  """postal code for the location of this hotel"""
  postal_code: String

  """The latitude of the hotel"""
  latitude: Float

  """The longitude of the hotel"""
  longitude: Float

  """hotel media associated with this hotel"""
  media: [Media]

  """Total number of bookings at this hotel"""
  bookings: Int

  """Total number of nights stayed at this hotel"""
  nights: Int

  """The distance to the destination address"""
  hotel_distance: Float
}

type GroupDestinationNode {
  """destination name entered by group admin as freeform text"""
  name: String
  tags: JSONString
  deleted: Boolean
  created: DateTime
  modified: DateTime
  longitude: Float
  properties: GenericScalar

  """refers to Hotel in hotels db"""
  hotel_ids: JSONString
  version: Int
  address: String
  latitude: Float
  group_id: String
  group: GroupNode!
  id: ID!
}

type GroupDomain {
  id: ID
  whitelist_new_users: Boolean
  domain: String
  url: String
}

type GroupFlightBookingDetailsData {
  """a list containing group flight booking details"""
  group_flight_booking_details_data: [GroupFlightBookingDetailsEntry]
}

type GroupFlightBookingDetailsEntry {
  group_flight_booking_details_entry: GroupFlightBookingOutputValues
}

type GroupFlightBookingGuidelinesInfo {
  """The guidelines applied to this flight booking"""
  guidelines: GroupFlightGuidelines

  """The group these guidelines apply to"""
  group: Group

  """Total price of the booking in cents"""
  total_price: Int

  """
  The outbound airtime used to determine the max cabin type for this fare
  """
  airtime_minutes: Int

  """The highest number of stops of any leg of the booked fare"""
  num_stops: Int

  """Price target cap in cents before wiggle room is applied"""
  guideline_base_price: Int

  """Price target cap in cents including wiggle room policy"""
  max_price: Int

  """Price target cap in cents including non-stop wiggle room policy"""
  non_stop_max_price: Int

  """
  The max cabin type determined by airtime for calculating base max price
  """
  max_cabin_type: CabinType

  """Whether or not the booking is within guidelines"""
  within_guidelines: Boolean

  """User entered reason for why they booked out of guidelines"""
  reason_for_booking_out_of_guidelines: String

  """Reason for booking out of guidelines code"""
  reason_for_booking_out_of_guidelines_code: OutOfGuidelinesReasonCode

  """Currency code of the fare for these guidelines"""
  currency_code: ISOCurrencyCode

  """Guidelines info converted into another currency"""
  converted_guidelines_info(currency_code: ISOCurrencyCode!): ConvertedGroupFlightBookingGuidelinesInfo
}

type GroupFlightBookingOutputValues {
  airline: [String]
  traveler: String
  booked_on: String
  dates: String
  airline_class: [String]
  spend: Int
  savings: Int
  expense_tag_names: [String]
  within_guidelines: Boolean
  reason_for_booking_out_of_guidelines: String
  status: String
  booking_id: String
  booking_traveler_profile_id: String
  reason_for_booking_out_of_guidelines_code: String
}

type GroupFlightCabinClassPolicy {
  """A unique identifier for the policy"""
  id: ID

  """The group to which this policy belongs"""
  group: Group
  cabin_class: CabinType
  threshold: Int
}

input GroupFlightCabinClassPolicyInput {
  cabin_class: CabinType!

  """
  The number of hours above which the flight must be for the provided class to be within guidelines.
  """
  threshold: Int
  threshold_extreme: PolicyExtreme
}

type GroupFlightDirectPolicy {
  """A unique identifier for the policy"""
  id: ID

  """The group to which this policy belongs"""
  group: Group
  amount: Int
}

type GroupFlightGuidelines {
  """The id of the group flight guideline"""
  id: ID

  """The group these guidelines apply to"""
  group: Group

  """Whether this guideline record represents guidelines being reset/unset"""
  is_unset: Boolean

  """Flight wiggle room amount in cents"""
  wiggle_room: Int

  """Flight wiggle room amount in cents for non-stop fares"""
  non_stop_wiggle_room: Int

  """Cabin policy airtime guidelines thresholds"""
  cabin_policies: [GroupFlightGuidelinesCabinPolicy]

  """The currency type/unit used within car guideline setting"""
  currency_code: String

  """The id of category assigned to the guideline"""
  group_policy_assignment_id: ID
}

type GroupFlightGuidelinesCabinPolicy {
  """Cabin airtime policy cabin-type"""
  cabin_type: CabinType

  """Full airtime threshold in minutes"""
  airtime_minutes: Int

  """Full airtime threshold rounded to the nearest number in hours"""
  airtime_hours: Int
}

input GroupFlightGuidelinesCabinPolicyInput {
  """The cabin type this airtime threshold applies to"""
  cabin_type: CabinType!

  """Required when `cabin_policy_type: CABIN_POLICY_THRESHOLD`"""
  airtime_minutes: Int

  """Whether a cabin type is always, never, or sometimes allowed"""
  cabin_policy_type: GroupFlightGuidelinesCabinPolicyType!
}

enum GroupFlightGuidelinesCabinPolicyType {
  CABIN_POLICY_ALWAYS
  CABIN_POLICY_NEVER
  CABIN_POLICY_THRESHOLD
}

type GroupFlightWigglePolicy {
  """A unique identifier for the policy"""
  id: ID

  """The group to which this policy belongs"""
  group: Group
  amount: Int
}

type GroupHotelBookingDetailsData {
  """a list containing group hotel booking details"""
  group_hotel_booking_details_data: [GroupHotelBookingDetailsEntry]
}

type GroupHotelBookingDetailsEntry {
  group_hotel_booking_details_entry: GroupHotelBookingOutputValues
}

type GroupHotelBookingGuidelinesInfo {
  """The guidelines applied to this booking"""
  guidelines: GroupHotelGuidelines

  """The group these guidelines apply to"""
  group: Group

  """Total price of the booking"""
  total_price: Int

  """City in which this booking will take place"""
  city: String

  """Target price cap set by Harrison"""
  harrison_adjusted_price: Int

  """Whether or not the booking is within guidelines"""
  within_guidelines: Boolean

  """Reason code for booking out of guidelines"""
  reason_for_booking_out_of_guidelines_code: OutOfGuidelinesReasonCode

  """User entered reason for why they booked out of guidelines"""
  reason_for_booking_out_of_guidelines: String
}

type GroupHotelBookingOutputValues {
  hotel: String
  traveler: String
  booked_on: String
  stay: String
  payment_policy: String
  spend: Int
  savings: Int
  expense_tag_names: [String]
  within_guidelines: Boolean
  reason_for_booking_out_of_guidelines: String
  status: String
  booking_id: String
  booking_traveler_profile_id: String
  reason_for_booking_out_of_guidelines_code: String
}

input GroupHotelGuidelinePrimaryCityInput {
  group_id: String
  city_id: String
}

type GroupHotelGuidelines {
  """The group these guidelines apply to"""
  group: Group

  """The guideline table entry id"""
  id: ID

  """Target location set for guidelines"""
  target_location_name: String

  """Location ID for target location"""
  target_location_id: ID

  """Target price set for a selected city"""
  target_price: Int

  """Target price level (hotel tier)"""
  target_price_level: Int

  """The currency type/unit used within hotel guideline setting"""
  currency_code: String

  """The id of the group policy category assigned to the hotel guideline"""
  group_policy_assignment_id: String
}

type GroupHotelNegotiatedRatesOutput {
  negotiated_rate_id: String
  group_id: String
  hotel_id: String
  code_value: String
}

type GroupHotelNode {
  properties: GenericScalar
  tags: JSONString
  deleted: Boolean
  created: DateTime
  modified: DateTime
  hotel_id: String
  hotel: HotelNode!
  group_destination: GroupDestinationNode
  group_destination_id: Int
  version: Int
  group_id: String
  group: GroupNode!
  id: ID!
}

type GroupHotelRecommendation implements GroupRecommendation {
  """The ID of the recommendation"""
  id: String
  group: Group
  group_destination: GroupDestination
  recommendation_type: GroupRecommendationType
  user: User
  tip: String
  preferred: Boolean

  """distance to the group destination"""
  distance: Float

  """number of nights stayed at a hotel"""
  nights: Int
  user_id: String @deprecated(reason: "Use user.id")
  group_id: String @deprecated(reason: "Use group.id")
  group_destination_id: String @deprecated(reason: "Use group_destination.id")
  type: String @deprecated(reason: "Use recommendation_type")
  type_id: String @deprecated(reason: "Use hotel/restaurant")
  name: String @deprecated(reason: "Use hotel/restaurant.name")
  latitude: Float @deprecated(reason: "Use hotel/restaurant.latitude")
  longitude: Float @deprecated(reason: "Use hotel/restaurant.longitude")
  address: String @deprecated(reason: "Use hotel/restaurant.address")
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")

  """The recommended hotel"""
  hotel: Hotel
}

type GroupHotelTierPolicy {
  """A unique identifier for the policy"""
  id: ID

  """The group to which this policy belongs"""
  group: Group
  tier: Int
}

input GroupInput {
  name: String
  address1: String
  address2: String
  city: String
  phone: String
  province: String
  country: String
  postal_code: String
  url: String
  domain: String
  num_employees: String
  allow_member_access: Boolean
}

input GroupInvitationInput {
  """The email address of the invitee"""
  email_address: String!

  """The first name of the invitee"""
  first_name: String

  """The last name of the invitee"""
  last_name: String

  """The phone number of the invitee"""
  phone: String

  """The role of the invitee"""
  role: GroupAssociationRole

  """The id of the department of the invitee"""
  department_id: ID

  """The id of the corporate card from the group of the invitee"""
  payment_id: ID
}

type GroupInvitee implements GroupPerson {
  """
  A unique ID for the GroupPerson. Implementation detail: this is the ID of the underlying GroupAssociation or GroupInvite
  """
  id: ID
  group: Group
  first_name: String
  last_name: String
  email: String
  role: GroupAssociationRole
  department: GroupDepartment
  user: User
  type: GroupPersonType
}

type GroupLoyaltyProgramAssociation {
  group_id: ID
  loyalty_program_id: ID
  loyalty_program_number: String
}

type GroupMember implements GroupPerson {
  """
  A unique ID for the GroupPerson. Implementation detail: this is the ID of the underlying GroupAssociation or GroupInvite
  """
  id: ID
  group: Group
  first_name: String
  last_name: String
  email: String
  role: GroupAssociationRole
  department: GroupDepartment
  user: User
  type: GroupPersonType
  allowed_payment_methods: [PaymentMethod]
}

input GroupMembershipInput {
  first_name: String
  last_name: String
  role: GroupAssociationRole
  department_id: ID
}

type GroupNode {
  province: String

  """
  Deprecated in favor of a join table with many possible domains for a particular group. See GroupDomain.
  """
  domain: String
  name: String
  tags: JSONString
  deleted: Boolean
  address1: String
  reader_id: String
  phone: String
  postal_code: String
  country_code: String
  id: ID!
  tax_id: String
  city: String

  """
  This lets us know whether or not the group has been verified by a user via some email
  """
  verified: Boolean
  preferences: GenericScalar
  created: DateTime

  """
  Deprecated in favor of a join table with many possible urls for a particular group. See GroupDomain.
  """
  url: String
  country: String
  industry: String
  modified: DateTime
  longitude: Float
  properties: GenericScalar
  creator_id: String
  creator: UserNode!
  version: Int
  latitude: Float

  """
  The unique name for this Group - ideally this would be all lower case with no spaces
  """
  shortname: String
  address2: String
  group_type: String
  province_code: String
}

interface GroupPerson {
  """
  A unique ID for the GroupPerson. Implementation detail: this is the ID of the underlying GroupAssociation or GroupInvite
  """
  id: ID
  group: Group
  first_name: String
  last_name: String
  email: String
  role: GroupAssociationRole
  department: GroupDepartment
  user: User
  type: GroupPersonType
}

enum GroupPersonType {
  INVITEE
  MEMBER
}

type GroupPolicyAssignment {
  """The id of the group policy"""
  id: ID!

  """The category of the group policy"""
  group_policy_assignment_category: GroupPolicyAssignmentCategories!

  """List of users in the policy"""
  users: [User]

  """The policy's hotel guidelines"""
  hotel_guidelines: GroupHotelGuidelines

  """The policy's flight guidelines"""
  flight_guidelines: GroupFlightGuidelines

  """The policy's car guidelines"""
  car_guidelines: GroupCarGuidelines
}

enum GroupPolicyAssignmentCategories {
  DEFAULT
  DIRECTOR
  EXECUTIVE
  MANAGER
}

type GroupPolicyBookingDetailsData {
  """a list containing group out of policy booking details"""
  group_policy_booking_details_data: [GroupPolicyBookingDetailsEntry]
}

type GroupPolicyBookingDetailsEntry {
  group_policy_booking_details_entry: GroupPolicyBookingOutputValues
}

type GroupPolicyBookingOutputValues {
  traveler: String
  type: String
  booked_on: String
  spend: Int
  savings: Int
  expense_tag_names: [String]
  reason_for_booking_out_of_guidelines: String
  within_guidelines: Boolean
  status: String
  booking_id: String
  booking_traveler_profile_id: String
  reason_for_booking_out_of_guidelines_code: String

  """
  Component type of the booking.            Used to distinguish between custom and car bookings. Use the type field.
  """
  component_type: String
}

type GroupPreferences {
  id: ID

  """
  Whether members of this group can create expense tags, or if only admins can.
  """
  members_can_create_expense_tags: Boolean

  """
  Whether members of a group are required to enter at least 1 expense tag at booking.
  """
  expense_tags_required: Boolean
}

interface GroupRecommendation {
  """The ID of the recommendation"""
  id: String
  group: Group
  group_destination: GroupDestination
  recommendation_type: GroupRecommendationType
  user: User
  tip: String
  preferred: Boolean

  """distance to the group destination"""
  distance: Float

  """number of nights stayed at a hotel"""
  nights: Int
  user_id: String @deprecated(reason: "Use user.id")
  group_id: String @deprecated(reason: "Use group.id")
  group_destination_id: String @deprecated(reason: "Use group_destination.id")
  type: String @deprecated(reason: "Use recommendation_type")
  type_id: String @deprecated(reason: "Use hotel/restaurant")
  name: String @deprecated(reason: "Use hotel/restaurant.name")
  latitude: Float @deprecated(reason: "Use hotel/restaurant.latitude")
  longitude: Float @deprecated(reason: "Use hotel/restaurant.longitude")
  address: String @deprecated(reason: "Use hotel/restaurant.address")
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

input GroupRecommendationInput {
  id: String
  group_id: String
  user_id: String
  group_destination_id: String!
  recommendation_type: String!
  recommended_obj_id: String!
  preferred: Boolean
  tip: String
}

type GroupRecommendationSummary {
  group_id: String
  group_destination_id: String
  user_ids: [String]
  name: String
  type: String
  type_id: String
  created: DateTime
  latitude: Float
  longitude: Float
  address: String
  tips: [String]
  preferred: Boolean
}

enum GroupRecommendationType {
  HOTEL
  RESTAURANT
}

type GroupRestaurantRecommendation implements GroupRecommendation {
  """The ID of the recommendation"""
  id: String
  group: Group
  group_destination: GroupDestination
  recommendation_type: GroupRecommendationType
  user: User
  tip: String
  preferred: Boolean

  """distance to the group destination"""
  distance: Float

  """number of nights stayed at a hotel"""
  nights: Int
  user_id: String @deprecated(reason: "Use user.id")
  group_id: String @deprecated(reason: "Use group.id")
  group_destination_id: String @deprecated(reason: "Use group_destination.id")
  type: String @deprecated(reason: "Use recommendation_type")
  type_id: String @deprecated(reason: "Use hotel/restaurant")
  name: String @deprecated(reason: "Use hotel/restaurant.name")
  latitude: Float @deprecated(reason: "Use hotel/restaurant.latitude")
  longitude: Float @deprecated(reason: "Use hotel/restaurant.longitude")
  address: String @deprecated(reason: "Use hotel/restaurant.address")
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")

  """The recommended restaurant"""
  restaurant: Restaurant
}

type GroupSavingsSummary {
  top_traveler_saver: TravelerSavingsSummary
  top_traveler_offender: TravelerSavingsSummary
  top_department_saver: DepartmentSavingsSummary
  top_department_offender: DepartmentSavingsSummary
  bookings_summary: SavingsSummary
  bookings_assoc_with_dep: SavingsSummary
  policy_in: SavingsSummary
  policy_out: SavingsSummary
  trips: GroupTripCounts
}

input GroupSavingsSummaryReportInputParams {
  """start_date on booking entries: Format should be yyyy-mm-dd"""
  start_date: String

  """end_date on booking entries: Format should be yyyy-mm-dd"""
  end_date: String
  booking_type: String

  """
  Department ID. Omit if you want data for all departments or pass
  'no_department' for retrieving savings info for bookings not associated with any department
  """
  group_department_id: String
}

type GroupTravelerBookingDetailsData {
  """a list containing group traveler booking details"""
  group_traveler_booking_details_data: [GroupTravelerBookingDetailsEntry]
}

type GroupTravelerBookingDetailsEntry {
  group_traveler_booking_details_entry: GroupTravelerBookingOutputValues
}

type GroupTravelerBookingOutputValues {
  name: String
  type: String
  booked_on: String
  dates: String
  spend: Int
  savings: Int
  expense_tag_names: [String]
  within_guidelines: Boolean
  reason_for_booking_out_of_guidelines: String
  status: String
  booking_id: String
  booking_traveler_profile_id: String
  reason_for_booking_out_of_guidelines_code: String

  """
  Component type of the booking.            Used to distinguish between custom and car bookings. Use the type field.
  """
  component_type: String
}

type GroupTripCounts {
  booked_count: Int
  upcoming: Int
  active: Int
  past: Int
  top_destinations: [TopDestination]
  hours_traveled: Int
  days_traveled: Int
  miles_traveled: Int
  by_date: [MonthTripCounts]
}

"""
Given a code, will return basic user info if code is current.
Will log the user in if their email is validated
Will resend the email with a new code if the code is expired or has already been used
"""
type HandleMagicLinkLogin {
  ok: Boolean
  user_id: String
  first_name: String
  last_name: String
  email: String
  email_validated: Boolean
  invalid_code: Boolean
}

"""Handles a password login request """
type HandlePasswordLogin {
  ok: Boolean
  user: User
  should_update: Boolean
}

"""The Hotel node furnishes information about a given hotel"""
interface Hotel {
  """id of the Hotel."""
  id: ID

  """name of the hotel"""
  name: String

  """ First Address Line of the hotel"""
  address1: String

  """ Second Address Line of the hotel"""
  address2: String

  """Amenities available at the hotel"""
  raw_amenities: RawHotelAmenityInformation

  """city where the hotel is located"""
  city: String

  """country where the hotel is located"""
  country: String

  """country code for the location of this hotel"""
  country_code: ISOCountryCode

  """province where the hotel is located"""
  province: String

  """province code for the location of this hotel"""
  province_code: String

  """website of this hotel"""
  website: String

  """additional derived features for this hotel"""
  raw_supplements: RawHotelSupplementInfo

  """local currency accepted by the hotel"""
  currency: ISOCurrencyCode

  """data describing the hotel"""
  description: HotelDescription

  """contact email for this hotel"""
  email: String

  """contact fax number for this hotel"""
  fax: String

  """star rating for this hotel"""
  star_rating: String

  """category for this hotel"""
  category: String

  """tag line for this hotel"""
  tag_line: String

  """contact phone number for this hotel"""
  phone: String

  """postal code for the location of this hotel"""
  postal_code: String

  """latitude for the location of this hotel"""
  latitude: String

  """longitude for the location of this hotel"""
  longitude: String

  """hotel media associated with this hotel"""
  media: [Media]

  """The chain associated with this hotel"""
  chain: String

  """the brand associated with this hotel"""
  master_brand: String

  """
  local checkin timedelta from the beginning of the day for the hotel in seconds
  """
  checkin_time: Int

  """
  local checkout timedelta from the beginning of the day for the hotel in seconds
  """
  checkout_time: Int

  """The number of ratings for the hotel."""
  num_ratings: Int

  """Whether or not the active user has already booked this hotel"""
  booked_before: Boolean

  """Whether or not the active user's group(s) prefer this hotel"""
  group_admin_preferred: Boolean
  group_hotel_negotiated_rates: GroupHotelNegotiatedRatesOutput

  """availability summary for the hotel and given search parameters"""
  availability(search_query: HotelAvailabilityInput!): HotelAvailabilitySummary
  rooms(
    """
    A HotelRoomInput object representing the dates and guests to check availability against
    """
    hotel_room_info: HotelRoomInput!
  ): [HotelRoom]

  """Google directions from a given origin to the hotel"""
  google_directions(
    """starting point for a google directions lookup to the hotel"""
    starting_point: LocationInput!
  ): [GoogleDirectionsRoute]

  """Please use raw_amenities instead."""
  amenities: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  supplements: DerivedHotelAttributesNode @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")

  """Only for Lola Desktop"""
  backwards_compatible_media: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

type HotelAudit {
  id: String
  created: String
  modified: String
  user_id: String
  first_name: String
  last_name: String
  hotel_id: String
  hotel_name: String
  hotel_location: String
  old_value: GenericScalar
  new_value: GenericScalar
}

"""
Hotel Availability input parameters that capture non-location based constraints like
start dates, end dates and number of rooms/guests
TODO: remove this once we switch to 2 phase
"""
input HotelAvailabilityInput {
  """Start date for hotel availability request"""
  start: String!

  """End date for hotel availability request"""
  end: String!

  """Number of guests for hotel availability request"""
  num_guests: String!

  """Number of rooms for hotel availability request"""
  num_rooms: String!

  """Number of results requested"""
  num_results: String

  """filter parameters for the current hotel request"""
  filters: FilterInput

  """the hotel ids for the current request"""
  hotel_ids: [ID]

  """location parameters for the current hotel request"""
  location: LocationInput

  """Currency code for availability request (default: USD)"""
  currency_code: ISOCurrencyCode
}

"""
The HotelAvailabilitySummary node is a summary of the availability of a hotel for a proposed stay (time period)
"""
type HotelAvailabilitySummary {
  """flag indicating availability."""
  is_available: Boolean

  """
  Priceline-specific field indicating whether the rate is a Closed User Group
  rate -- these are usually cheaper than non CUG rates
  """
  is_cug_rate: Boolean

  """
  flag indicating whether the min availability call is inaccurate (Sabre returns
  min rate for some of the nights instead of min avg nightly rate across stay
  duration) and the user should fetch hotel room rates for pricing
  """
  check_rates: Boolean

  """returned minimum rate for this hotel and availability."""
  min_rate: Int

  """
  Priceline-specific field for the benchmark price of CUG rates. Price is in
  cents and is used to compute savings w.r.t. the min rate.
  """
  benchmark_rate: Int

  """id for available hotel"""
  hotel_id: ID

  """Currency code of availability summary price fields"""
  currency_code: ISOCurrencyCode

  """Guideline information for this hotel and its availability"""
  guidelines: HotelGuidelines
}

type HotelBookFailEventNode {
  requesting_user_id: String
  requesting_user: UserNode
  changed_objects: GenericScalar
  event_type: EnumString
  component_type: EnumString
  created: DateTime
  deleted: Boolean
  modified: DateTime
  version: Int
  details: HotelBookingFailureDetailsNode
  reported_timestamp: DateTime
  id: ID!
  booking: BookingNode!
  booking_id: Int
}

type HotelBooking implements Booking {
  """The id of the booking"""
  id: ID

  """
  The provider used for making this booking. Generally sabre or amadeus. We should change this to an enum at some point.
  """
  provider: String

  """
  Whether or not this is an internal (our systems) or external booking. We should change this to an enum at some point.
  """
  source: EnumString

  """How a customer has catgorized/tagged this booking expense."""
  expense_tag: ExpenseTag @deprecated(reason: "Please use `expense_tags` to get all of the tags associated with the booking.")

  """How a customer has catgorized/tagged this booking expense."""
  expense_tags: [ExpenseTag]

  """The emails that are following this booking."""
  booking_followers: [BookingFollower]

  """The overall status of this booking, from a *user's* point of view."""
  booking_status: BookingStatus

  """
  A code representing the nature of why this booking errored (if it did). Note
  that more information about the error is available internally, but this
  provides a simple interface so clients can customize their messaging.
  """
  booking_error_key: String

  """The internal status of the booking, derived from its events."""
  status: String @deprecated(reason: "Please use `booking_status` for conveying statuses to users.")

  """
  Whether this booking has been processed and is ready to be displayed to a user.
  """
  consumable: Boolean

  """
  Indicates how likely it is that the booking is fradulent. Negative is good, positive is bad. From roughly -10 to 10.
  """
  fraud_score: Int

  """The loyalty programs that were successfully applied to this booking."""
  applied_user_loyalty_programs: [UserLoyaltyProgram]

  """The group this booking was made under."""
  group: Group

  """
  The group department under which this booking should be counted for reporting.
  """
  group_department: GroupDepartment

  """Information about what payment method was used to place this booking."""
  payment_info: PaymentInfo

  """The travelers for this booking"""
  travelers: [BookingTravelerProfile]

  """The email which will be used for expense reporting."""
  expensing_email: String

  """Whether or not this booking can be expensed"""
  expensable: Boolean

  """Whether or not this booking can have its expense sent"""
  expense_sendable: Boolean

  """Whether the expense has already been sent or not."""
  expense_sent: Boolean

  """The user who made/requested this booking."""
  user: User

  """The trips this booking is part of."""
  trips: [Trip]

  """A flag denoting whether or not this booking was made by you."""
  is_booked_by_you: Boolean

  """What the user paid for something."""
  price_details: PriceDetails

  """whether or not the booking is external or booked through Lola"""
  is_external: Boolean

  """
  When this booking was reported as being made, either by the provider or the importing user.
  """
  reported_booking_time: DateTime
  component: ItineraryComponentNode @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  component_id: String @deprecated(reason: "Please request the id on the component. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  component_type: String @deprecated(reason: "Please request the type on the component. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  deleted: Boolean @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  group_id: String @deprecated(reason: "Please request the id on the group instead. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  installation_id: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  modified: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  participants: JSONString @deprecated(reason: "Please request the travelers instead. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  previous_booking_id: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  tags: JSONString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  total_price: Int @deprecated(reason: "Please use price_details instead.")
  trip: TripNode @deprecated(reason: "This is unrelated to the current implementation of trips. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  trip_id: Int @deprecated(reason: "This is unrelated to the current implementation of trips. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  user_id: ID @deprecated(reason: "Please request the id on the user. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  version: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  checkin_date: DateTime
  checkout_date: DateTime
  confirmation_number: String
  hotel: Hotel
  hotel_image_url: String

  """Please request rooms instead"""
  room: BookedHotelRoom

  """Please request room instead."""
  rooms: [BookedHotelRoom] @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")

  """Please get this info from somewhere else."""
  stay_info: HotelStayInfo @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  guidelines_info: GroupHotelBookingGuidelinesInfo
  converted_guidelines_info(currency_codes: [ISOCurrencyCode]): [ConvertedGroupHotelBookingGuidelinesInfo]
  external_booking_reason: String
  is_manual_cancel: Boolean

  """
  Provider-specific trip identifier used to look up the booking, currently only used for Priceline
  """
  provider_trip_id: String
}

type HotelBookingConfirmationNode {
  """the first name under which the reservation was booked"""
  name_first: String

  """all codes returned as part of booking"""
  booking_codes: GenericScalar

  """the last 4 digits of the card used to book the reservation"""
  card_last_4: String

  """
  whether initiating a cancellation requires a Lola concierge member to contact the provider (currently only for Priceline)
  """
  is_manual_cancel: Boolean
  reported_timestamp: DateTime

  """free text from hotel regarding booking"""
  hotel_freeform_message: String

  """the email address under which the reservation was booked"""
  email_address: String
  id: ID!

  """the primary customer-facing booking confirmation code"""
  customer_confirmation_code: String

  """the last name under which the reservation was booked"""
  name_last: String
  created: DateTime

  """the supplier that executed the booking"""
  supplier_code: String
  event_details: GenericScalar
  modified: DateTime

  """the type of card used to book the reservation"""
  card_type: EnumString

  """the primary HotelReservationGuest used to book the reservation"""
  primary_guest: HotelReservationGuestNode!

  """the primary HotelReservationGuest used to book the reservation"""
  primary_guest_id: Int

  """the provider used to book"""
  provider: HotelProviderNode!

  """the provider used to book"""
  provider_id: Int

  """time of booking as reported by counterparty"""
  reported_booking_timestamp: DateTime
}

type HotelBookingFailureDetailsNode {
  """
  a serialized LolaClientError. It has the full, nested causal chain with an
  appropriate "key" that will give greater detail as to the category of failure
  """
  error_details: GenericScalar

  """time of booking failure as reported by counterparty"""
  reported_failure_timestamp: DateTime
  created: DateTime

  """the supplier that attempted to execute the booking"""
  supplier_code: String

  """the provider used to attempt to book"""
  provider: HotelProviderNode

  """the provider used to attempt to book"""
  provider_id: Int
  modified: DateTime
  id: ID!
}

"""
Captures user search parameters from the lobby and filter criteria from the search results
"""
input HotelBookingSearchInput {
  """The ranking of the hotel within search results"""
  hotel_search_rank: Int

  """The type of sorting used in search (e.g. recommended)"""
  filter_sort_by: String
}

type HotelBrandNode {
  name: String
  parent_brand: HotelBrandNode
  parent_brand_id: Int
  created: DateTime
  url: String
  modified: DateTime
  id: ID!
}

type HotelCancelFailEventNode {
  requesting_user_id: String
  requesting_user: UserNode
  changed_objects: GenericScalar
  event_type: EnumString
  component_type: EnumString
  created: DateTime
  deleted: Boolean
  modified: DateTime
  version: Int
  details: HotelCancellationFailureDetailsNode
  reported_timestamp: DateTime
  id: ID!
  booking: BookingNode!
  booking_id: Int
}

type HotelCancellationConfirmationNode {
  """the primary customer-facing cancellation confirmation number"""
  customer_confirmation_code: String
  created: DateTime

  """the supplier that executed the booking & cancellation"""
  supplier_code: String

  """time of cancellation as reported by counterparty"""
  reported_cancellation_timestamp: DateTime
  modified: DateTime

  """all codes returned as part of cancellation"""
  cancellation_codes: GenericScalar

  """the provider used to book & cancel"""
  provider: HotelProviderNode!

  """the provider used to book & cancel"""
  provider_id: Int

  """message from the hotel for customer"""
  hotel_freeform_message: String
  id: ID!
}

type HotelCancellationFailureDetailsNode {
  """
  a serialized LolaClientError. It has the full, nested causal chain with an
  appropriate "key" that will give greater detail as to the category of failure
  """
  error_details: GenericScalar

  """time of booking failure as reported by counterparty"""
  reported_failure_timestamp: DateTime
  created: DateTime

  """the supplier that executed the booking and attempted the cancellation"""
  supplier_code: String

  """the provider used to book and to attempt to cancel"""
  provider: HotelProviderNode

  """the provider used to book and to attempt to cancel"""
  provider_id: Int
  modified: DateTime
  id: ID!
}

type HotelChainNode {
  website: String
  name: String
  created: DateTime
  deleted: Boolean
  modified: DateTime
  chain_code: String
  version: Int
  master_brand: HotelMasterBrandNode!
  master_brand_id: Int
  id: ID!
}

type HotelDescription {
  """The hotel description"""
  description: String
}

"""A Hotel derived from a HotelAvailabilitySummary (deprecated)"""
type HotelFromAvailabilitySummary implements Hotel {
  """id of the Hotel."""
  id: ID

  """name of the hotel"""
  name: String

  """ First Address Line of the hotel"""
  address1: String

  """ Second Address Line of the hotel"""
  address2: String

  """Amenities available at the hotel"""
  raw_amenities: RawHotelAmenityInformation

  """city where the hotel is located"""
  city: String

  """country where the hotel is located"""
  country: String

  """country code for the location of this hotel"""
  country_code: ISOCountryCode

  """province where the hotel is located"""
  province: String

  """province code for the location of this hotel"""
  province_code: String

  """website of this hotel"""
  website: String

  """additional derived features for this hotel"""
  raw_supplements: RawHotelSupplementInfo

  """local currency accepted by the hotel"""
  currency: ISOCurrencyCode

  """data describing the hotel"""
  description: HotelDescription

  """contact email for this hotel"""
  email: String

  """contact fax number for this hotel"""
  fax: String

  """star rating for this hotel"""
  star_rating: String

  """category for this hotel"""
  category: String

  """tag line for this hotel"""
  tag_line: String

  """contact phone number for this hotel"""
  phone: String

  """postal code for the location of this hotel"""
  postal_code: String

  """latitude for the location of this hotel"""
  latitude: String

  """longitude for the location of this hotel"""
  longitude: String

  """hotel media associated with this hotel"""
  media: [Media]

  """The chain associated with this hotel"""
  chain: String

  """the brand associated with this hotel"""
  master_brand: String

  """
  local checkin timedelta from the beginning of the day for the hotel in seconds
  """
  checkin_time: Int

  """
  local checkout timedelta from the beginning of the day for the hotel in seconds
  """
  checkout_time: Int

  """The number of ratings for the hotel."""
  num_ratings: Int

  """Whether or not the active user has already booked this hotel"""
  booked_before: Boolean

  """Whether or not the active user's group(s) prefer this hotel"""
  group_admin_preferred: Boolean
  group_hotel_negotiated_rates: GroupHotelNegotiatedRatesOutput

  """availability summary for the hotel and given search parameters"""
  availability(search_query: HotelAvailabilityInput!): HotelAvailabilitySummary
  rooms(
    """
    A HotelRoomInput object representing the dates and guests to check availability against
    """
    hotel_room_info: HotelRoomInput!
  ): [HotelRoom]

  """Google directions from a given origin to the hotel"""
  google_directions(
    """starting point for a google directions lookup to the hotel"""
    starting_point: LocationInput!
  ): [GoogleDirectionsRoute]

  """Please use raw_amenities instead."""
  amenities: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  supplements: DerivedHotelAttributesNode @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")

  """Only for Lola Desktop"""
  backwards_compatible_media: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

type HotelGuidelineCity {
  name: String
  id: String

  """the target spend for the guideline city in cents"""
  target_spend: Int
}

type HotelGuidelines {
  """
  Whether this hotel's minumum available rate is within group guidelines.
  """
  is_within_guidelines: Boolean

  """Whether this hotel has been recommended by a group member"""
  is_recommended_hotel: Boolean

  """
  Whether this hotel has been recommended by a group administrator (formerly a "GroupHotel")
  """
  is_preferred_hotel: Boolean

  """
  A positive/negative percentage indicating how this hotel's minimum available
  rate for the selected dates compares to its historical average.
  """
  historical_price_deviation: Float

  """The guideline max rate for this hotel"""
  guideline_max_price: Int

  """The location used to derive the guideline max price for this hotel"""
  guideline_basis_location: String
}

type HotelImage {
  url: String
}

"""
Composite of search parameters that restrict and filter hotel availability
search requests.
"""
input HotelInput {
  """the hotel ids for the current request"""
  hotel_ids: [ID]

  """hotels to exclude from the search results"""
  excluded_hotel_ids: [ID]

  """location parameters for the current hotel request"""
  location: LocationInput

  """User whose preferences and loyalty programs should be considered"""
  primary_traveler_id: ID
}

type HotelMajorModificationDetailsNode {
  """The source of the major modification to the hotel"""
  source: EnumString
  reported_timestamp: DateTime

  """any additional unstructured details"""
  additional_details: GenericScalar
  created: DateTime

  """
  The message we would like to associate with the modification event. We may
  choose  to default this value by implementing type
  """
  message: String
  modified: DateTime
  id: ID!
}

type HotelManualCancellationConfirmationNode {
  """the primary customer-facing cancellation confirmation number"""
  customer_confirmation_code: String
  created: DateTime

  """time of cancellation as reported by counterparty"""
  reported_cancellation_timestamp: DateTime
  modified: DateTime

  """all codes returned as part of cancellation"""
  cancellation_codes: GenericScalar

  """misc non-customer-facing details for debugging, support, agents, etc."""
  server_message: String

  """a message to display to the customer"""
  customer_message: String
  id: ID!
}

type HotelMasterBrandNode {
  website: String
  version: Int
  name: String
  created: DateTime
  deleted: Boolean
  modified: DateTime
  id: ID!
}

type HotelNegotiatedRateOutputValues {
  negotiated_rate_code_id: String

  """The code of the hotel negotiated rate"""
  code_value: String
  group_id: String
  hotel_id: String
  hotel_name: String
}

type HotelNode {
  province: String
  chain: HotelChainNode
  chain_id: Int
  sub_brand: HotelBrandNode
  sub_brand_id: Int
  num_ratings: Int
  currency: String

  """A postal code or zip code"""
  postal_code: String
  country_code: String
  id: ID!

  """Full text of a city/town name"""
  city: String
  checkin_time: Int
  media: GenericScalar
  lola_preferred: Boolean
  user_rating: Float
  version: Int
  amenities: GenericScalar
  address1: String
  latitude: Float
  email: String
  website: String
  fax: String
  attribution: GenericScalar
  description: GenericScalar
  tags: JSONString
  deleted: Boolean
  nearest_airports: GenericScalar
  address2: String
  max_rate: Int
  checkout_time: Int
  phone: String
  main_brand: HotelBrandNode
  main_brand_id: Int
  properties: GenericScalar
  price_trends: PriceTrendsNode
  price_trends_id: Int
  time_zone_text: String

  """Abbreviation of a province or state"""
  province_code: String
  star_rating: Float
  name: String
  min_rate: Int
  country: String
  created: DateTime
  modified: DateTime
  longitude: Float
  supplements: DerivedHotelAttributesNode
  supplements_id: Int
  agent_notes: GenericScalar
}

type HotelPreferences {
  selected_prices: [Preferences]
  selected_amenities: [Preferences]
  selected_types: [Preferences]
  favorite_hotels: [Hotel]
}

type HotelProviderNode {
  version: Int
  name: EnumString
  created: DateTime
  deleted: Boolean
  modified: DateTime
  id: ID!
}

type HotelRate {
  """A UUID that uniquely identifies the rate"""
  id: ID!

  """Normalized room category as defined in the enum RateCategory"""
  category: RateCategory

  """Nicely formatted rate category that can be displayed to client"""
  displayable_category: String
  description: String
  refundable: Boolean
  cancellation_policy: CancellationPolicy
  amenities: [Amenity]

  """Normalized view category as defined in the enum ViewCategory"""
  view_category: ViewCategory

  """Nicely formatted view category that can be displayed to client"""
  displayable_view_category: String

  """Legal/CC terms"""
  payment_terms: String

  """Normalized deposit type"""
  deposit_type: PartialPaymentType

  """
  A raw text description of the package - may include additional details unclear
  by the rate category and amenities definition alone.
  """
  package: String

  """
  Priceline-specific field indicating whether the rate is a Closed User Group
  rate -- these are usually cheaper than non CUG rates
  """
  is_cug_rate: Boolean

  """
  Priceline-specific field for the benchmark average nightly rate in cents for
  CUG rates. Used to compute savings w.r.t. the average nightly rate and does
  notinclude taxes or fees.
  """
  average_nightly_rate_benchmark: Int
  base_rate: Int!
  total_cost: Int!

  """The total of all taxes and fees"""
  total_tax: Int!

  """
  If != 0, the resort fee charged by the hotel on arrival. Not included as part of total_tax.
  """
  resort_fee: Int!

  """
  If != 0, additional fees charged by the hotel on arrival. Not included as part of total_tax.
  """
  mandatory_fee: Int!

  """A prepay fee that must be included in total taxes and fees."""
  mandatory_fee_prepay: Int

  """
  If != 0, additional taxes charged by the hotel on arrival, e.g. VAT or
  state/local taxes. Not included as part of total_tax.
  """
  mandatory_tax: Int!

  """If != 0, the service fee component of total_tax"""
  service_fee: Int!

  """
  An additional fee for extra people on the booking. Not included as part of total_tax
  """
  extra_person_fee: Int!

  """If != 0, the occupancy tax component of total_tax"""
  occupancy_tax: Int!

  """If != 0, the sales tax component of total_tax"""
  sales_tax: Int!

  """If != 0, the property tax component of total_tax"""
  property_fee: Int!

  """If != 0, the 'Tax' component of total_tax"""
  tax_surcharge: Int!
  average_nightly_rate: Int!
  eligible_for_loyalty_points: Boolean

  """Guideline details for this rate"""
  guidelines: HotelRateGuidelines

  """
  Check-in details for this room - likely to be HTML, but sanitized for safety during parsing
  """
  check_in_instructions: String

  """
  Special check-in details for this room - likely to be HTML, but sanitized for safety during parsing
  """
  special_check_in_instructions: String

  """Just for Lola Desktop"""
  backwards_compatible_amenities: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  payment_policy: EnumString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  rate_type: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")

  """Please use average_nightly_rate instead."""
  nightly_rates: [BaseHotelRoomNightlyRateNode] @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  currency: ISOCurrencyCode

  """Detailed taxes and fees info currently only from Priceline"""
  taxes_and_fees_information: [String]

  """
  Relevant reservation and hotel information (e.g. guarantee policy, room charge
  disclosure, etc.) currently only from Priceline
  """
  important_information: [String]

  """Whether the reservation is only partially refundable"""
  is_partially_refundable: Boolean

  """Whether the reservation is fully (i.e. total cost) refundable"""
  is_fully_refundable: Boolean

  """Whether the reservation is not refundable"""
  is_non_refundable: Boolean

  """Rate pricing in multiple currencies."""
  rate_pricing(
    """Currencies to return the rate pricing in."""
    currency_codes: [ISOCurrencyCode!]
  ): [HotelRatePricing]

  """Whether or not this rate can be expensed, if booked."""
  expensable: Boolean
  provider: DeprecatedAvailableHotelProviderNode @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")

  """Whether this rate requires a CVV to book"""
  requires_cvv: Boolean
}

type HotelRateGuidelines {
  """Whether this hotel rate is in or out of guidelines"""
  is_within_guidelines: Boolean

  """The guideline max rate for this hotel"""
  guideline_max_price: Int

  """The location used to derive the guideline max price for this hotel"""
  guideline_basis_location: String
}

type HotelRatePricing {
  currency_code: ISOCurrencyCode!
  base_rate: Int
  total_tax: Int
  total_cost: Int
  resort_fee: Int
  mandatory_fee: Int
  mandatory_tax: Int
  service_fee: Int
  extra_person_fee: Int
  occupancy_tax: Int
  sales_tax: Int
  property_fee: Int
  tax_surcharge: Int
  average_nightly_rate: Int
  average_nightly_rate_benchmark: Int
  guidelines_max_price: Int
}

type HotelRawNode {
  province: String
  address1: String
  num_ratings: Int
  currency: String

  """A postal code or zip code"""
  postal_code: String
  country_code: String
  id: ID!

  """Full text of a city/town name"""
  city: String
  checkin_time: Int
  media: GenericScalar
  lola_preferred: Boolean
  user_rating: Float
  version: Int
  amenities: GenericScalar
  provider: HotelProviderNode!
  provider_id: Int
  latitude: Float
  provider_brand_id: String
  website: String
  fax: String
  description: GenericScalar
  tags: JSONString
  deleted: Boolean
  nearest_airports: GenericScalar
  address2: String
  max_rate: Int
  checkout_time: Int
  provider_brand_name: String
  phone: String
  provider_master_brand_key: String
  provider_hotel_id: String
  properties: GenericScalar
  time_zone_text: String

  """Abbreviation of a province or state"""
  province_code: String
  star_rating: Float
  name: String
  min_rate: Int
  country: String
  created: DateTime
  modified: DateTime
  longitude: Float
  email: String
  provider_chain_key: String
  agent_notes: GenericScalar
}

type HotelReservationGuestNode {
  phone_number: String
  booking_traveler_profile_id: String
  name_first: String
  name_last: String
  loyalty_programs: GenericScalar
  created: DateTime
  modified: DateTime
  traveler_profile_id: String
  name_middle: String
  user: UserNode!
  user_id: Int
  email_address: String
  id: ID!
  room_set_id: String
}

type HotelRoom {
  """A UUID that uniquely identifies the room"""
  id: ID!
  images: [HotelImage]
  room_description: String
  display_title: String

  """Normalized room category as defined in the enum RoomCategory"""
  room_category: RoomCategory

  """A collection of BedCount nodes"""
  bed_counts: [BedCount]
  media: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  room_type: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  rates(
    """The currency code for returned rates"""
    currency_code: ISOCurrencyCode
  ): [HotelRate]!
}

input HotelRoomInput {
  """Hotel checkin date"""
  start_date: DateTime!

  """Hotel checkout date"""
  end_date: DateTime!

  """Number of guests on staying in room"""
  num_guests: Int!

  """List of children's ages"""
  children_ages: [Int]
}

type HotelStayInfo {
  checkin_date: DateTime
  checkout_date: DateTime
  rooms: [HotelStayRoom]
  num_rooms: Int
  num_guests: Int
  num_children: Int
  children_ages: [Int]
  num_nights: Int
}

type HotelStayRoom {
  num_guests: Int
  children_ages: [Int]
  num_adults: Int
  num_children: Int
}

type HotelTierPolicyDetailsNode {
  tier: Int
  created: DateTime
  id: ID!
  modified: DateTime
}

type HotelTierPolicyNode {
  created: DateTime
  deleted: Boolean
  tags: JSONString
  modified: DateTime
  policy_category: EnumString
  id: ID!
  version: Int
  details: HotelTierPolicyDetailsNode!
  policy_type: EnumString
  group_id: String
  group: GroupNode!
  properties: GenericScalar
}

type Image {
  """Full URL of the image"""
  url: String

  """Height of the image in pixels"""
  height: String

  """Width of the image in pixels"""
  width: String

  """MIME type of the image"""
  mime_type: String
}

type ImportExternalCustomBooking {
  ok: Boolean
  booking: CustomBooking
}

type ImportExternalFlightBooking {
  ok: Boolean
  booking: FlightBooking
}

type ImportExternalHotelBooking {
  ok: Boolean
  booking: HotelBooking
}

"""
Given an existing flight booking made in a GDS, create a corresponding Lola booking.
"""
type ImportFlightBookingFromPNR {
  ok: Boolean
  booking: FlightBooking
}

type InstallationNode {
  user_id: String
  user: UserNode
  name: String
  created: DateTime
  deleted: Boolean
  last_accessed: DateTime
  modified: DateTime
  id: ID!
  version: Int
  primary_shard_id: String
  type: String
  properties: GenericScalar
  device_id: String
}

input InviteEmployee {
  group_id: String
  email: String
}

type InviteToGroup {
  ok: Boolean
  people: [GroupPerson]
}

enum ISOCountryCode {
  """AD"""
  AD

  """AE"""
  AE

  """AF"""
  AF

  """AG"""
  AG

  """AI"""
  AI

  """AL"""
  AL

  """AM"""
  AM

  """AO"""
  AO

  """AQ"""
  AQ

  """AR"""
  AR

  """AS"""
  AS

  """AT"""
  AT

  """AU"""
  AU

  """AW"""
  AW

  """AX"""
  AX

  """AZ"""
  AZ

  """BA"""
  BA

  """BB"""
  BB

  """BD"""
  BD

  """BE"""
  BE

  """BF"""
  BF

  """BG"""
  BG

  """BH"""
  BH

  """BI"""
  BI

  """BJ"""
  BJ

  """BL"""
  BL

  """BM"""
  BM

  """BN"""
  BN

  """BO"""
  BO

  """BQ"""
  BQ

  """BR"""
  BR

  """BS"""
  BS

  """BT"""
  BT

  """BV"""
  BV

  """BW"""
  BW

  """BY"""
  BY

  """BZ"""
  BZ

  """CA"""
  CA

  """CC"""
  CC

  """CD"""
  CD

  """CF"""
  CF

  """CG"""
  CG

  """CH"""
  CH

  """CI"""
  CI

  """CK"""
  CK

  """CL"""
  CL

  """CM"""
  CM

  """CN"""
  CN

  """CO"""
  CO

  """CR"""
  CR

  """CU"""
  CU

  """CV"""
  CV

  """CW"""
  CW

  """CX"""
  CX

  """CY"""
  CY

  """CZ"""
  CZ

  """DE"""
  DE

  """DJ"""
  DJ

  """DK"""
  DK

  """DM"""
  DM

  """DO"""
  DO

  """DZ"""
  DZ

  """EC"""
  EC

  """EE"""
  EE

  """EG"""
  EG

  """EH"""
  EH

  """ER"""
  ER

  """ES"""
  ES

  """ET"""
  ET

  """FI"""
  FI

  """FJ"""
  FJ

  """FK"""
  FK

  """FM"""
  FM

  """FO"""
  FO

  """FR"""
  FR

  """GA"""
  GA

  """GB"""
  GB

  """GD"""
  GD

  """GE"""
  GE

  """GF"""
  GF

  """GG"""
  GG

  """GH"""
  GH

  """GI"""
  GI

  """GL"""
  GL

  """GM"""
  GM

  """GN"""
  GN

  """GP"""
  GP

  """GQ"""
  GQ

  """GR"""
  GR

  """GS"""
  GS

  """GT"""
  GT

  """GU"""
  GU

  """GW"""
  GW

  """GY"""
  GY

  """HK"""
  HK

  """HM"""
  HM

  """HN"""
  HN

  """HR"""
  HR

  """HT"""
  HT

  """HU"""
  HU

  """ID"""
  ID

  """IE"""
  IE

  """IL"""
  IL

  """IM"""
  IM

  """IN"""
  IN

  """IO"""
  IO

  """IQ"""
  IQ

  """IR"""
  IR

  """IS"""
  IS

  """IT"""
  IT

  """JE"""
  JE

  """JM"""
  JM

  """JO"""
  JO

  """JP"""
  JP

  """KE"""
  KE

  """KG"""
  KG

  """KH"""
  KH

  """KI"""
  KI

  """KM"""
  KM

  """KN"""
  KN

  """KP"""
  KP

  """KR"""
  KR

  """KW"""
  KW

  """KY"""
  KY

  """KZ"""
  KZ

  """LA"""
  LA

  """LB"""
  LB

  """LC"""
  LC

  """LI"""
  LI

  """LK"""
  LK

  """LR"""
  LR

  """LS"""
  LS

  """LT"""
  LT

  """LU"""
  LU

  """LV"""
  LV

  """LY"""
  LY

  """MA"""
  MA

  """MC"""
  MC

  """MD"""
  MD

  """ME"""
  ME

  """MF"""
  MF

  """MG"""
  MG

  """MH"""
  MH

  """MK"""
  MK

  """ML"""
  ML

  """MM"""
  MM

  """MN"""
  MN

  """MO"""
  MO

  """MP"""
  MP

  """MQ"""
  MQ

  """MR"""
  MR

  """MS"""
  MS

  """MT"""
  MT

  """MU"""
  MU

  """MV"""
  MV

  """MW"""
  MW

  """MX"""
  MX

  """MY"""
  MY

  """MZ"""
  MZ

  """NA"""
  NA

  """NC"""
  NC

  """NE"""
  NE

  """NF"""
  NF

  """NG"""
  NG

  """NI"""
  NI

  """NL"""
  NL

  """NO"""
  NO

  """NP"""
  NP

  """NR"""
  NR

  """NU"""
  NU

  """NZ"""
  NZ

  """OM"""
  OM

  """PA"""
  PA

  """PE"""
  PE

  """PF"""
  PF

  """PG"""
  PG

  """PH"""
  PH

  """PK"""
  PK

  """PL"""
  PL

  """PM"""
  PM

  """PN"""
  PN

  """PR"""
  PR

  """PS"""
  PS

  """PT"""
  PT

  """PW"""
  PW

  """PY"""
  PY

  """QA"""
  QA

  """RE"""
  RE

  """RO"""
  RO

  """RS"""
  RS

  """RU"""
  RU

  """RW"""
  RW

  """SA"""
  SA

  """SB"""
  SB

  """SC"""
  SC

  """SD"""
  SD

  """SE"""
  SE

  """SG"""
  SG

  """SH"""
  SH

  """SI"""
  SI

  """SJ"""
  SJ

  """SK"""
  SK

  """SL"""
  SL

  """SM"""
  SM

  """SN"""
  SN

  """SO"""
  SO

  """SR"""
  SR

  """SS"""
  SS

  """ST"""
  ST

  """SV"""
  SV

  """SX"""
  SX

  """SY"""
  SY

  """SZ"""
  SZ

  """TC"""
  TC

  """TD"""
  TD

  """TF"""
  TF

  """TG"""
  TG

  """TH"""
  TH

  """TJ"""
  TJ

  """TK"""
  TK

  """TL"""
  TL

  """TM"""
  TM

  """TN"""
  TN

  """TO"""
  TO

  """TR"""
  TR

  """TT"""
  TT

  """TV"""
  TV

  """TW"""
  TW

  """TZ"""
  TZ

  """UA"""
  UA

  """UG"""
  UG

  """UM"""
  UM

  """US"""
  US

  """UY"""
  UY

  """UZ"""
  UZ

  """VA"""
  VA

  """VC"""
  VC

  """VE"""
  VE

  """VG"""
  VG

  """VI"""
  VI

  """VN"""
  VN

  """VU"""
  VU

  """WF"""
  WF

  """WS"""
  WS

  """YE"""
  YE

  """YT"""
  YT

  """ZA"""
  ZA

  """ZM"""
  ZM

  """ZW"""
  ZW
}

enum ISOCurrencyCode {
  """AED"""
  AED

  """AFN"""
  AFN

  """ALL"""
  ALL

  """AMD"""
  AMD

  """ANG"""
  ANG

  """AOA"""
  AOA

  """ARS"""
  ARS

  """AUD"""
  AUD

  """AWG"""
  AWG

  """AZN"""
  AZN

  """BAM"""
  BAM

  """BBD"""
  BBD

  """BDT"""
  BDT

  """BGN"""
  BGN

  """BHD"""
  BHD

  """BIF"""
  BIF

  """BMD"""
  BMD

  """BND"""
  BND

  """BOB"""
  BOB

  """BRL"""
  BRL

  """BSD"""
  BSD

  """BTN"""
  BTN

  """BWP"""
  BWP

  """BYN"""
  BYN

  """BZD"""
  BZD

  """CAD"""
  CAD

  """CDF"""
  CDF

  """CHF"""
  CHF

  """CLP"""
  CLP

  """CNY"""
  CNY

  """COP"""
  COP

  """CRC"""
  CRC

  """CUC"""
  CUC

  """CUP"""
  CUP

  """CVE"""
  CVE

  """CZK"""
  CZK

  """DJF"""
  DJF

  """DKK"""
  DKK

  """DOP"""
  DOP

  """DZD"""
  DZD

  """EGP"""
  EGP

  """ERN"""
  ERN

  """ETB"""
  ETB

  """EUR"""
  EUR

  """FJD"""
  FJD

  """FKP"""
  FKP

  """GBP"""
  GBP

  """GEL"""
  GEL

  """GGP"""
  GGP

  """GHS"""
  GHS

  """GIP"""
  GIP

  """GMD"""
  GMD

  """GNF"""
  GNF

  """GTQ"""
  GTQ

  """GWP"""
  GWP

  """GYD"""
  GYD

  """HKD"""
  HKD

  """HNL"""
  HNL

  """HRK"""
  HRK

  """HTG"""
  HTG

  """HUF"""
  HUF

  """IDR"""
  IDR

  """ILS"""
  ILS

  """IMP"""
  IMP

  """INR"""
  INR

  """IQD"""
  IQD

  """IRR"""
  IRR

  """ISK"""
  ISK

  """JEP"""
  JEP

  """JMD"""
  JMD

  """JOD"""
  JOD

  """JPY"""
  JPY

  """KES"""
  KES

  """KGS"""
  KGS

  """KHR"""
  KHR

  """KMF"""
  KMF

  """KPW"""
  KPW

  """KRW"""
  KRW

  """KWD"""
  KWD

  """KYD"""
  KYD

  """KZT"""
  KZT

  """LAK"""
  LAK

  """LBP"""
  LBP

  """LKR"""
  LKR

  """LRD"""
  LRD

  """LSL"""
  LSL

  """LYD"""
  LYD

  """MAD"""
  MAD

  """MDL"""
  MDL

  """MGA"""
  MGA

  """MKD"""
  MKD

  """MMK"""
  MMK

  """MNT"""
  MNT

  """MOP"""
  MOP

  """MRO"""
  MRO

  """MUR"""
  MUR

  """MVR"""
  MVR

  """MWK"""
  MWK

  """MXN"""
  MXN

  """MYR"""
  MYR

  """MZN"""
  MZN

  """NAD"""
  NAD

  """NGN"""
  NGN

  """NIO"""
  NIO

  """NOK"""
  NOK

  """NPR"""
  NPR

  """NZD"""
  NZD

  """OMR"""
  OMR

  """PAB"""
  PAB

  """PEN"""
  PEN

  """PGK"""
  PGK

  """PHP"""
  PHP

  """PKR"""
  PKR

  """PLN"""
  PLN

  """PYG"""
  PYG

  """QAR"""
  QAR

  """RON"""
  RON

  """RSD"""
  RSD

  """RUB"""
  RUB

  """RWF"""
  RWF

  """SAR"""
  SAR

  """SBD"""
  SBD

  """SCR"""
  SCR

  """SDG"""
  SDG

  """SEK"""
  SEK

  """SGD"""
  SGD

  """SHP"""
  SHP

  """SLL"""
  SLL

  """SOS"""
  SOS

  """SPL"""
  SPL

  """SRD"""
  SRD

  """STD"""
  STD

  """SVC"""
  SVC

  """SYP"""
  SYP

  """SZL"""
  SZL

  """THB"""
  THB

  """TJS"""
  TJS

  """TMT"""
  TMT

  """TND"""
  TND

  """TOP"""
  TOP

  """TRY"""
  TRY

  """TTD"""
  TTD

  """TVD"""
  TVD

  """TWD"""
  TWD

  """TZS"""
  TZS

  """UAH"""
  UAH

  """UGX"""
  UGX

  """USD"""
  USD

  """UYU"""
  UYU

  """UZS"""
  UZS

  """VEF"""
  VEF

  """VND"""
  VND

  """VUV"""
  VUV

  """WST"""
  WST

  """XAF"""
  XAF

  """XCD"""
  XCD

  """XDR"""
  XDR

  """XOF"""
  XOF

  """XPF"""
  XPF

  """YER"""
  YER

  """ZAR"""
  ZAR

  """ZMW"""
  ZMW

  """ZWD"""
  ZWD
}

type ItineraryComponentNode {
  trip_plan_id: String
  trip_plan: TripPlanNode
  user_id: String
  user: UserNode!
  tags: JSONString
  deleted: Boolean
  trip_id: String
  trip: TripNode
  created: DateTime
  modified: DateTime
  id: ID!
  source: EnumString
  version: Int
  result: GenericScalar
  query: UserQueryNode
  query_id: Int
  group_id: String
  group: GroupNode
  type: EnumString
  properties: GenericScalar
}

type JoinGroup {
  ok: Boolean
  group_person: GroupPerson
}

"""JSON String"""
scalar JSONString

type Layover {
  """the layover airport"""
  airport_code: String

  """the number of layover minutes"""
  layover_time: Int
}

"""
Represents a leg of a flight. On a one way flight, you will find one leg (outbound) on the booking.
On a two way flight, you will find two legs on the booking. Etcetera.
"""
type Leg {
  id: ID!

  """The segments on the leg."""
  segments: [Segment]
  derived_identifier: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  modified: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

input LegacyRemoveGroupRecommendationInput {
  id: String
  group_id: String
  user_id: String
  group_destination_id: String
  recommendation_type: String
  recommended_obj_id: String
  preferred: Boolean
  tip: String
}

type LegNode {
  """
  Storing the hash derived from a subset of fields that can be used to determine a unique flight
  """
  derived_identifier: String
  segments: [SegmentNode]
  created: DateTime
  id: ID!
  modified: DateTime
}

type LegOption {
  """the unique identifier for this LegOption"""
  id: ID!

  """
  the position of this flight leg option within other leg options as an index
  """
  leg_index: Int!

  """the list of associated flight segments"""
  segment_options: [SegmentOption]

  """a list of all airlines associated with this Leg"""
  marketing_airlines: [Airline]

  """a list of layovers within this flight leg option"""
  layovers: [Layover]

  """boolean flag that represents red-eye status"""
  is_redeye: Boolean

  """the duration of the flight leg in minutes"""
  duration: Int

  """the time when the flight leg begins"""
  start_time: DateTime

  """the time when the flight leg ends"""
  end_time: DateTime

  """the total layover time in minutes"""
  layover_time: Int

  """the minimum cabin type for all flights"""
  min_cabin_type: CabinType

  """the maximum cabin type for all flights"""
  max_cabin_type: CabinType

  """the current cheapest fare for the leg options that have been selected"""
  pricing: FareOption
}

"""
LegOptionInput represents the parameters that can be specified for a Flight Leg search
"""
input LegOptionInput {
  """the position of this leg option within other leg options"""
  index: Int!

  """the 3-character departure airport code"""
  departure_airport: String!

  """the 3-character arrival airport code"""
  arrival_airport: String!

  """the local date and time at which the flight leg with depart"""
  departure_date: Date!

  """A user specified departure time or window"""
  departure_window: TimeWindow
}

"""
LegOptionQuery represents a query initiated by a client for matching Flight Legs
"""
input LegOptionQuery {
  """a list of LegOptionInput objects specific to the query"""
  leg_option_inputs: [LegOptionInput]!

  """a list of already selected flight leg options (ids)"""
  selected_leg_options: [SelectedLegOption]!

  """the index of the requested flight leg within the flight fare"""
  requested_leg_index: Int!

  """
  the cabin types requested for this flight leg, only the first cabin type is used in the actual request
  """
  cabin_types: [CabinType]!

  """the number of adults (>=12, <65) traveling"""
  num_adults: Int!

  """the filters attached to this query"""
  flight_filter_options: FlightFilterOptions

  """whether to include class pricing options"""
  include_branded_pricing: Boolean

  """refreshes search results"""
  refresh: Boolean

  """whether to only show refundable fares"""
  only_refundable: Boolean
}

"""
Input parameters that capture location based query constraints like
latitude and longitude
"""
input LocationInput {
  """
  id of a known location; most probably used in conjunction with a HOTEL type
  """
  id: ID

  """Type of Location Query e.g city"""
  type: LocationType

  """Name of Location"""
  name: String

  """Longer, more descriptive name of the location"""
  long_name: String

  """Latitude of search location"""
  latitude: String!

  """Longitude of search location"""
  longitude: String!
}

type LocationNode {
  properties: GenericScalar
  parent_location: LocationNode
  parent_location_id: Int
  name: String
  created: DateTime
  modified: DateTime
  rank: Int
  provider_location_id: String
  long_name: String
  longitude: Float
  provider: LocationProviderNode!
  provider_id: Int
  id: ID!
  latitude: Float
  population: Int
  location_type: EnumString
  polygon: String
}

type LocationPriceTier {
  name: String
  media_uri: String
  tier: Int
  min_price: Int
  max_price: Int
}

type LocationProviderNode {
  name: String
  id: ID!
  modified: DateTime
  created: DateTime
}

enum LocationType {
  ADDRESS
  AIRPORT
  BUSINESS
  CITY
  CONTINENT
  COUNTRY
  HOTEL
  LANDMARK
  NEIGHBORHOOD
  OTHER
  REGION
  SAVED_ADDRESS
  WORLD
}

"""Logs the current user out, clears the login cookies. """
type Logout {
  ok: Boolean
}

type LoyaltyProgram {
  id: ID!
  program_type: String
  brand_name: String
  airline: Airline
  name: String
  url: String
  long_name: String
  hotel_brand: HotelChainNode @deprecated(reason: "This isn't actually used by any client right now. We don't return HotelChains elsewhere, returning the string names instead.")
  airline_id: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  deleted: Boolean @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  hotel_brand_id: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  modified: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  properties: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  rank: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  status: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  tags: JSONString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  type: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  version: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

input LoyaltyProgramFilter {
  """ID of the object to use for filter user loyalty programs"""
  id: ID!

  """The type of object being used for filtering"""
  type: LoyaltyProgramFilterType!
}

enum LoyaltyProgramFilterType {
  FARE
  HOTEL
}

enum LoyaltyProgramType {
  """airline"""
  airline

  """car"""
  car

  """hotel"""
  hotel
}

type ManualCancelBooking {
  user_id: String
  booking_id: String
}

input ManualCancelBookingInput {
  user_id: String!
  booking_id: String!
  reported_cancellation_timestamp: DateTime!
  cancellation_codes: JSONString
  customer_confirmation_code: String
  customer_message: String
  server_message: String

  """Whether or not this cancellation should trigger an email"""
  send_email: Boolean = true
}

type ManualCancelCarBooking {
  user_id: String
  booking_id: String
}

type ManualCancelCustomBooking {
  ok: Boolean
  booking: CustomBooking
}

type ManualCancelPNRBooking {
  user_id: String
  booking_id: String
}

type ManualCancelTicketBooking {
  user_id: String
  booking_id: String
}

input ManualCancelTicketBookingInput {
  user_id: String!
  booking_id: String!
  ticket_id: String!
  reported_cancellation_timestamp: DateTime!
  customer_message: String
  server_message: String
}

type ManualHideSegment {
  ok: Boolean
  segment: Segment
}

type Media {
  """The associated images"""
  images: [Image]

  """short text summarizing the associated hotel media"""
  caption: String

  """flag to indicate if there is default media for the hotel"""
  default_image: Boolean
}

"""
Merges one trip into another. Allows user to specify optional data to update on destination trip.
"""
type MergeTrips {
  """DEPRECATED: Please request trip.id"""
  trip_id: String @deprecated(reason: "Please request the id on trip instead.")
  trip: Trip
}

enum MileageRuleType {
  """LIMITED_MILES"""
  LIMITED_MILES

  """UNLIMITED_MILES"""
  UNLIMITED_MILES
}

input ModifyBookingInput {
  user_id: String!
  booking_id: String!
  reported_timestamp: DateTime!
  additional_details: JSONString
  source: String
  message: String
}

type ModifyFlightBooking {
  user_id: String
  booking_id: String
}

type ModifyHotelBooking {
  user_id: String
  booking_id: String
}

type MonthSavingsSummary {
  policy_savings: Int
  alt_price_savings: Int
  total_savings: Int
  spend: Int
  num_bookings: Int
  num_travelers: Int
  num_bookings_assoc_with_dep: Int
  month: String
  start_date: String
  end_date: String
  dates: [DaySavingsSummary]
}

type MonthTripCounts {
  booked_count: Int
  upcoming: Int
  active: Int
  past: Int
  top_destinations: [TopDestination]
  hours_traveled: Int
  days_traveled: Int
  miles_traveled: Int
  month: String
  start_date: String
  end_date: String
  dates: [DayTripCounts]
}

"""Moves an item from one existing trip to a new trip. """
type MoveItemToNewTrip {
  """DEPRECATED: Please request trip.id"""
  trip_id: String @deprecated(reason: "Please request id on trip instead.")
  trip: Trip
}

"""Moves an item from one existing trip to another. """
type MoveItemToTrip {
  """DEPRECATED: Please request trip.id"""
  trip_id: String @deprecated(reason: "Please request the id on trip instead.")
  trip: Trip
}

type Mutations {
  deactivate_expense_partner(
    """The expense partner to create a config for."""
    partner: ExpensePartnerName

    """
    The ID of the Group to add the ExpensePartnerConfig to. Implicitly derived from the authenticated user if unspecified.
    """
    group_id: ID
  ): DeactivateExpensePartner
  activate_expense_partner(
    """The expense partner to create a config for."""
    partner: ExpensePartnerName

    """
    The ID of the Group to add the ExpensePartnerConfig to. Implicitly derived from the authenticated user if unspecified.
    """
    group_id: ID
  ): ActivateExpensePartner
  add_expense_method(
    """The ID of the Payment account"""
    payment_account_id: ID!

    """The ID of the expense partner config to add an association."""
    expense_config_id: ID!

    """The email connected to the companys corporate expense account."""
    corporate_account_email: String!
  ): CreateExpensePartnerPaymentAssociation
  delete_expense_method(
    """
    The ID of the payment account currently associated with the expense partner config with the corporate email.
    """
    payment_account_id: ID!

    """The ID of the ExpensePartnerConfig to disable"""
    expense_partner_config_id: ID!
  ): DeleteExpensePartnerPaymentAssociation
  update_expense_method(
    """The ID of the payment account that is being associated with an email"""
    payment_account_id: ID!

    """The ID of the expense partner config that has the email to be changed"""
    expense_partner_config_id: ID!

    """
    The new email address to create with the new expense partner config entry
    """
    new_corporate_account_email: String!
  ): UpdateExpensePartnerPaymentAssociation
  send_intercom_message(
    """The Message to send to intercom"""
    message_body: String!
  ): SendIntercomMessage
  create_note(
    """Text of the note"""
    text: String!

    """What type is object_id associated with"""
    object_type: NoteObjectType!

    """The id of the entity this note is talking about"""
    object_id: ID!
  ): CreateNote
  delete_note(
    """The ID of the note to delete"""
    note_id: ID!
  ): DeleteNote
  update_note_text(
    """The new text of the note"""
    text: String!

    """The ID of the note to update"""
    note_id: ID!
  ): UpdateNoteText
  update_calendar_feed(
    """The id of the calendar feed"""
    entity_id: ID!

    """The type of the entity you want the entity_id to point to"""
    entity_type: String!
  ): UpdateCalendarFeed
  get_or_create_calendar_feed(
    """The id of the calendar feed"""
    entity_id: ID!

    """The type of the entity you want the entity_id to point to"""
    entity_type: String!
  ): GetOrCreateCalendarFeed
  fare_stream_cancel(stream_id: ID): FareStreamCancel
  configure_expense_partner(
    """The expense partner to create a config for."""
    partner: ExpensePartnerName

    """
    The ID of the Group to add the ExpensePartnerConfig to. Implicitly derived from the authenticated user if unspecified.
    """
    group_id: ID

    """The email connected to the companys corporate expense account."""
    corporate_account_email: String
  ): ConfigureExpensePartner
  disable_expense_partner(
    """The ID of the ExpensePartnerConfig to disable"""
    expense_partner_config_id: ID!
  ): DisableExpensePartner
  create_expense_tag(
    """
    The ID of the Group to add the ExpenseTag to. Implicitly derived from the authenticated user if unspecified.
    """
    group_id: ID

    """The ExpenseTag to create."""
    expense_tag: ExpenseTagInput
  ): CreateExpenseTag
  edit_expense_tag(
    """The ID of the ExpenseTag to edit"""
    expense_tag_id: ID!

    """The updates to make to the ExpenseTag."""
    updates: ExpenseTagInput!
  ): EditExpenseTag
  request_booking_receipt_copy(
    """The id of the hotel booking whose receipt should be (re)sent."""
    booking_id: ID!
  ): RequestBookingReceiptCopy
  import_flight_booking_from_pnr(
    """The ID of the payment account used for this external booking."""
    payment_account_id: ID!

    """The 6-character alphanumeric PNR locator"""
    pnr_ref: ID!

    """The ID of the group this booking should be"""
    group_id: ID

    """The ID of the user to import the booking for."""
    user_id: ID!
  ): ImportFlightBookingFromPNR
  refresh_flight_booking(
    """The ID of the flight booking to refresh"""
    id: ID!
  ): RefreshBookingPNR
  manual_hide_segment(
    """The ID of the segment to hide"""
    segment_id: ID!
  ): ManualHideSegment
  manual_cancel_custom_booking(
    """The ID of the custom booking to mark as cancelled"""
    booking_id: ID!

    """Whether or not this cancellation should trigger an email"""
    send_email: Boolean = true
  ): ManualCancelCustomBooking
  import_external_hotel_booking(
    """The ID of the PaymentAccount used to make the booking."""
    payment_account_id: ID!

    """The ID of the user to import the booking for"""
    user_id: ID!

    """A collection of traveler profile IDs with related metadata."""
    travelers: [TravelerInput]!

    """Agent-supplied details about this external booking"""
    external_booking_info: AgentExternalBookingInfo!

    """Whether or not this import should trigger an email to the user"""
    send_email: Boolean = true

    """Information about reporting this expense, including group"""
    reporting_info: BookingReportingInfo

    """Details about the hotel rate itself (hotel, room, beds, cost, etc."""
    hotel_rate: ExternalHotelRate!
  ): ImportExternalHotelBooking
  import_external_flight_booking(
    """The ID of the PaymentAccount used to make the booking."""
    payment_account_id: ID!

    """List of details about the flights that constitute a trip"""
    external_flight_booking: ExternalFlightBookingInput!

    """The ID of the user to import the booking for"""
    user_id: ID!

    """Base cost, fees, and taxes for this fare"""
    fare_pricing: FarePricingInfo!

    """Whether or not this import should trigger an email to the user"""
    send_email: Boolean = true

    """Information about reporting this expense, including group"""
    reporting_info: BookingReportingInfo

    """Agent-supplied details about this external booking"""
    external_booking_info: AgentExternalBookingInfo!
  ): ImportExternalFlightBooking
  import_external_custom_booking(
    """The ID of the PaymentAccount used to make the booking."""
    payment_account_id: ID!

    """The ID of the user to import the booking for"""
    user_id: ID!

    """The necessary information about this custom booking"""
    custom_booking_info: CustomBookingInfoInput!

    """A collection of traveler profile IDs with related metadata."""
    travelers: [TravelerInput]!

    """Whether or not this import should trigger an email to the user"""
    send_email: Boolean = true

    """Information about reporting this expense, including group"""
    reporting_info: BookingReportingInfo

    """Agent-supplied details about this external booking"""
    external_booking_info: AgentExternalBookingInfo!
  ): ImportExternalCustomBooking
  manual_cancel_booking(cancellation_data: ManualCancelBookingInput): ManualCancelBooking
  manual_cancel_car_booking(cancellation_data: ManualCancelBookingInput): ManualCancelCarBooking
  manual_cancel_pnr_booking(cancellation_data: ManualCancelBookingInput): ManualCancelPNRBooking
  manual_cancel_ticket_booking(cancellation_data: ManualCancelTicketBookingInput): ManualCancelTicketBooking
  modify_hotel_booking(modify_hotel_data: ModifyBookingInput): ModifyHotelBooking
  modify_flight_booking(modify_flight_data: ModifyBookingInput): ModifyFlightBooking
  flag_fraudulent_booking(booking_id: String, additional_tag: String): FlagFraudulentBooking
  create_flight_cost_event(
    """
    A note for customers in the receipts. e.g., which segemnt or leg is affected
    """
    customer_note: String
    cost_items: [FlightCostItemInput]!

    """
    A value of FlightModificationSource enum keys. "agent" if it is a wombat
    """
    modification_source: String!
    booking_id: ID!

    """user_id of the customer who requested the change"""
    requesting_customer_id: ID!

    """
    user_id of the wombat who executed this. If this function becomes DIY then
    this will be the same as requesting_customer_id
    """
    user_id: ID!

    """PaymentAccount id"""
    payment_method_id: ID!
  ): CreateFlightCostEvent
  send_invitation_email(
    """The email to invite to Lola"""
    email: String!
  ): SendInvitationEmail
  grant_access_to_traveler_profile(
    """A specific user to share with"""
    user_id: ID

    """Read access"""
    read: Boolean

    """Share access"""
    share: Boolean

    """The id of the profile to grant access to."""
    traveler_profile_id: ID!

    """Write access"""
    write: Boolean

    """The email to share with"""
    email: String
  ): GrantAccessToTravelerProfile
  revoke_access_to_traveler_profile(
    """The user to revoke access from."""
    user_id: ID!

    """The id of the profile to grant access to."""
    traveler_profile_id: ID!
  ): RevokeAccessToTravelerProfile
  create_traveler_profile(
    """The traveler profile to create."""
    traveler_profile: TravelerProfileInput!

    """The id of the user who should own the profile."""
    user_id: ID!
  ): CreateTravelerProfile
  update_traveler_profile(
    """
    The fields to clear (set to null). This should be used if you want to change
    the value of a field to null since GraphQL doesn't currently support
    that.NOTE: Required fields are not nullable.
    """
    fields_to_clear: [ClearableTravelerProfileField]

    """The id of the user if different than the authenticated user"""
    user_id: ID

    """The updates to make to the profile."""
    updates: TravelerProfileInput!

    """The id of the profile to update."""
    traveler_profile_id: ID!
  ): UpdateTravelerProfile
  delete_traveler_profile(
    """The id of the profile to delete."""
    traveler_profile_id: ID!
  ): DeleteTravelerProfile
  change_ownership_of_traveler_profile(
    """The group this traveler profile should belong to."""
    group_id: ID!

    """The traveler profile to change over."""
    traveler_profile_id: ID!
  ): ChangeOwnershipOfProfile
  edit_traveler_loyalty(loyalty_data: EditTravelerLoyaltyInput): EditTravelerLoyalty
  add_traveler_loyalty(loyalty_data: AddTravelerLoyaltyInput!): AddTravelerLoyalty
  delete_traveler_loyalty(loyalty_id: String): DeleteTravelerLoyalty
  create_payment_method(payment_method: PaymentMethodInput!): CreatePaymentMethod
  update_payment_method(payment_method: PaymentMethodInput!, id: String!): UpdatePaymentMethod
  delete_payment_method(id: String!): DeletePaymentMethod
  change_payment_method_access(
    """The account to grant/revoke access to"""
    payment_method_id: String!

    """The user being granted/revoked access"""
    user_id: String!

    """True if grant, false if revoke"""
    grant: Boolean!
  ): ChangePaymentMethodAccess
  update_trip_email_details(input: TripEmailDetailsInput, id: String): UpdateTripEmailDetails
  create_booking(input: BookingInput, id: String): CreateBooking
  update_hotel(diff: String, hotel_id: String): UpdateHotel
  edit_trip(trip_id: String, trip_data: TripData): EditTrip
  merge_trips(source_trip_id: String, destination_trip_id: String, trip_data: TripData): MergeTrips
  move_item_to_trip(item_id: String, trip_id: String): MoveItemToTrip
  move_item_to_new_trip(item_id: String, trip_data: TripData): MoveItemToNewTrip
  create_code(trip_id: String): CreateCode
  update_agent_note(
    """The new text of the note"""
    text: String!

    """The ID of the user whose notes to update"""
    user_id: ID!
  ): UpdateAgentNote
  clear_enqueued_booking(
    """Which queue to remove the booking from"""
    priority: String!

    """The ID of the booking to remove from the queue"""
    booking_id: ID!

    """Freeform message from the wombat"""
    message: String
  ): ClearEnqueuedBooking
  book_hotel_rate(
    """The ID of the PaymentAccount that wil to make the booking."""
    payment_account_id: ID!

    """
    Deprecated: Please use reporting_info.group_id instead. The group this booking is being made on behalf of.
    """
    group_id: ID

    """
    The user this booking is being made on behalf of, if not the contextual authenticated user
    """
    user_id: ID

    """A collection of traveler profile IDs with related metadata."""
    travelers: [TravelerInput]!

    """Reason for booking out of guidelines"""
    reason_for_booking_out_of_guidelines: String

    """The ID of the hotel to book"""
    hotel_id: ID

    """Reason code for booking out of guidelines"""
    reason_for_booking_out_of_guidelines_code: OutOfGuidelinesReasonCode

    """The previously-returned rate UUID to book"""
    rate_id: ID!

    """Search params and filters"""
    search_input: HotelBookingSearchInput

    """Information about reporting this expense."""
    reporting_info: BookingReportingInfo
  ): BookHotelRate
  cancel_hotel_booking(
    """The ID of the hotel booking to cancel"""
    booking_id: ID!
  ): CancelHotelBooking
  book_flight_fare(
    """The ID of the PaymentAccount that wil to make the booking."""
    payment_account_id: ID!

    """
    Deprecated: Please use reporting_info.group_id instead. The group this booking is being made on behalf of.
    """
    group_id: ID

    """
    The user this booking is being made on behalf of, if not the contextual authenticated user
    """
    user_id: ID

    """A collection of traveler profile IDs with related metadata."""
    travelers: [TravelerInput]!

    """Reason for booking out of guidelines"""
    reason_for_booking_out_of_guidelines: String

    """Reason code for booking out of guidelines"""
    reason_for_booking_out_of_guidelines_code: OutOfGuidelinesReasonCode

    """The ID of the stream that this fare came from"""
    stream_id: ID

    """The previously-returned fare ID to book"""
    fare_id: ID!

    """Information about reporting this expense."""
    reporting_info: BookingReportingInfo
  ): BookFlightFare
  cancel_flight_booking(
    """The ID of the flight booking to cancel"""
    booking_id: ID!
  ): CancelFlightBooking
  book_car_rate(
    """
    The ID of the PaymentAccount that wil to make the booking. Only required for rates where requires_credit_card=True
    """
    payment_account_id: ID

    """
    Deprecated: Please use reporting_info.group_id instead. The group this booking is being made on behalf of.
    """
    group_id: ID

    """
    The user this booking is being made on behalf of, if not the contextual authenticated user
    """
    user_id: ID

    """The previously-returned contract ID to book"""
    contract_id: ID!

    """A collection of traveler profile IDs with related metadata."""
    travelers: [TravelerInput]!

    """Reason for booking out of guidelines"""
    reason_for_booking_out_of_guidelines: String

    """Reason code for booking out of guidelines"""
    reason_for_booking_out_of_guidelines_code: OutOfGuidelinesReasonCode

    """The ID of the stream that this rate came from"""
    stream_id: ID

    """Information about reporting this expense."""
    reporting_info: BookingReportingInfo
  ): BookCarRate
  cancel_car_booking(
    """The ID of the car booking to cancel"""
    booking_id: ID!
  ): CancelCarBooking
  set_booking_expense(
    """The ID of the Booking to expense"""
    booking_id: ID!

    """Information about reporting this expense."""
    reporting_info: BookingReportingInfo
  ): SetBookingExpense
  delete_booking_expense(
    """The ID of the Booking to expense"""
    booking_id: ID!
  ): DeleteBookingExpense
  send_booking_expense(
    """The ID of the Booking to expense"""
    booking_id: ID!
  ): SendBookingExpense
  share_booking(
    """The ID of the booking to share"""
    booking_id: ID!

    """The user to share this booking with"""
    user_id: ID!
  ): ShareBooking
  set_booking_department(
    """The ID of the Booking to set to a department"""
    booking_id: ID!

    """The department associated with this booking"""
    department_id: ID
  ): SetBookingDepartment
  follow_trip(
    """The name of the user traveling on this booking."""
    traveling_user_first_name: String!

    """The id of the trip that the email wants to follow."""
    trip_id: String!

    """The email of the person following the trip."""
    follower_email: String!
  ): FollowTrip
  unfollow_trip(
    """The id of the trip that the email wants to follow."""
    trip_id: String!

    """The email of the person unfollowing the trip."""
    follower_email: String!
  ): UnfollowTrip
  verify_trip_follower_email(code: String!): VerifyTripFollowerEmail
  register_new_sales_customer(customer_registration_input: CustomerRegistrationInput!): RegisterNewSalesCustomer
  grant_gbt_content_to_group(
    """ID of the group to grant content to"""
    group_id: ID!

    """Salesforce ID"""
    salesforce_key: String!
  ): GrantGBTContentToGroup
  update_group(data: GroupInput, id: String): UpdateGroup
  whitelist_domain(
    """The email domain to whitelist for a particular group (e.g. lola.com)"""
    domain: String

    """The group ID to associate the email domain with"""
    group_id: ID

    """The ID of the domain to whitelist."""
    group_domain_id: ID
  ): WhitelistDomain
  unwhitelist_domain(
    """The group ID that the domain belongs to."""
    group_id: ID

    """The group domain ID to un-whitelist."""
    group_domain_id: ID
  ): UnWhitelistDomain
  join_group(group_id: ID, user_id: ID): JoinGroup
  invite_to_group(
    """The ID of the group to invite emails to"""
    group_id: ID!

    """A list of people to invite"""
    invitees: [GroupInvitationInput]
  ): InviteToGroup
  update_group_invitation(membership_data: GroupMembershipInput!, group_id: ID!, email_address: String!): UpdateGroupInvitation
  update_group_membership(membership_data: GroupMembershipInput!, group_id: ID!, user_id: ID!): UpdateGroupMembership
  revoke_group_invitation(group_id: ID!, email_address: String!): RevokeGroupInvitation
  remove_from_group(group_id: ID!, user_id: ID!): RemoveFromGroup
  create_group_department(
    """
    IDs of GroupPersons without current departments to add to the new
    department. Note that behind the scenes, these will be either GroupInvite or
    GroupAssociation ids.
    """
    person_ids: [ID]

    """The ID of the group under which to create the new department"""
    group_id: ID!

    """The display name of the new department."""
    name: String!
  ): CreateGroupDepartment
  update_group_department(
    """The ID of the department to update"""
    group_department_id: ID!

    """The new name for the department"""
    name: String!
  ): UpdateGroupDepartment
  archive_group_department(
    """Whether to remove all employees before archiving"""
    empty_before_archive: Boolean

    """The ID of the department to archive."""
    group_department_id: ID!
  ): ArchiveGroupDepartment
  create_destination(data: DestinationInput): CreateDestination
  change_group_destination_name(
    """The ID of the destination to edit"""
    group_destination_id: ID!

    """The new name for the destination"""
    name: String!
  ): ChangeGroupDestinationName
  update_group_destination(
    """The ID of the destination to edit"""
    group_destination_id: ID!
    data: DestinationInput
  ): UpdateGroupDestination
  remove_destination(
    """The ID of the destination to delete"""
    group_destination_id: ID!
  ): RemoveDestination
  create_group_recommendation(data: GroupRecommendationInput): CreateGroupRecommendation
  remove_group_recommendation(
    """The ID of the recommendation to delete"""
    group_recommendation_id: ID
    data: LegacyRemoveGroupRecommendationInput
  ): RemoveGroupRecommendation
  set_hotel_guideline_primary_city(data: GroupHotelGuidelinePrimaryCityInput): SetHotelGuidelinePrimaryCity
  save_hotel_tier_policy(tier: Int, group_id: String, primary_city_target_spend: Int, id: String): SaveHotelTierPolicy
  set_group_flight_wiggle_policy(
    """
    The amount (in cents) above the cheapest fare that a fare can be while remaining within guidelines.
    """
    amount: Int!

    """The ID of the group the policy belongs to"""
    group_id: ID!
  ): SetGroupFlightWigglePolicy
  set_group_flight_direct_policy(
    """
    The amount (in cents) above the cheapest non-direct fare that a direct fare can be while remaining within guidelines.
    """
    amount: Int!

    """The ID of the group the policy belongs to"""
    group_id: ID!
  ): SetGroupFlightDirectPolicy
  set_group_flight_cabin_class_policies(
    """The per-class policies"""
    class_policies: [GroupFlightCabinClassPolicyInput]!

    """The ID of the group the policy belongs to"""
    group_id: ID!
  ): SetGroupFlightCabinClassPolicies
  set_group_hotel_guidelines(
    """
    The id of the group policy assignment category applied to the guideline
    """
    group_policy_assignment_id: ID

    """Target price set for a selected city"""
    target_price: Int!

    """Group ID that guidelines will be set for"""
    group_id: ID!

    """Target price level (hotel tier level)"""
    target_price_level: Int

    """The currency type/unit used within hotel guideline setting"""
    currency_code: ISOCurrencyCode

    """Target location id to set for guidelines"""
    target_location_id: String!
  ): SetGroupHotelGuidelines
  unset_group_hotel_guidelines(
    """Group ID that guidelines will be unset"""
    group_id: ID!

    """
    The id of the group policy assignment category applied to the guideline
    """
    group_policy_assignment_id: ID
  ): UnsetGroupHotelGuidelines
  set_group_flight_guidelines(
    """Flight wiggle room amount in cents for non-stop fares"""
    non_stop_wiggle_room: Int
    cabin_policies: [GroupFlightGuidelinesCabinPolicyInput]

    """The ID of the group policy to assign users and guidelines"""
    group_policy_assignment_id: ID

    """Group ID that guidelines will be set for"""
    group_id: ID!

    """Flight wiggle room amount in cents"""
    wiggle_room: Int

    """The currency type/unit used within car guideline setting"""
    currency_code: ISOCurrencyCode
  ): SetGroupFlightGuidelines
  unset_group_flight_guidelines(
    """Group ID that guidelines will be unset"""
    group_id: ID!

    """The ID of the group policy to assign users and guidelines"""
    group_policy_assignment_id: ID
  ): UnsetGroupFlightGuidelines
  set_group_car_guidelines(
    """Group ID that car guidelines will be set for"""
    group_id: ID!

    """
    The id of the group policy assignment category applied to the guideline
    """
    group_policy_assignment_id: ID

    """The car guideline spending capacity for a given group"""
    spending_cap: Int

    """The currency type/unit used within car guideline setting"""
    currency_code: ISOCurrencyCode
  ): SetGroupCarGuidelines
  unset_group_car_guidelines(
    """Group ID that car guidelines will be set for"""
    group_id: ID!

    """
    The id of the group policy assignment category applied to the guideline
    """
    group_policy_assignment_id: ID
  ): UnsetGroupCarGuidelines
  update_group_preferences(
    """The new value for the expense_tags_required preference"""
    expense_tags_required: Boolean

    """The ID of the group preferences to update"""
    group_preferences_id: ID!

    """The new value for the members_can_create_expense_tags preference"""
    members_can_create_expense_tags: Boolean
  ): UpdateGroupPreferences
  create_group_loyalty_program(
    """The ID of the loyalty program"""
    loyalty_program_id: ID!

    """The alpha-numeric program number"""
    loyalty_program_number: String!
  ): CreateGroupLoyaltyProgramAssociation
  update_group_loyalty_program(
    """The ID of the loyalty program"""
    loyalty_program_id: ID!

    """The alpha-numeric program number"""
    loyalty_program_number: String!
  ): UpdateGroupLoyaltyProgramAssociation
  delete_group_loyalty_program(
    """The loyalty program ID of the record to be deleted"""
    loyalty_program_id: ID
  ): DeleteGroupLoyaltyProgramAssociation
  update_group_association_has_logged_in(group_id: String!, user_id: String!): UpdateGroupAssociationHasLoggedIn
  upload_group_departments(
    group_departments: [GroupDepartmentInput]

    """The ID of the group under which to create the new department"""
    group_id: ID!
  ): UploadGroupDepartments
  create_employees_rn(invites: [InviteEmployee]): CreateEmployeesRN
  create_group_policy_assignment(
    """The ID of the policy guidelines that you want to copy"""
    copy_group_policy_id: ID
    group_policy_assignment_category: String
    group_id: ID
  ): CreateGroupPolicyAssignment
  delete_group_policy_assignment(group_id: ID!, group_policy_assignment_id: ID!): DeleteGroupPolicyAssignment
  assign_users_group_policy(user_ids: [ID]!, group_id: ID!, group_policy_assignment_id: ID!): AssignUsersGroupPolicy
  edit_user(user_data: EditUserInput): EditUser
  edit_loyalty(loyalty_data: EditLoyaltyInput): EditUserLoyalty
  add_loyalty(loyalty_data: AddLoyaltyInput!): AddUserLoyalty
  delete_loyalty(loyalty_id: String): DeleteUserLoyalty
  edit_address(address_data: EditAddressInput): EditAddress
  add_address(address_data: EditAddressInput): AddAddress
  delete_address(address_id: String): DeleteAddress
  edit_passport(passport_data: PassportInput): EditPassport
  delete_passport(user_id: String): DeletePassport
  ban_user(user_id: ID): BanUser
  unban_user(user_id: ID): UnbanUser
  edit_user_role(user_id: String, role: String): EditUserRole
  add_favorite_hotel(hotel_data: FavoriteHotelInput): AddFavoriteHotel
  delete_favorite_hotel(hotel_data: FavoriteHotelInput): DeleteFavoriteHotel
  add_favorite_airline(airline_id: ID!, user_id: ID!): AddFavoriteAirline
  delete_favorite_airline(airline_id: ID!, user_id: ID!): DeleteFavoriteAirline
  add_home_airport(airport_code: String!, user_id: ID!): AddHomeAirport
  delete_home_airport(airport_code: String!, user_id: ID!): DeleteHomeAirport
  edit_flight_preferences(user_id: ID!, flight_preferences: FlightPreferencesInput): EditFlightPreferences
  set_email_preferences(
    """
    the group id of all users that the admin wants to receive booking confirmation emails for
    """
    group_id: ID!

    """Frequency that Admin receives company bookingalerts"""
    group_booking_receipt_frequency: EmailPreferenceType

    """
    whether or not the admin wants to receive emails about new members joining this group
    """
    receive_new_member_emails: Boolean

    """
    whether or not the admin wants toreceive confirmation emails upon members making a booking receieve emails
    """
    receive_group_booking_receipts: Boolean

    """
    whether or not the admin wants to receive emails about traveling members
    """
    receive_on_the_road_email_frequency: DailyWeeklyPreferenceType

    """The email the admin wants the confirmations sent to"""
    email: String
  ): SetEmailPreferences
  set_default_traveler_profile_id(
    """the id of the traveler profile that will be set as the default"""
    traveler_profile_id: ID!
  ): SetDefaultTravelerProfile
  set_default_payment_method_id(
    """the id of the payment method that will be set as the default"""
    payment_method_id: ID!
  ): SetDefaultPaymentMethod
  delete_default_payment_method_id: DeleteDefaultPaymentMethod
  request_magic_link(
    """Email address to register"""
    email: String!
  ): RequestMagicLink
  handle_password_login(
    """Password to set on the new account"""
    password: String

    """Email address to register"""
    email: String!
  ): HandlePasswordLogin
  handle_magic_link_login(
    """Code present in the email."""
    code: String!
  ): HandleMagicLinkLogin
  update_new_user_and_verify_email(user_data: UpdateNewUserAndVerifyEmailInput): UpdateNewUserAndVerifyEmail
  register_anon_user(
    """Timezone of the user"""
    tz: String
  ): RegisterAnonUser
  forgot_password(
    """Passthrough parameter"""
    next_uri: String

    """Email address to send magic link to"""
    email: String!
  ): ForgotPassword
  set_password(
    """The new password"""
    password: String!
  ): SetPassword
  update_password(
    """The current password"""
    current_password: String!

    """The new password"""
    password: String!

    """The user email"""
    email: String!
  ): UpdatePassword
  logout: Logout
}

enum NoteObjectType {
  Group
  Payment
  User
}

type NotificationHistory {
  id: String
  created: String
  modified: String
  method: String
  recipient: String
  content_uri: String
  status: String
  title: String

  """The user who made/requested this booking."""
  recipient_user: User
  body: String
}

enum OutOfGuidelinesReasonCode {
  """LAST_MINUTE"""
  LAST_MINUTE

  """LOYALTY"""
  LOYALTY

  """NO_OPTIONS"""
  NO_OPTIONS

  """OTHER"""
  OTHER
}

enum PartialPaymentType {
  """FIXED"""
  FIXED

  """NIGHT"""
  NIGHT

  """PERCENT"""
  PERCENT
}

type Passenger {
  id: ID!
  chaperone_first_name: String
  chaperone_last_name: String
  email: String
  first_name: String
  frequent_flyer_numbers: GenericScalar
  gender: EnumString
  birthdate: DateTime
  known_traveler_number: String
  last_name: String
  middle_name: String
  passenger_type: EnumString
  passport_country: EnumString
  passport_expiration: String
  passport_expiration_date: DateTime
  passport_number: String
  phone: String
  redress_number: String
  booking_traveler_profile_id: String
  created: DateTime
  itinerary_id: String
  modified: DateTime
  traveler_profile_id: String
  user: User
  user_id: Int
}

type PassengerFareNode {
  """Total tax in cents. Deprecated in favor of total_tax_mills"""
  total_tax: Int
  passenger_type: EnumString
  last_ticket_date: DateTime
  id: ID!

  """Total tax in mills. Nullable for backwards compatibility"""
  total_tax_mills: Int

  """Total price in mills. Nullable for backwards compatibility"""
  total_price_mills: Int

  """Total price in cents. Deprecated in favor of total_price_mills"""
  total_price: Int
  num_passengers: Int
  created: DateTime
  modified: DateTime

  """
  The date the amounts are quoted for. this is only nullable for backwards compatibility
  """
  transaction_date: DateTime
  fee_details: [FeeDetailsNode]
  refundable: Boolean

  """Base price in mills. Nullable for backwards compatibility"""
  base_price_mills: Int

  """This currency code that applies to all amount properties ."""
  currency_code: EnumString

  """Base price in cents. Deprecated in favor of base_price_mills"""
  base_price: Int
}

type PassengerFareOption {
  """the type of passenger (adult, child, infant, lap_infant)"""
  passenger_type: PassengerType

  """a breakdown of the prices relevant to the traveling passenger"""
  price_details: PriceDetail

  """a breakdown of the taxes relevant to the traveling passenger"""
  tax_details: TaxDetail

  """
  flag indicating refundability of this pricing schedule according to free text
  """
  is_refundable: Boolean

  """the last day this passenger can be ticketed for this pricing schedule"""
  last_ticket_date: DateTime

  """a list of metadata related to fare rules + the fare rules"""
  fare_rules_details: [FareRulesDetails]
}

enum PassengerType {
  """adult"""
  adult

  """child"""
  child

  """infant"""
  infant

  """infant_lap"""
  infant_lap

  """senior"""
  senior
}

input PassportInput {
  user_id: String
  passport_number: String
  passport_expiration: String
}

type PaymentAccountAndEmail {
  payment_account_id: ID

  """Last four digits of the credit card"""
  last_4: String

  """The name of the card given by the Admin"""
  nickname: String
  card_type: String

  """ISO UTC date: yyyy-mm-dd"""
  expiration_date_iso: String

  """
  Email connected to corporate account for expensing corporate card bookings.
  """
  expense_email: String
}

type PaymentAccountNode {
  status: EnumString

  """
  the sub-type of the payment; for now and for the foreseeable future, this will
  be a CreditCardType. Longer term, we will want to do some enum magic to maybe
  allow for other types of values.
  """
  payment_sub_type: EnumString
  tags: JSONString
  deleted: Boolean
  last_4: String
  token_type: EnumString
  address: PaymentAddressNode!
  address_id: Int

  """Nickname for this PaymentMethod"""
  nickname: String
  properties: GenericScalar
  customer: CustomerNode
  customer_id: Int
  expiration_month: Int
  user_id: String
  user: UserNode!
  expiration_year: Int
  created: DateTime

  """
  this will eventually be removed, once Lola Concierge is no longer in use; cf. PaymentAccountAccess
  """
  default: Boolean
  modified: DateTime
  id: ID!
  token: String
  version: Int

  """currently only credit_card"""
  payment_type: EnumString
  installation_id: String
}

type PaymentAddressNode {
  status: EnumString
  last_name: String

  """Abbreviation of a province or state"""
  province_code: String
  deleted: Boolean
  street1: String
  street2: String

  """A postal code or zip code"""
  postal_code: String

  """
  Flag to indicate of the data was normalized before being persisted to the database.
  """
  normalized: Boolean
  country_code: EnumString
  middle_name: String

  """
  Related to postal codes in that it is used in addresses to allow  sorting, for
  example to route mail to a certain postal centre or to distinguish streets
  with the same name in two different areas of the same settlement. It is not a
  postal code, and needs managing separately from postal codes
  """
  sorting_code: String
  id: ID!

  """
  this is here for backwards compatibility; it is an fk to customer on Customer.customer_id, which is the same as User.id
  """
  customer: CustomerNode

  """
  this is here for backwards compatibility; it is an fk to customer on Customer.customer_id, which is the same as User.id
  """
  customer_id: Int

  """Full text of a city/town name"""
  city: String
  first_name: String
  user_id: String
  user: UserNode!
  created: DateTime
  default: Boolean
  modified: DateTime
  properties: GenericScalar
  version: Int

  """A sub-locality of a city/town, like a district"""
  city_area: String
}

"""Information about what payment method was used to book something"""
type PaymentInfo {
  credit_card_type: String
  credit_card_last_4: String

  """If this is a corporate card."""
  is_corporate_card: Boolean

  """
  If this is the card linked to a dummyaccount wombats use for external imports.
  """
  is_wombat_external_import_card: Boolean
}

type PaymentMethod {
  id: String
  group_id: ID @deprecated(reason: "Use group.id")
  group_name: String @deprecated(reason: "Use group.name")
  last_4: String
  card_type: String
  card_type_key: String
  expiration: String
  expiration_date_utc: String
  saved: Boolean
  address: BillingAddress
  group: Group

  """Is this a corporate card?"""
  is_corporate_card: Boolean

  """Can bookings made with this PaymentMethod be expensed?"""
  expensable: Boolean

  """Nickname for this PaymentMethod"""
  nickname: String

  """The notes wombats have saved with the payment method"""
  agent_notes: [AgentNote]
}

input PaymentMethodInput {
  group_id: ID
  last_4: String
  card_type: String
  expiration: String
  saved: Boolean
  address: BillingAddressInput
  nickname: String
}

enum PaymentPolicy {
  """DEPOSIT"""
  DEPOSIT

  """POSTPAY"""
  POSTPAY

  """PREPAY"""
  PREPAY

  """UNKNOWN"""
  UNKNOWN
}

type PerformanceSample {
  timestamp: Int
  timing: Int
}

type PerformanceStatistic {
  category: String
  interval: Int
  timings: [PerformanceSample]
}

enum PolicyExtreme {
  ALWAYS
  NEVER
}

type Preferences {
  id: String
  name: String
  value: Boolean
}

enum PresetTimeWindow {
  """WINDOW_00_06"""
  WINDOW_00_06

  """WINDOW_06_09"""
  WINDOW_06_09

  """WINDOW_09_11"""
  WINDOW_09_11

  """WINDOW_11_13"""
  WINDOW_11_13

  """WINDOW_13_16"""
  WINDOW_13_16

  """WINDOW_16_20"""
  WINDOW_16_20

  """WINDOW_20_00"""
  WINDOW_20_00
}

type PriceDetail {
  """the base price associated with this fare"""
  base_price: Int

  """the total price including taxes and any fees associated with this fare"""
  total_price: Int

  """The total tax amount associated with this fare"""
  total_tax: Int
}

"""Information about the amount of money paid for something."""
type PriceDetails {
  """The total cost in USD 100ths."""
  usd_total_cost: String

  """The total tax in USD 100ths."""
  usd_total_tax: String

  """The total fees in USD 100ths."""
  usd_total_fees: String

  """The price details converted to other currencies."""
  converted_price_details(currency_codes: [ISOCurrencyCode!]): [CurrencyPriceDetails]
}

type PriceTierMultiLocation {
  location_tiers: [LocationPriceTier]
}

type PriceTrendsNode {
  historical_average: Int
  created: DateTime
  modified: DateTime
  id: ID!
  most_recent: Int
  min_price: Int
  trailing_7: Int
  trailing_30: Int
  max_price: Int
}

type PublicAirline {
  """The IATA designator of this airline."""
  code: String

  """The shortened name of the airline."""
  short_name: String
}

type PublicAirport {
  """The name of the airport"""
  name: String

  """The airport's IATA 3-letter code"""
  code: String

  """The latitude of the airport"""
  latitude: Float

  """The longitude of the airport"""
  longitude: Float
}

interface PublicBooking {
  id: ID

  """The overall status of this booking, from a *user's* point of view."""
  booking_status: BookingStatus

  """The type of booking"""
  component_type: String
}

type PublicCarBooking implements PublicBooking {
  id: ID

  """The overall status of this booking, from a *user's* point of view."""
  booking_status: BookingStatus

  """The type of booking"""
  component_type: String
  rate: PublicCarRate
}

type PublicCarRate {
  """An ID that maps to a contract in Priceline's system"""
  contract_id: ID
  agency: CarAgency
  pickup_info: CarDetailedLocationInfo
  dropoff_info: CarDetailedLocationInfo
  shuttle_information: String
  rules: CarRules
  car: Car
}

type PublicCustomBooking implements PublicBooking {
  id: ID

  """The overall status of this booking, from a *user's* point of view."""
  booking_status: BookingStatus

  """The type of booking"""
  component_type: String

  """
  For the title of the booking in the trip's itinerary view. e.g., Avis car rental
  """
  title: String

  """The type of the booking, for display"""
  custom_type: String

  """The start of this custom booking"""
  start_date: DateTime

  """The end of this custom booking"""
  end_date: DateTime

  """The ordered sections of fields for this custom booking"""
  sections: [CustomBookingSection]
}

type PublicFlightBooking implements PublicBooking {
  id: ID

  """The overall status of this booking, from a *user's* point of view."""
  booking_status: BookingStatus

  """The type of booking"""
  component_type: String
  legs: [PublicLeg]
}

type PublicHotel {
  """name of the hotel"""
  name: String

  """ First Address Line of the hotel"""
  address1: String

  """ Second Address Line of the hotel"""
  address2: String

  """city where the hotel is located"""
  city: String

  """data describing the hotel"""
  description: PublicHotelDescription

  """province where the hotel is located"""
  province: String

  """province code for the location of this hotel"""
  province_code: String

  """postal code for the location of this hotel"""
  postal_code: String

  """contact phone number for this hotel"""
  phone: String

  """website of this hotel"""
  website: String

  """latitude for the location of this hotel"""
  latitude: String

  """longitude for the location of this hotel"""
  longitude: String

  """hotel media associated with this hotel"""
  media: [Media]

  """Amenities available at the hotel"""
  raw_amenities: PublicRawHotelAmenityInformation

  """additional derived features for this hotel"""
  raw_supplements: PublicRawHotelSupplementInfo
}

type PublicHotelBooking implements PublicBooking {
  id: ID

  """The overall status of this booking, from a *user's* point of view."""
  booking_status: BookingStatus

  """The type of booking"""
  component_type: String
  checkin_date: DateTime
  checkout_date: DateTime
  hotel: PublicHotel
}

type PublicHotelDescription {
  """The hotel description"""
  description: String
}

type PublicLeg {
  """The segments on the leg."""
  segments: [PublicSegment]
}

type PublicRawHotelAmenityInformation {
  """policies of this hotel regarding Pets, Parking, etc."""
  policy: [String]

  """
  amenities available on site at the hotel property. e.g Conference centers
  """
  property: [String]

  """amenities available within rooms like microwaves, desks etc"""
  room: [String]
}

type PublicRawHotelSupplementInfo {
  """raw data for 'trust you' third-party data available for this hotel"""
  trustyou: GenericScalar

  """raw data for standardized derived attributes of the hotel"""
  attributes: GenericScalar

  """
  raw data for uncategorized extra information associated with this hotel
  """
  curated_extras: GenericScalar
}

type PublicSegment {
  cancelled: Boolean
  arrival_airport: String
  arrival_city: String
  arrival_gate: String
  arrival_terminal: String

  """The estimated arrival time in UTC."""
  arrival_time: DateTime
  arrival_tz: Float

  """The estimated arrival time in the local timezone"""
  local_estimated_arrival_time: DateTime
  original_arrival_time: DateTime
  departure_airport: String
  departure_city: String
  departure_gate: String
  departure_terminal: String

  """The estimated departure time in UTC."""
  departure_time: DateTime
  departure_tz: Float

  """The estimated departure time in the local timezone"""
  local_estimated_departure_time: DateTime
  original_departure_time: DateTime
  duration: Int
  flight_number: Int
  marketing_airline: PublicAirline
  operating_airline: PublicAirline
  origin: PublicAirport
  destination: PublicAirport
}

"""Represents public-safe information about a Trip"""
type PublicTrip {
  user: PublicUser

  """The short id of the trip"""
  short_id: String

  """The name of this trip"""
  name: String

  """The subtitle of the trip."""
  subtitle: String

  """The date when the trip starts"""
  start_date: DateTime

  """The date that the trip ends"""
  end_date: DateTime

  """The number of flight bookings on this trip"""
  num_flight_bookings: Int

  """The number of hotel bookings on this trip"""
  num_hotel_bookings: Int

  """The number of car bookings on this trip"""
  num_car_bookings: Int

  """The number of custom bookings on this trip"""
  num_custom_bookings: Int

  """The url of the image for this trip"""
  image_url: String
  bookings: [PublicBooking]
}

type PublicUser {
  """A user's preferred first name."""
  chosen_first_name: String
}

type Query {
  big_board: BigBoardInternal

  """Search for car rentals"""
  car_stream_start(params: CarStreamInit!): CarStream

  """Results for car search"""
  car_stream_poll(params: CarStreamPoll!): CarStream

  """Car rate for a given car option"""
  car_rate(params: CarRateParams!): CarRate
  notification_history(phone: String, email: String, booking_id: String, recipient_user_id: String, method: String, id: String): [NotificationHistory]
  current_user_owns_trip(
    """The short id of the trip in question"""
    short_id: ID
  ): Boolean
  shared_trip(
    """The short id of the shared trip"""
    short_id: ID
  ): PublicTrip
  shared_flight_booking(booking_id: ID, trip_short_id: ID): PublicFlightBooking
  shared_hotel_booking(booking_id: ID, trip_short_id: ID): PublicHotelBooking
  shared_car_booking(booking_id: ID, trip_short_id: ID): PublicCarBooking
  shared_custom_booking(booking_id: ID, trip_short_id: ID): PublicCustomBooking

  """A high-level summary of the group's bookings, broken down over time"""
  group_booking_summary(
    """The id of a specific department to summarize"""
    group_department_id: ID
  ): GenericScalar

  """A high-level summary of the groups's trips, broken down over time"""
  group_trip_summary(start_date: DateTime): GenericScalar

  """Group bookings report"""
  group_bookings_report(params: GroupBookingsInputParams): GroupBookingsData

  """
  A high-level summary of group's savings across flight, hotel and car bookings
  """
  group_savings_summary(params: GroupSavingsSummaryReportInputParams): GroupSavingsSummary

  """A more detailed breakdown of Flight booking"""
  group_flight_booking_details(params: GroupBookingDetailsInputParams): GroupFlightBookingDetailsData

  """A more detailed breakdown of Hotel booking"""
  group_hotel_booking_details(params: GroupBookingDetailsInputParams): GroupHotelBookingDetailsData

  """A more detailed breakdown of Car booking"""
  group_car_booking_details(params: GroupBookingDetailsInputParams): GroupCarBookingDetailsData

  """A more detailed breakdown of Out of Policy booking"""
  group_out_of_policy_details(params: GroupBookingDetailsInputParams): GroupPolicyBookingDetailsData

  """A more detailed breakdown of Out of Policy booking"""
  group_in_policy_details(params: GroupBookingDetailsInputParams): GroupPolicyBookingDetailsData

  """A more detailed breakdown of traveler booking"""
  group_traveler_booking_details(params: GroupBookingDetailsInputParams): GroupTravelerBookingDetailsData

  """A more detailed breakdown of department booking"""
  group_department_booking_details(params: GroupBookingDetailsInputParams): GroupDepartmentBookingDetailsData

  """A more detailed breakdown of Booker booking"""
  group_booker_booking_details(params: GroupBookingDetailsInputParams): GroupBookerBookingDetailsData
  lookup_routes: Routes

  """
  returns a list of FlightstatsSegmentOptions that meet specified parameters
  """
  external_segment_options(params: ExternalBookedSegmentOptionQuery!): [ExternalBookedSegmentOption]
  enqueued_bookings(priority: String): [EnqueuedBooking]

  """All the registered expense partners"""
  expense_partners: [ExpensePartner]

  """Initialize a stream of flight fares"""
  fare_stream_start(params: FareStreamInit!): FareStream

  """
  Data describing a flight search stream and possible intermediate results.
  Note: There should be only one client polling a stream.
  """
  fare_stream_poll(params: FareStreamPoll!): FareStream

  """A list of fare family information by airline"""
  fare_families(params: FareFamilyInput!): [AirlineFareFamilies]

  """returns a list of LegOptions that meet specified parameters"""
  leg_options(params: LegOptionQuery!): [LegOption]

  """List of upsellable fare options"""
  fare_upsell(fare_cache_identity: String!): FareOption

  """List of upsellable fare options"""
  fare_upsell_options(
    fare_cache_identity: ID!

    """If true, attaches fare rules"""
    include_fare_rules: Boolean = true
  ): [BrandedFareOption]

  """Get a previously-provided fare by its id"""
  flight_fare(
    """The UUID of the fare to refresh"""
    fare_id: ID!

    """Cache key to look up a fare"""
    fare_cache_identity: ID

    """If true, attaches fare rules"""
    include_fare_rules: Boolean = true

    """The stream this fare originated from"""
    stream_id: ID

    """If true, the fare will be refreshed for booking"""
    refresh: Boolean = true

    """
    Currency to fetch the fare in. Can be different from the fare currency if
    the user switched their locale between search and book. Only used for fare
    refresh (when refresh=true).
    """
    currency: ISOCurrencyCode
  ): FareOption

  """Get the fare rules information for a fare"""
  fare_rules_details(fare_id: ID! = "The derived identifier of the fare to get rules for"): [FareRulesDetails]
  google_directions(
    """Lat,Long pair of format 42.3601,-71.0589"""
    origin: String!

    """Lat,Long pair of format 33.7526,-118.1903"""
    destination: String!

    """Mode of transportation between points. DRIVING or WALKING"""
    mode: GoogleDirectionsTransportMode
  ): [GoogleDirectionsRoute]

  """All the airlines in the world"""
  airlines: [Airline]
  airline(code: String!): Airline

  """All the airports in the world"""
  airports: [Airport]
  airport(code: String!): Airport

  """Retrieve a single TravelerProfile given its UUID, if found."""
  traveler_profile(
    """The UUID of a TravelerProfile"""
    id: ID!

    """
    The ID of the user for whom we are querying - this is only necessary in the
    event that we need to act as another person like when querying from the womcon.
    """
    user_id: ID
  ): TravelerProfile

  """Retrieve a given user's primary TravelerProfile"""
  primary_profile(
    """The ID of the user whom we are querying"""
    user_id: ID!
  ): TravelerProfile

  """
  Retrieve all TravelerProfiles belonging to a user and all TravelerProfiles that user has access to
  """
  traveler_profiles(
    """
    The UUID of a user whose owned and visible TravelerProfiles should be returned
    """
    user_id: ID!
  ): [TravelerProfile] @deprecated(reason: "Use User.traveler_profiles")
  payment_method(id: String!): PaymentMethod
  payment_methods(user_id: String, include_womcard: Boolean): [PaymentMethod]
  smarty_restaurant(restaurant_key: String, restaurant_source: String): Restaurant
  restaurant(restaurant_id: String): Restaurant

  """Retrieve a seatmap for the given segment information"""
  seatmap(user_id: String, segment: SegmentInputSchema!, cabin_type: String, loyalty_program_ids: [String]): SeatMap @deprecated(reason: "Please use `seatmap_for_segment`.")

  """Retrieve a seatmap for the given segment information"""
  seatmap_for_segment(
    """Current user's id"""
    user_id: ID

    """The derived id of a Segment"""
    segment_id: ID!

    """The cabin type to query for"""
    cabin_type: CabinType!
  ): SeatMap
  trip_email_details(limit: Int): [TripEmailDetails]
  trip_email(id: String): TripEmail

  """

          Request a trip given a share code.

          DEPRECATED: Requesting a trip by id is deprecated. Please request the trips with a list of ids.

  """
  trip(
    """DEPRECATED: Please request trips by ids instead."""
    id: String
    code: String
  ): Trip

  """

          Request trips by a list of ids.

          DEPRECATED: Requesting trips by user_id is deprecated. Please request the trips on a User.

  """
  trips(
    """DEPRECATED: Please request trips on a User instead."""
    user_id: String
    ids: [ID]
    exclude_custom_bookings: Boolean = false
  ): [Trip]

  """The new desktop womcon's trips search result table"""
  desktop_womcon_trips(params: DesktopWomconTripsTableQueryParams): DesktopWomconTripsTable
  hotel_providers: [HotelProviderNode]
  hotel(id: ID): Hotel
  hotels(location_id: String!): [Hotel]

  """returns a list of hotels that meet specified parameters"""
  hotel_list(params: HotelInput!): [Hotel]

  """returns a list of hotels that meet specified parameters"""
  beta_hotels(params: HotelInput!): [Hotel]

  """Get a previously-provided rate by its id"""
  hotel_rate(
    """The ID of the hotel"""
    hotel_id: ID!

    """The UUID of the rate to refresh"""
    rate_id: ID!

    """If true, the rate will be refreshed for booking"""
    refresh: Boolean = true

    """The currency code to return the rate in"""
    currency_code: ISOCurrencyCode
  ): HotelRate
  source(hotel_id: String): HotelNode @deprecated(reason: "Do not use.")
  raw(hotel_id: String): [HotelRawNode] @deprecated(reason: "Do not use.")
  hotel_audits(hotel_id: String): [HotelAudit]
  bookings(user_id: String, ids: [ID]): [Booking] @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  get_flight_booking(id: String): FlightBooking @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  get_hotel_booking(id: String): HotelBooking @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  get_car_booking(id: String): CarBooking @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  get_custom_booking(id: String): CustomBooking @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  itinerary(user_id: String): [ItineraryComponentNode] @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  booking_event(id: String, user_id: String): [BookingEventNode] @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  hotel_booking(id: String, user_id: String): HotelBookingConfirmationNode @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  booked_flights(user_id: String): [BookedFlightNode] @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  provider_cancellation(id: String, user_id: String): HotelCancellationConfirmationNode @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  manual_cancellation(id: String, user_id: String): HotelManualCancellationConfirmationNode @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  flight_ticket_cancellation(id: String, user_id: String): TicketCancellationSuccessDetailsNode @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  flight_pnr_cancellation(id: String, user_id: String): FlightPNRCancellationSuccessDetailsNode @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  flight_fare_cancel_pending(id: String, user_id: String): FareCancellationPendingDetailsNode @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  manual_pnr_cancellation(id: String, user_id: String): FlightPNRCancellationManualRequestDetailsNode @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  manual_ticket_cancellation(id: String, user_id: String): TicketCancellationManualRequestDetailsNode @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  hotel_modifications(id: String, user_id: String): HotelMajorModificationDetailsNode @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  flight_modifications(id: String, user_id: String): FlightMajorModificationDetailsNode @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  ticket_failure(id: String, user_id: String): [FlightTicketFailEventNode] @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  ticket_cancellation_failure(id: String, user_id: String): [FlightTicketCancelFailEventNode] @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  flight_pnr_creation_failure(id: String, user_id: String): [FlightPNRCreateFailEventNode] @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  ffn_addition_failure(id: String, user_id: String): [FlightFFNAddFailEventNode] @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  flight_pnr_cancel_failure(id: String, user_id: String): [FlightPNRCancelFailEventNode] @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  flight_seat_add_failure(id: String, user_id: String): [FlightSeatAddFailEventNode] @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  hotel_booking_fail(id: String, user_id: String): [HotelBookFailEventNode] @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  hotel_booking_cancellation_fail(id: String, user_id: String): [HotelCancelFailEventNode] @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")
  destination(location: String, location_type: String): LocationNode @deprecated(reason: "This womcon query should be replaced by User.bookings or Group.bookings")

  """The new desktop womcon's bookings search result table"""
  desktop_womcon_bookings(params: DesktopWomconBookingsTableQueryParams): DesktopWomconBookingsTable
  group(
    """The ID of the group to return"""
    id: String

    """The group's invite code.  DEPRECATED - do not use."""
    code: String
  ): Group
  groups_by_name(
    """Name of the group to search for."""
    group_name: String
  ): [Group]
  groups(user_id: String, eligible: Boolean = false, admin_only: Boolean = false): [Group] @deprecated(reason: "Use User.group_associations.group")
  group_associations(user_id: String): [GroupAssociationNode] @deprecated(reason: "Use User.group_associations")
  employees(
    group_id: String
    active_only: Boolean

    """Exclude users who have not accepted invites"""
    exclude_unaccepted: Boolean
  ): [Employee] @deprecated(reason: "Use Group.people")
  hotel_tier_policy(group_id: String): HotelTierPolicyNode @deprecated(reason: "Use Group.TBD")
  cabin_class_flight_policies(group_id: String): [CabinClassPolicyNode] @deprecated(reason: "Use Group.flight_cabin_class_policies")
  direct_preferred_flight_policy(group_id: String): DirectPreferredPolicyNode @deprecated(reason: "Use Group.flight_direct_policy")
  wiggle_room_flight_policy(group_id: String): FlightWigglePolicyNode @deprecated(reason: "Use Group.flight_wiggle_policy")
  group_destinations(group_id: String, group_destination_ids: [String]): [GroupDestination] @deprecated(reason: "Use Group.destinations")
  group_hotels(group_id: String): [GroupHotelNode] @deprecated(reason: "Please use `Group.recommendations` with `preferred: true` and `type: hotel`")
  group_recommendations(group_id: String!, group_destination_id: String, recommended_object_id: String, preferred: Boolean): [GroupRecommendation] @deprecated(reason: "Use Group.recommendations")
  location_price_tiers(group_id: String, location_id: String): [LocationPriceTier] @deprecated(reason: "This will soon be replaced by new field(s) on Group")
  comparison_location_price_tiers(group_id: String, location_id: String, required_comparison_loc_ids: [String]): [PriceTierMultiLocation] @deprecated(reason: "This will soon be replaced by new field(s) on Group.")
  hotel_guideline_primary_city(group_id: String): [HotelGuidelineCity] @deprecated(reason: "Use hotel_guidelines instead")
  user(id: String): User
  related_users(user_id: String): [User]
  installations(user_id: String): [InstallationNode]
  transaction(item_id: String, user_id: String): [TransactionItemNode]
  filter_users(filter: String, offset: Int, limit: Int): [UserIndexNode]
  secrets_key(user_id: String!): String
  country_code: [String]
  user_loyalty(user_id: String): [UserLoyaltyProgram] @deprecated(reason: "Please query user.loyalty_programs instead")
  user_loyalty_program(user_id: String, user_loyalty_program_id: String): UserLoyaltyProgram @deprecated(reason: "Please query user.loyalty_programs instead")
  payment_address(user_id: String): [PaymentAddressNode] @deprecated(reason: "Use User.payment_methods.address")
  payment_account(user_id: String): [PaymentAccountNode] @deprecated(reason: "Use User.payment_methods")
  flight_preferences(user_id: String): FlightPreferences @deprecated(reason: "Use User.flight_preferences")
  hotel_preferences(user_id: String): HotelPreferences @deprecated(reason: "Use User.hotel_preferences")

  """Represents an app, which has config data on it."""
  app: App
}

enum RateCategory {
  """AAA"""
  AAA

  """AARP"""
  AARP

  """ADVANCE_PURCHASE"""
  ADVANCE_PURCHASE

  """ALL_INCLUSIVE"""
  ALL_INCLUSIVE

  """BEST_AVAILABLE"""
  BEST_AVAILABLE

  """DAILY"""
  DAILY

  """GROUP"""
  GROUP

  """LOYALTY"""
  LOYALTY

  """NEGOTIATED"""
  NEGOTIATED

  """SENIOR"""
  SENIOR

  """STANDARD"""
  STANDARD
}

"""
The HotelAmenityInformation node provides unstructured amenity data under appropriate keys
"""
type RawHotelAmenityInformation {
  """policies of this hotel regarding Pets, Parking, etc."""
  policy: [String]

  """
  amenities available on site at the hotel property. e.g Conference centers
  """
  property: [String]

  """amenities available within rooms like microwaves, desks etc"""
  room: [String]

  """miscellaneous amenity categories"""
  categories: [String]

  """accepted payment types"""
  payment_types: [String]
}

"""
The HotelSupplementInfo node provides additional derived features for this hotel
"""
type RawHotelSupplementInfo {
  """raw data for standardized derived attributes of the hotel"""
  attributes: GenericScalar

  """numbered version of the attributes field"""
  attributes_version: Int

  """the derived category for this hotel e.g Luxury etc """
  category: String

  """numbered version of the category field """
  category_version: Int

  """landmark associated with the hotel"""
  landmark: String

  """distance to the landmark associated with the hotel"""
  landmark_distance: Float

  """city center closest to this hotel"""
  citycenter: String

  """distance of the city center closest to this hotel"""
  citycenter_distance: Float

  """raw data for 'trust you' third-party data available for this hotel"""
  trustyou: GenericScalar

  """numbered version of the trustyou field"""
  trustyou_version: Int

  """internally rated scale of the rate associated with the hotel"""
  price_level: Int

  """numbered version of the price_level field"""
  price_level_version: Int

  """
  raw data for uncategorized extra information associated with this hotel
  """
  curated_extras: GenericScalar
}

type RecentFlightBooking {
  company_name: String
  traveler_initials: String
  price: Int
  departure_airport_code: String
  arrival_airport_code: String
  stops: Int
  airline_code: String
  airline_name: String
  is_gbt_fare: Boolean
}

type RecentHotelBooking {
  company_name: String
  traveler_initials: String
  price: Int
  hotel_name: String
  hotel_media_url: String
}

type RefreshBookingPNR {
  ok: Boolean
  booking: FlightBooking
}

"""Register an anonymous user account. """
type RegisterAnonUser {
  """Did the operation complete normally. """
  ok: Boolean

  """The user logged in / registered"""
  user: User
}

type RegisterNewSalesCustomer {
  ok: Boolean
  group: Group
}

type RemoveDestination {
  ok: Boolean
  destination: GroupDestination
}

type RemoveFromGroup {
  ok: Boolean
  person: GroupPerson
}

type RemoveGroupRecommendation {
  ok: Boolean
  group_recommendation: GroupRecommendation
}

"""
Takes in a booking_id and sends the admin from the request the receipt for said booking
"""
type RequestBookingReceiptCopy {
  ok: Boolean
}

"""Handles a magic link request """
type RequestMagicLink {
  ok: Boolean
}

type Restaurant {
  id: String
  name: String
  address1: String
  address2: String
  city: String
  province_code: String
  postal_code: String
  country_code: EnumString
  latitude: Float
  longitude: Float
  rating: Float
  phone: String
  url: String
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  modified: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  last_updated: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  media: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  attribution: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  tags: JSONString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  properties: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  version: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  deleted: Boolean @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

"""Revokes access to a given TravelerProfile from a user"""
type RevokeAccessToTravelerProfile {
  ok: Boolean
  traveler_profile: TravelerProfile
}

type RevokeGroupInvitation {
  ok: Boolean
  person: GroupPerson
}

enum RoomAmenity {
  """ACCESSIBLE"""
  ACCESSIBLE

  """AIR_CONDITIONING"""
  AIR_CONDITIONING

  """BALCONY"""
  BALCONY

  """BATHTUB"""
  BATHTUB

  """BIDET"""
  BIDET

  """BLACKOUT_CURTAINS"""
  BLACKOUT_CURTAINS

  """BREAKFAST"""
  BREAKFAST

  """BUTLER"""
  BUTLER

  """CEILING_FAN"""
  CEILING_FAN

  """CHILD_SERVICES"""
  CHILD_SERVICES

  """COFFEE"""
  COFFEE

  """CRIB_AVAILABLE"""
  CRIB_AVAILABLE

  """DISHWASHER"""
  DISHWASHER

  """DOORBELL"""
  DOORBELL

  """DOWN_COMFORTER"""
  DOWN_COMFORTER

  """ELECTRIC_KETTLE"""
  ELECTRIC_KETTLE

  """EXTERIOR_ENTRANCE"""
  EXTERIOR_ENTRANCE

  """FIREPLACE"""
  FIREPLACE

  """HAIRDRYER"""
  HAIRDRYER

  """HYPOALLERGENIC"""
  HYPOALLERGENIC

  """INTERIOR_DOORWAYS"""
  INTERIOR_DOORWAYS

  """IRON"""
  IRON

  """KITCHEN"""
  KITCHEN

  """LIVING_ROOM"""
  LIVING_ROOM

  """MASSAGE"""
  MASSAGE

  """MEMORY_FOAM_MATTRESS"""
  MEMORY_FOAM_MATTRESS

  """MICROWAVE"""
  MICROWAVE

  """MINIBAR"""
  MINIBAR

  """NEWSPAPER"""
  NEWSPAPER

  """PARKING"""
  PARKING

  """PETS"""
  PETS

  """PILLOW_MENU"""
  PILLOW_MENU

  """PILLOWTOP_MATTRESS"""
  PILLOWTOP_MATTRESS

  """POOL"""
  POOL

  """PORCH"""
  PORCH

  """RAINFALL_SHOWERHEAD"""
  RAINFALL_SHOWERHEAD

  """REFRIGERATOR"""
  REFRIGERATOR

  """ROOFTOP_ACCESS"""
  ROOFTOP_ACCESS

  """SAFE"""
  SAFE

  """SEPARATE_BEDROOM"""
  SEPARATE_BEDROOM

  """SHARED_BATHROOM"""
  SHARED_BATHROOM

  """SITTING_AREA"""
  SITTING_AREA

  """SMART_TV"""
  SMART_TV

  """SMOKING"""
  SMOKING

  """SOFABED"""
  SOFABED

  """SOUNDPROOF"""
  SOUNDPROOF

  """TEA"""
  TEA

  """TELEVISION"""
  TELEVISION

  """TURNDOWN"""
  TURNDOWN

  """VIDEO_GAMES"""
  VIDEO_GAMES

  """WHIRLPOOL"""
  WHIRLPOOL

  """WIFI"""
  WIFI

  """YARD"""
  YARD
}

enum RoomCategory {
  """ADJOINED"""
  ADJOINED

  """DELUXE"""
  DELUXE

  """EXECUTIVE_SUITE"""
  EXECUTIVE_SUITE

  """INTERCONNECTED"""
  INTERCONNECTED

  """JUNIOR_SUITE"""
  JUNIOR_SUITE

  """PENTHOUSE"""
  PENTHOUSE

  """PRESIDENTIAL_SUITE"""
  PRESIDENTIAL_SUITE

  """RESIDENTIAL_SUITE"""
  RESIDENTIAL_SUITE

  """STANDARD"""
  STANDARD

  """STUDIO"""
  STUDIO

  """SUITE"""
  SUITE

  """SUPERIOR"""
  SUPERIOR

  """VILLA"""
  VILLA
}

type Route {
  segments: [RouteSegment]
  gbt_tariff_class: String
  base_price: Float
  consumer_price: Float
  consumer_price_non_refundable: Float
}

type RouteResults {
  routes: [Route]
}

type Routes {
  criteria(origin: String, departure_date: DateTime, destination: String, include_pricing: Boolean = true, return_date: DateTime): RouteResults
}

type RouteSegment {
  departure_time: DateTime
  arrival_time: DateTime
  airline: String
  flight_number: Int
  departure_airport_code: String
  arrival_airport_code: String
}

"""Representation of a row of seats in a plane """
type Row {
  """The row number"""
  row_number: Int

  """This row is an exit row"""
  is_exit_row: Boolean

  """This row is over the wing"""
  is_over_wing: Boolean

  """This row has extra legroom"""
  has_extra_legroom: Boolean

  """List of seats in this row"""
  seats: [Seat]
}

type SaveHotelTierPolicy {
  ok: Boolean
}

type SavingsSummary {
  total: VerticalSavingsSummary
  flights: VerticalSavingsSummary
  hotels: VerticalSavingsSummary
  cars: VerticalSavingsSummary
}

"""
A Hotel derived from a travel-svc call to find (and score) top hotels for a given user/group.
"""
type ScoredHotel implements Hotel {
  """id of the Hotel."""
  id: ID

  """name of the hotel"""
  name: String

  """ First Address Line of the hotel"""
  address1: String

  """ Second Address Line of the hotel"""
  address2: String

  """Amenities available at the hotel"""
  raw_amenities: RawHotelAmenityInformation

  """city where the hotel is located"""
  city: String

  """country where the hotel is located"""
  country: String

  """country code for the location of this hotel"""
  country_code: ISOCountryCode

  """province where the hotel is located"""
  province: String

  """province code for the location of this hotel"""
  province_code: String

  """website of this hotel"""
  website: String

  """additional derived features for this hotel"""
  raw_supplements: RawHotelSupplementInfo

  """local currency accepted by the hotel"""
  currency: ISOCurrencyCode

  """data describing the hotel"""
  description: HotelDescription

  """contact email for this hotel"""
  email: String

  """contact fax number for this hotel"""
  fax: String

  """star rating for this hotel"""
  star_rating: String

  """category for this hotel"""
  category: String

  """tag line for this hotel"""
  tag_line: String

  """contact phone number for this hotel"""
  phone: String

  """postal code for the location of this hotel"""
  postal_code: String

  """latitude for the location of this hotel"""
  latitude: String

  """longitude for the location of this hotel"""
  longitude: String

  """hotel media associated with this hotel"""
  media: [Media]

  """The chain associated with this hotel"""
  chain: String

  """the brand associated with this hotel"""
  master_brand: String

  """
  local checkin timedelta from the beginning of the day for the hotel in seconds
  """
  checkin_time: Int

  """
  local checkout timedelta from the beginning of the day for the hotel in seconds
  """
  checkout_time: Int

  """The number of ratings for the hotel."""
  num_ratings: Int

  """Whether or not the active user has already booked this hotel"""
  booked_before: Boolean

  """Whether or not the active user's group(s) prefer this hotel"""
  group_admin_preferred: Boolean
  group_hotel_negotiated_rates: GroupHotelNegotiatedRatesOutput

  """availability summary for the hotel and given search parameters"""
  availability(search_query: HotelAvailabilityInput!): HotelAvailabilitySummary
  rooms(
    """
    A HotelRoomInput object representing the dates and guests to check availability against
    """
    hotel_room_info: HotelRoomInput!
  ): [HotelRoom]

  """Google directions from a given origin to the hotel"""
  google_directions(
    """starting point for a google directions lookup to the hotel"""
    starting_point: LocationInput!
  ): [GoogleDirectionsRoute]

  """Please use raw_amenities instead."""
  amenities: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  supplements: DerivedHotelAttributesNode @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")

  """Only for Lola Desktop"""
  backwards_compatible_media: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

type SearchStatistic {
  category: String
  actions_today: Int
  bookings_today: Int
  actions_one_week_ago: Int
  bookings_one_week_ago: Int
  conversion_rate_today: Float
  conversion_rate_one_week_ago: Float
}

"""A representation of a seat and all attributes relevant to that seat """
type Seat {
  """The letter of the seat"""
  seat_letter: String

  """The type of seat (window/center/aisle)"""
  seat_location: EnumString @deprecated(reason: "Please use seat_type instead")

  """The type of seat (window/center/aisle)"""
  seat_type: SeatLocation

  """This seat is available"""
  is_available: Boolean

  """This seat is premium"""
  is_premium: Boolean

  """The currency type of the premium cost"""
  premium_currency: ISOCurrencyCode

  """Additional price of the seat (in smallest denomination, e.g. pennies)"""
  premium_cost: Int
}

type SeatAdditionFailureDetailsNode {
  created: DateTime
  event_details: GenericScalar
  segment_id: String
  modified: DateTime
  leg_id: String

  """
  a serialized LolaClientError. It has the full, nested causal chain with an
  appropriate "key" that will give greater detail as to the category of failure
  """
  error_details: GenericScalar
  reported_timestamp: DateTime
  provider: EnumString
  seat_letter: String
  passenger_id: String
  id: ID!
  row_number: Int
}

"""Representation of a seating compartment within a seatmap """
type SeatingCompartment {
  """Unique identifier for this compartment within the cabin"""
  compartment_name: String

  """The row number for the start of the compartment"""
  start_row: Int

  """The row number for the end of the compartment"""
  end_row: Int

  """Whether this compartment is on the upper deck of the aircraft"""
  is_upper_deck: Boolean

  """The seat letters for a typical row of the compartment"""
  seat_letters: [String]

  """The general seat layout of a row"""
  seat_layout: [String]

  """List of aisle boundaries"""
  aisle_boundaries: [AisleBoundary]

  """The rows in this compartment"""
  rows: [Row]
}

enum SeatLocation {
  """AISLE"""
  AISLE

  """CENTER"""
  CENTER

  """WINDOW"""
  WINDOW
}

type SeatMap {
  compartments: [SeatingCompartment]

  """This seatmap is fully occupied"""
  fully_occupied: Boolean
}

enum SeatPreference {
  aisle
  window
}

"""A request for a specific seat on a specific segment of a fare."""
input SeatSelectionInput {
  """
  The uniquely-identifying ID of the segment on the fare to which this seat request applies
  """
  segment_id: ID!

  """The selected seat's letter"""
  seat_letter: String!

  """The selected seat's row number"""
  row_number: Int!
}

"""A segment of a flight booking, wheels up to wheels down."""
type Segment {
  id: ID!
  arrival_gate: String
  arrival_gate_changed: Boolean
  arrival_terminal: String
  arrival_terminal_changed: Boolean

  """The estimated arrival time in UTC."""
  arrival_time: DateTime

  """The estimated arrival time in the local timezone"""
  local_estimated_arrival_time: DateTime
  arrival_tz: Float

  """
  A single cabin type associated with this segment. There could be multiple
  """
  cabin_type: String @deprecated(reason: "Please use cabin_types to get back all cabin types for this segment.")

  """
  All cabin types associated with this segment. Taken from the associated FlightBookingSegmentPassengerFareDetails
  """
  cabin_types: [String]
  cancelled: Boolean
  departure_gate: String
  departure_gate_changed: Boolean
  departure_terminal: String
  departure_terminal_changed: Boolean

  """The estimated departure time in UTC."""
  departure_time: DateTime

  """The estimated departure time in the local timezone"""
  local_estimated_departure_time: DateTime
  departure_tz: Float
  derived_identifier: String
  destination: Airport
  duration: Int
  flight_number: Int

  """
  Segments which share a group id share equipment. This is completely unrelated to lola groups/teams/etc.
  """
  group_id: String
  marketing_airline: Airline
  married_segment: Boolean
  miles_flown: Int
  operating_airline: Airline
  operating_airline_flight_number: Int
  origin: Airport
  original_arrival_time: DateTime
  original_departure_time: DateTime
  plane_type: String

  """The IATA code of the airport at which this Segment arrives."""
  arrival_airport: String @deprecated(reason: "Please use destination.code instead.")

  """The city in which this Segment arrives."""
  arrival_city: String @deprecated(reason: "Please use destination.city instead.")
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")

  """The IATA code of the airport from which this Segment departs."""
  departure_airport: String @deprecated(reason: "Please request origin.code instead.")

  """The city from which this Segment departs."""
  departure_city: String @deprecated(reason: "Please request origin.city instead.")
  marketing_airline_id: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  modified: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  operating_airline_id: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

type SegmentDetail {
  """the unique hash for the SegmentOption these details apply to"""
  segment_id: ID

  """the cabin type for this flight segment"""
  cabin_type: CabinType

  """the basis code for the flight segment"""
  basis_code: String

  """the booking code for the flight segment"""
  booking_code: String

  """the fare family key associated with the fare details of this segment"""
  fare_family_key: String
}

"""Segment identifying information. NOTE: This is a legacy input node"""
input SegmentInputSchema {
  """The segment departure time"""
  departure_time: DateTime!

  """The segment departure airport"""
  departure_airport: String!

  """The segment arrival airport"""
  arrival_airport: String!

  """Operating airline information"""
  operating_airline: AirlineInputSchema

  """Marketing airline information"""
  marketing_airline: AirlineInputSchema!

  """The segment's flight number"""
  flight_number: Int!
}

type SegmentNode {
  status: EnumString
  departure_airport: String
  miles_flown: Int

  """
  Storing the hash derived from a subset of fields that can be used to determine a unique flight
  """
  derived_identifier: String
  arrival_airport: String
  operating_airline_flight_number: Int
  arrival_tz: Float
  arrival_time: DateTime
  duration: Int
  plane_type: String
  id: ID!
  departure_time: DateTime
  married_segment: Boolean
  group_id: String
  created: DateTime
  departure_tz: Float
  modified: DateTime
  marketing_airline_code: String
  operating_airline_code: String
  flight_number: Int
  marketing_airline: AirlineNode!
  marketing_airline_id: Int
  operating_airline: AirlineNode!
  operating_airline_id: Int
}

type SegmentOption {
  """the unique hash for this SegmentOption"""
  id: ID!

  """local time of departure for this flight segment"""
  departure_time_local: DateTime

  """utc time of departure for this flight segment"""
  departure_time_utc: DateTime

  """local time of arrival for this flight segment"""
  arrival_time_local: DateTime

  """utc time of arrival for this flight segment"""
  arrival_time_utc: DateTime

  """time zone offset for the arrival location of this flight segment"""
  arrival_tz: Float

  """time zone offset for the departure location of this flight segment"""
  departure_tz: Float

  """the airport code for the point of departure"""
  departure_airport: Airport

  """the airport code for the point of arrival"""
  arrival_airport: Airport

  """
  the number assigned by the marketing airline to the flight - this may differ
  from the flight number of the operating airline
  """
  flight_number: Int

  """the airline selling this flight segment"""
  marketing_airline: Airline

  """the airline operating this flight segment"""
  operating_airline: Airline

  """the number of miles flown during this flight segment"""
  miles_flown: Int

  """the cabin type for this flight segment"""
  cabin_type: CabinType

  """the basis code for the flight segment"""
  basis_code: String

  """the booking code for the flight segment"""
  booking_code: String
}

input SelectedLegOption {
  id: ID!
  index: Int!

  """
  Selected class information is used to choose a pricing class level from the
  options returned under `FareOption.branded_pricing`. Specifying a selected
  class will update `LegOption.pricing` fields of subsequent responses to the
  selected class, and clear the `fare_options` lists of lower-ranked
  `BrandedPricing` nodes  in the `FareOption.branded_pricing` list. If not
  specified, the selected `cabin_type` will default to the type specified in the
  initial search, and `class_id` will default to the cheapest in that `cabin_type`
  """
  class_info: SelectedLegOptionClassInfo
}

input SelectedLegOptionClassInfo {
  """
  The cabin class of fare to select, defaults to the class specified in the initial search
  """
  cabin_type: CabinType!

  """
  The airline-unique class pricing identifier (found on BrandedPricing) used to
  specify the pricing class (within a cabin-type) of a selected leg option
  """
  class_id: String!
}

"""Sends the expense now!"""
type SendBookingExpense {
  ok: Boolean
  booking: Booking
}

type SendIntercomMessage {
  ok: Boolean
}

type SendInvitationEmail {
  ok: Boolean
}

type SetBookingDepartment {
  ok: Boolean
  booking: Booking
}

type SetBookingExpense {
  ok: Boolean
  booking: Booking
}

"""
Adding/changing a default payment method that we will autoselect when booking
"""
type SetDefaultPaymentMethod {
  ok: Boolean
  default_payment_method_id: ID
}

"""
Adding/changing a default traveler profile that we will autoselect when booking
"""
type SetDefaultTravelerProfile {
  ok: Boolean
}

"""
Adding/changing whether or not a user wants booking confirmation emails when users in their group make bookings
Note: Only admins can create and edit EmailPreferences
"""
type SetEmailPreferences {
  ok: Boolean

  """the EmailPreference obj that was created or updated"""
  email_preferences: EmailPreferences
}

type SetGroupCarGuidelines {
  ok: Boolean

  """The GroupCarGuidelines obj that is created or updated"""
  group_car_guidelines: GroupCarGuidelines
}

type SetGroupFlightCabinClassPolicies {
  ok: Boolean
  policies: [GroupFlightCabinClassPolicy]
}

type SetGroupFlightDirectPolicy {
  ok: Boolean
  policy: GroupFlightDirectPolicy
}

type SetGroupFlightGuidelines {
  ok: Boolean

  """the GroupHotelGuidelines obj that was created or updated"""
  group_flight_guidelines: GroupFlightGuidelines
}

type SetGroupFlightWigglePolicy {
  ok: Boolean
  policy: GroupFlightWigglePolicy
}

"""
Adding/changing whether or not a user wants booking confirmation emails when users in their group make bookings
Note: Only admins can create and edit EmailPreferences
"""
type SetGroupHotelGuidelines {
  ok: Boolean

  """the GroupHotelGuidelines obj that was created or updated"""
  group_hotel_guidelines: GroupHotelGuidelines
}

type SetHotelGuidelinePrimaryCity {
  ok: Boolean
  guidelines: GroupHotelGuidelines
}

"""
Changes the logged in users password. Part of the forgot password flow.
"""
type SetPassword {
  ok: Boolean
}

type ShareBooking {
  ok: Boolean
  booking: Booking
}

type StockMediaNode {
  province: String
  mimetype: String
  tags: JSONString
  deleted: Boolean
  country: String
  id: ID!
  created: DateTime
  uri: String
  longitude: Float
  modified: DateTime
  city: String
  country_code: String
  latitude: Float
  properties: GenericScalar
  province_code: String
}

type StreamGuidelines {
  """The outbound airtime minutes used to determine eligible cabin class"""
  outbound_airtime_minutes: Int!

  """The max eligible cabin class determined by class policies and airtime"""
  max_cabin: CabinType

  """The base guideline price in cents determined by eligible cabin class"""
  base_max_price: Int!

  """The general/1+ stops wiggle room in cents, per passenger"""
  wiggle_room: Int

  """The non-stop only wiggle room in cents, per passenger"""
  non_stop_wiggle_room: Int

  """
  The general/1+ stops max guideline price in cents for fares in this stream.
  This value includes wiggle room multiplied by number of passengers
  """
  max_price: Int!

  """
  The max guideline price in cents for non-stop fares in this stream. This value
  includes non-stop wiggle room multiplied by number of passengers
  """
  non_stop_max_price: Int!

  """
  The number of passengers on this fare used to multiple wiggle room values in max prices
  """
  number_of_passengers: Int!
}

type TaxDetail {
  """a description of the associated taxes"""
  description: String

  """the tax code that supports the associated tax"""
  tax_code: String

  """the amount of taxes to be incurred"""
  amount: Int
}

type Ticket {
  """The id of the ticket"""
  id: ID

  """The airline"""
  airline: Airline

  """The ticket number"""
  number: String
  passenger_id: String @deprecated(reason: "Please request the traveler on the ticket. Returning back traveler idinstead. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")

  """The pnr ref for the ticket"""
  pnr_ref: String

  """The assigned seats on the ticket"""
  seats: [BookedSeat]

  """The booking traveler profile for the person travelling on the ticket."""
  traveler: BookingTravelerProfile
  airline_id: ID @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  booking_traveler_profile_id: String @deprecated(reason: "Please request the id on traveler. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  fare_id: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  modified: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

type TicketCancellationFailureDetailsNode {
  created: DateTime
  event_details: GenericScalar
  modified: DateTime

  """
  a serialized LolaClientError. It has the full, nested causal chain with an
  appropriate "key" that will give greater detail as to the category of failure
  """
  error_details: GenericScalar
  ticket_id: String
  reported_timestamp: DateTime
  provider: EnumString
  id: ID!
}

type TicketCancellationManualRequestDetailsNode {
  remaining_value_currency: EnumString
  created: DateTime
  modified: DateTime
  remaining_value: Int
  pnr_ref: String
  ticket_id: String
  reported_timestamp: DateTime
  server_message: String
  customer_message: String
  id: ID!
}

type TicketCancellationSuccessDetailsNode {
  ticket_id: String
  reported_timestamp: DateTime
  created: DateTime
  event_details: GenericScalar
  provider: EnumString
  modified: DateTime
  id: ID!
}

type TicketingFailureDetailsNode {
  created: DateTime
  event_details: GenericScalar
  modified: DateTime
  pnr_ref: String

  """
  a serialized LolaClientError. It has the full, nested causal chain with an
  appropriate "key" that will give greater detail as to the category of failure
  """
  error_details: GenericScalar
  reported_timestamp: DateTime
  provider: EnumString
  id: ID!
}

input TimeWindow {
  """The type of time input being used"""
  kind: TimeWindowType!

  """A preset time window. Required when `kind` is PRESET_WINDOW"""
  preset_window: PresetTimeWindow
}

enum TimeWindowType {
  """PRESET_WINDOW"""
  PRESET_WINDOW
}

type TopDestination {
  city: String
  trip_count: Int
}

type TransactionItemNode {
  """
  the date the revenue from this transaction should be recognized. For 2017,
  this should be the checkout date for hotels. Starting in 2017, this will be the book date.
  """
  revenue_recognition_dt: DateTime

  """is lola the merchant of record or not"""
  lola_mor_flag: Boolean

  """always in usd"""
  tax: Int
  payment_last_4: String
  transaction_type: EnumString
  currency_type: String

  """
  if we ever do charge fees, etc., they would be an alternate revenue stream
  """
  other_revenue: Int

  """the currency in which the customer will be charged"""
  customer_currency: EnumString

  """
  the date the customer is due to pay for this transaction so for a flight or
  prepay hotel, this would be the same as the created date; for a postpay hotel,
  it would be the checkout date of the stay.
  """
  payment_due_dt: DateTime

  """our fees in the local currency"""
  lola_fee_local: Int
  total: Int

  """always in usd"""
  base_cost: Int
  payment_token: String
  user_id: String
  user: UserNode!

  """taxes in the local currency"""
  tax_local: Int
  item_type: EnumString
  id: ID!

  """straight commission on a booked item"""
  commission: Int
  vpay_card_cvv: String
  version: Int
  subscription_id: String
  type: String

  """
  this should be used on a refund item to link to theoriginal transaction.
  """
  reference_transaction_item: TransactionItemNode

  """
  this should be used on a refund item to link to theoriginal transaction.
  """
  reference_transaction_item_id: Int

  """a fee paid by an intermediary like a GDS"""
  inducement: Int
  lola_fee: Int
  status: EnumString
  vpay_card_number: String
  deleted: Boolean
  vpay_card_type: String

  """straight commission in the local currency"""
  commission_local: Int

  """supplier service fee in the local currency"""
  service_fee_local: Int
  transaction: TransactionNode!
  transaction_id: Int

  """base cost of the item in the local currency"""
  base_cost_local: Int

  """this is actually the fee charged by the supplier"""
  service_fee: Int

  """this should link to the id of a booking"""
  item_id: String

  """the currency of the inventory provider"""
  local_currency: EnumString

  """is this item from concierge or hotels"""
  is_concierge: Boolean
  payment_account: PaymentAccountNode
  payment_account_id: Int
  customer: CustomerNode
  customer_id: Int
  credit_applied: Int
  payment_token_type: EnumString
  payment_method_type: String
  created: DateTime
  payment_method_subtype: String
  modified: DateTime
  vpay_card_expiration: String

  """total transaction cost in the local currency"""
  total_local: Int
  amount: Int

  """the group active at the time of booking"""
  group_id: String
  trip_item_id: String
  quantity: Int
}

type TransactionNode {
  customer: CustomerNode
  customer_id: Int
  status: EnumString
  user_id: String
  user: UserNode!
  created: DateTime
  deleted: Boolean
  modified: DateTime
  date_paid: DateTime
  version: Int
  total: Int
  trip_id: String
  id: ID!
}

enum TransmissionType {
  """AUTOMATIC"""
  AUTOMATIC

  """MANUAL"""
  MANUAL
}

"""
Additional per-traveler information relevant to the given booking.
Can use for hotels and flights.
"""
input TravelerInput {
  """The ID of TravelerProfile to be booked"""
  traveler_profile_id: ID!

  """Deprecated: This is always ignored"""
  exclude_from_group: Boolean

  """
  For hotel bookings with more than one traveler, this indicates which traveler is the primary guest on the reservation.
  """
  is_primary_guest: Boolean

  """
  The UserLoyaltyProgram(s) to use for this traveler.  Note that hotel bookings
  may only take in one program - and only on the primary guest.
  """
  loyalty_program_ids: [ID]

  """The per-segment seats requested for this traveler on this booking."""
  seats: [SeatSelectionInput]

  """A list of basis codes and booking codes relevant to thistraveler type"""
  booking_details: [BookingDetailsInput]

  """A collection of tickets"""
  tickets: [String]
}

"""
A TravelerProfile is information that a user can specify for usage when booking things. It can represent information
about the user themselves or about other people. It can also be shared with other users.
"""
type TravelerProfile {
  """
  A display name for referring to this profile. E.g. Business International
  """
  profile_name: String

  """The first name of the traveler specified on their travel ID."""
  first_name: String

  """The middle name of the traveler specified on their travel ID."""
  middle_name: String

  """The last name of the traveler specified on their travel ID."""
  last_name: String

  """The generational suffix of a user. Ex: Jr./Sr./IV/III, etc"""
  generational_suffix: GenerationalSuffix

  """The gender of the traveler specified on their travel ID."""
  gender: Gender

  """The birthdate of the traveler specified on their travel ID."""
  birthdate: Date @deprecated(reason: "Removed PII, only birthyear is stored now")

  """The birth year of the traveler specified on their travel ID."""
  birthyear: Int

  """An alternative phone number for this profile."""
  phone: String

  """An alternative email to send booking confirmations to."""
  confirmation_email: String

  """Whether this profile should be auto shared to groups"""
  share_with_groups: Boolean

  """Whether this profile should be auto shared to groups"""
  is_group_profile: Boolean

  """
  Designates this profile as representing the user who owns it. This does not
  tell us whether or not the user who owns it "is you". Please use
  "this_traveler_is_you" for that
  """
  is_owning_user: Boolean

  """The country which issued the passport."""
  passport_country: ISOCountryCode

  """The date of expiration for the passport."""
  passport_expiration: Date

  """A passport number with no leading or trailing whitespace."""
  passport_number: String @deprecated(reason: "Removed PII, only last4 is stored now")

  """Last 4 of passport number with no leading or trailing whitespace."""
  passport_number_last4: String

  """
  A number issued to the traveler by the US TSA's Secure Flight program to match the traveler with
                         their watch list redress case.
  """
  redress_number: String @deprecated(reason: "Removed PII, only last4 is stored now")

  """
  Last 4 of a number issued to the traveler by the US TSA's Secure Flight program to
                         match the traveler with their watch list redress case.
  """
  redress_number_last4: String

  """
  A KTN is a nine digit number issued to the traveler by the Global Entry, NEXUS, SENTRI, or TSA
                         Pre programs run by the US Government. This is required to get a boarding pass which lets the
                         traveler use the TSA Precheck security lines.
  """
  known_traveler_number: String @deprecated(reason: "Removed PII, only last4 is stored now")

  """
  Last 4 of of a KTN, which is a nine digit number issued to the traveler by the Global Entry,
                         NEXUS, SENTRI, or TSA Pre programs run by the US Government. This is required to get a
                         boarding pass which lets the traveler use the TSA Precheck security lines.
  """
  known_traveler_number_last4: String

  """
  First digit of a KTN, which is a nine digit number issued to the traveler by the Global Entry,
                         NEXUS, SENTRI, or TSA Pre programs run by the US Government. This is required to get a
                         boarding pass which lets the traveler use the TSA Precheck security lines.
  """
  known_traveler_number_first_digit: String

  """DEPRECATED"""
  expense_partner_options: GenericScalar

  """First name of traveler, if different on passport"""
  passport_first_name: String

  """Middle name of traveler, if different on passport"""
  passport_middle_name: String

  """Last name of traveler, if different on passport"""
  passport_last_name: String

  """Suffix of traveler, if different on passport"""
  passport_suffix: String

  """This traveler's country of residence."""
  passport_country_of_residence: ISOCountryCode

  """This traveler's passport nationality."""
  passport_nationality: ISOCountryCode

  """This traveler's known traveler number expiration."""
  known_traveler_number_expiration: Date

  """The type of profile"""
  profile_type: TravelerProfileType

  """The id of the TravelerProfile."""
  id: ID!

  """The user who owns the TravelerProfile."""
  owning_user: User

  """The user id used for secrets storage."""
  secret_user_id: String

  """The profile id used for secrets storage"""
  secret_traveler_profile_id: String

  """
  The name which should be displayed to the user as the title of this profile.
  """
  display_name: String

  """The name which should be displayed to the user as the first name."""
  display_first_name: String

  """The name which should be displayed to the user as the last name."""
  display_last_name: String

  """
  A collection of attributes that gives the user some indication of whether or not they have access to this object
  """
  access_context: AccessContext

  """
  Designates that this profile contains a complete set of information and is
  suitable for booking any type of travel or lodging, e.g. flights, hotels, cars, etc.
  """
  is_suitable_for_booking: Boolean

  """Designates that this profile is complete for flight booking"""
  flight_booking_complete: Boolean @deprecated(reason: "Replaced by is_suitable_for_booking.")

  """Designates that this profile is complete for hotel booking"""
  hotel_booking_complete: Boolean @deprecated(reason: "Replaced by is_suitable_for_booking.")

  """The users with which this profile has been shared"""
  shared_with: [User]

  """The current user has access to edit this profile"""
  can_edit: Boolean

  """The current user has access to share this profile"""
  can_share: Boolean

  """
  Designates whether or not this traveler is you for the current acting user.
  From the wombat console perspective, this relies on the console acting as the
  user it is asking for.
  """
  this_traveler_is_you: Boolean

  """
  Loyalty programs associated with this tp. Optionally filtered to the ulp ids specified.
  """
  loyalty_programs(ids: [ID]): [UserLoyaltyProgram]
}

"""A TravelerProfile input node *only* defines fields that are mutable."""
input TravelerProfileInput {
  """
  A display name for referring to this profile. E.g. Business International
  """
  profile_name: String

  """The first name of the traveler specified on their travel ID."""
  first_name: String

  """The middle name of the traveler specified on their travel ID."""
  middle_name: String

  """The last name of the traveler specified on their travel ID."""
  last_name: String

  """The generational suffix of a user. Ex: Jr./Sr./IV/III, etc"""
  generational_suffix: GenerationalSuffix

  """The gender of the traveler specified on their travel ID."""
  gender: Gender

  """The birthdate of the traveler specified on their travel ID."""
  birthdate: Date

  """The birth year of the traveler specified on their travel ID."""
  birthyear: Int

  """An alternative phone number for this profile."""
  phone: String

  """An alternative email to send booking confirmations to."""
  confirmation_email: String

  """Whether this profile should be auto shared to groups"""
  share_with_groups: Boolean

  """Whether this profile should be auto shared to groups"""
  is_group_profile: Boolean

  """
  Designates this profile as representing the user who owns it. This does not
  tell us whether or not the user who owns it "is you". Please use
  "this_traveler_is_you" for that
  """
  is_owning_user: Boolean

  """The country which issued the passport."""
  passport_country: ISOCountryCode

  """The date of expiration for the passport."""
  passport_expiration: Date

  """A passport number with no leading or trailing whitespace."""
  passport_number: String

  """Last 4 of passport number with no leading or trailing whitespace."""
  passport_number_last4: String

  """
  A number issued to the traveler by the US TSA's Secure Flight program to match the traveler with
                         their watch list redress case.
  """
  redress_number: String

  """
  Last 4 of a number issued to the traveler by the US TSA's Secure Flight program to
                         match the traveler with their watch list redress case.
  """
  redress_number_last4: String

  """
  A KTN is a nine digit number issued to the traveler by the Global Entry, NEXUS, SENTRI, or TSA
                         Pre programs run by the US Government. This is required to get a boarding pass which lets the
                         traveler use the TSA Precheck security lines.
  """
  known_traveler_number: String

  """
  Last 4 of of a KTN, which is a nine digit number issued to the traveler by the Global Entry,
                         NEXUS, SENTRI, or TSA Pre programs run by the US Government. This is required to get a
                         boarding pass which lets the traveler use the TSA Precheck security lines.
  """
  known_traveler_number_last4: String

  """
  First digit of a KTN, which is a nine digit number issued to the traveler by the Global Entry,
                         NEXUS, SENTRI, or TSA Pre programs run by the US Government. This is required to get a
                         boarding pass which lets the traveler use the TSA Precheck security lines.
  """
  known_traveler_number_first_digit: String

  """DEPRECATED"""
  expense_partner_options: GenericScalar

  """First name of traveler, if different on passport"""
  passport_first_name: String

  """Middle name of traveler, if different on passport"""
  passport_middle_name: String

  """Last name of traveler, if different on passport"""
  passport_last_name: String

  """Suffix of traveler, if different on passport"""
  passport_suffix: String

  """This traveler's country of residence."""
  passport_country_of_residence: ISOCountryCode

  """This traveler's passport nationality."""
  passport_nationality: ISOCountryCode

  """This traveler's known traveler number expiration."""
  known_traveler_number_expiration: Date

  """The type of profile"""
  profile_type: TravelerProfileType
}

enum TravelerProfileType {
  """DEACTIVATED"""
  DEACTIVATED

  """LEGACY"""
  LEGACY

  """PERSONAL"""
  PERSONAL

  """PRIMARY"""
  PRIMARY

  """TRIPS"""
  TRIPS

  """VISITOR"""
  VISITOR
}

type TravelerSavingsSummary {
  total: VerticalSavingsSummary
  flights: VerticalSavingsSummary
  hotels: VerticalSavingsSummary
  cars: VerticalSavingsSummary
  id: ID
  name: String
}

"""
Represents a Trip that a given user is taking. Trips contain all bookings which a user is traveling on.
"""
type Trip {
  """The id of the trip"""
  id: ID!

  """The short id of the trip"""
  short_id: String

  """Whether or not the trip is archived and should be hidden by default"""
  archived: Boolean

  """The bookings on the trip"""
  bookings(exclude_custom_bookings: Boolean = false): [Booking]

  """Whether or not the trip (and every booking on it) is cancelled"""
  cancelled: Boolean

  """
  Random metadata stored on the trip by the client. This is completely unvalidated and unused by the server
  """
  client_metadata: GenericScalar

  """The date that the trip ends"""
  end_date: DateTime

  """The group that the trip belongs to"""
  group: Group

  """The image for this trip"""
  image: StockMediaNode

  """The url of the image for this trip"""
  image_url: String

  """The name of this trip"""
  name: String

  """The number of flight bookings on this trip"""
  num_flight_bookings: Int

  """The number of hotel bookings on this trip"""
  num_hotel_bookings: Int

  """The number of car bookings on this trip"""
  num_car_bookings: Int

  """The number of custom bookings on this trip"""
  num_custom_bookings(exclude_custom_bookings: Boolean = false): Int

  """The date when the trip starts"""
  start_date: DateTime

  """The subtitle of the trip."""
  subtitle: String

  """The user this trip belongs to"""
  user: User

  """The users who booked the items in this trip"""
  bookers: [User]

  """The booking traveler profiles for this trip"""
  travelers: [BookingTravelerProfile]

  """The list of booking followers who follow the bookings on this trip."""
  booking_followers: [BookingFollower]
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  group_id: String @deprecated(reason: "Please request the id on group instead. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  modified: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  properties: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  tags: JSONString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  user_id: Int @deprecated(reason: "Please request the id on user instead. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  version: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

"""Represents user-editable trip fields. """
input TripData {
  name: String
  start_date: DateTime
  end_date: DateTime
  archived: Boolean
}

type TripEmail {
  s3_location: String
  content: String
}

type TripEmailDetails {
  id: String
  source_email: String
  user: User
  booking: Booking
  subject: String
  status: EnumString
  md5sum: String
  s3_location: String
  locking_user: User
  user_id: String @deprecated(reason: "Use `user.id`")
  booking_id: String @deprecated(reason: "Use `booking.id`")
  tags: JSONString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  properties: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  deleted: Boolean @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  version: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  modified: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

input TripEmailDetailsInput {
  lock: Boolean
  reject_reason: String
}

type TripNode {
  origin: String
  status: String
  last_agent_read_id: String
  tags: JSONString
  deleted: Boolean
  agent_id: String
  agent: UserNode
  key: String
  agent_assigned: DateTime
  end: DateTime
  last_message_id: String
  properties: GenericScalar
  user_id: String
  user: UserNode!
  name: String
  created: DateTime
  destination: String
  modified: DateTime
  id: ID!
  start: DateTime
  version: Int
}

type TripPlanNode {
  name: String
  created: DateTime
  deleted: Boolean
  trip_id: String
  trip: TripNode!
  tags: JSONString
  modified: DateTime
  id: ID!
  parent_plan_id: String
  version: Int
  type: String
  properties: GenericScalar
}

type UnbanUser {
  ok: Boolean
  user: User
}

type UnfollowTrip {
  ok: Boolean
}

"""
Adds a new group car guideline with hard coded values as a form of unsetting to allow archiving.
"""
type UnsetGroupCarGuidelines {
  ok: Boolean

  """The GroupCarGuidelines obj that is unset"""
  group_car_guidelines: GroupCarGuidelines
}

"""
Adds a new group hotel guideline with hard coded values as a form of unsetting to allow archiving.
"""
type UnsetGroupFlightGuidelines {
  ok: Boolean

  """the GroupFlightGuidelines obj that was unset"""
  group_flight_guidelines: GroupFlightGuidelines
}

"""
Adds a new group hotel guideline with hard coded values as a form of unsetting to allow archiving.
"""
type UnsetGroupHotelGuidelines {
  ok: Boolean

  """the GroupHotelGuideline obj that was unset"""
  group_hotel_guidelines: GroupHotelGuidelines
}

"""This mutation allows a group admin to un-whitelist an email domain."""
type UnWhitelistDomain {
  ok: Boolean
  domain: GroupDomain
}

type UpdateAgentNote {
  ok: Boolean
  agent_note: AgentNote
}

"""Creates a CalendarFeed belonging to the given entity."""
type UpdateCalendarFeed {
  ok: Boolean
  calendar_feed: CalendarFeed
}

"""Update the corporate email."""
type UpdateExpensePartnerPaymentAssociation {
  ok: Boolean
}

type UpdateGroup {
  ok: Boolean
  group: Group
}

type UpdateGroupAssociationHasLoggedIn {
  ok: Boolean
}

type UpdateGroupDepartment {
  ok: Boolean
  group_department: GroupDepartment
}

type UpdateGroupDestination {
  ok: Boolean
  group_destination: GroupDestination
}

type UpdateGroupInvitation {
  ok: Boolean
  group_person: GroupPerson
}

type UpdateGroupLoyaltyProgramAssociation {
  ok: Boolean

  """Group loyalty program association"""
  group_loyalty_program_association: GroupLoyaltyProgramAssociation
}

type UpdateGroupMembership {
  ok: Boolean
  group_person: GroupPerson
}

type UpdateGroupPreferences {
  ok: Boolean
  group_preferences: GroupPreferences
}

type UpdateHotel {
  ok: Boolean
}

type UpdateNewUserAndVerifyEmail {
  ok: Boolean
  user: User
}

input UpdateNewUserAndVerifyEmailInput {
  user_id: String!
  first_name: String!
  last_name: String!
  password: String!
  code: String!
  preferred_language: String!
  preferred_country: String!
  preferred_currency: String!
}

type UpdateNoteText {
  agent_note: AgentNote
}

"""
Changes the logged in users password. Part of the update password flow.
"""
type UpdatePassword {
  ok: Boolean
}

type UpdatePaymentMethod {
  payment_method: PaymentMethod
}

"""Updates a given TravelerProfile."""
type UpdateTravelerProfile {
  ok: Boolean
  traveler_profile: TravelerProfile
}

type UpdateTripEmailDetails {
  ok: Boolean
}

type UploadGroupDepartments {
  ok: Boolean
}

"""
A replacement for the Peewee derived User node. Will eventually replace it.
"""
type User {
  """The id of the user."""
  id: ID

  """A user's preferred first name."""
  chosen_first_name: String

  """A user's preferred last name."""
  chosen_last_name: String

  """A user's preferred pronoun(s)."""
  chosen_pronoun: String

  """A user's preferred gender."""
  chosen_gender: String

  """All TravelerProfiles which this user has access to."""
  traveler_profiles(ids: [ID]): [TravelerProfile]

  """A user's personal traveler profiles, excluding their own profile"""
  personal_traveler_profiles: [TravelerProfile]

  """
  a default traveler profile that is selected by the user. This could be stale
  as its just a string the front end uses to check which profile to select and
  tp could be deleted or unshared
  """
  default_traveler_profile_id: ID

  """a default payment method that is selected by the user."""
  default_payment_method_id: ID

  """The users secure intercom id."""
  intercom_hmac: String

  """The user's loyalty programs, optionally filtered by fare/hotel."""
  loyalty_programs(
    """
    Only return loyalty programs that have not yet been associated with a traveler profile. Defaults to False
    """
    remove_traveler_associated: Boolean

    """A flight fare or hotel to use to filter down relevant loyalty programs"""
    filter: LoyaltyProgramFilter
  ): [UserLoyaltyProgram]

  """The user's bookings."""
  bookings(
    """An optional list of booking ids that we intend to grab"""
    ids: [ID]
    exclude_custom_bookings: Boolean = false
  ): [Booking]

  """The user's trips."""
  trips(
    """An optional list of specific trip ids"""
    ids: [ID]
    exclude_custom_bookings: Boolean = false
  ): [Trip]

  """The groups that the user belongs to and their role in the group"""
  group_associations: [GroupAssociation]

  """The groups this user could choose to join"""
  potential_groups: [Group]

  """The users payment accounts"""
  payment_methods(payment_account_id: ID): [PaymentMethod]

  """Data structure representing what might be new for the user"""
  whats_new(root_only: Boolean): [WhatsNew]

  """All of a user's email preferences"""
  email_preferences: [EmailPreferences]
  agent_note: AgentNote @deprecated(reason: "Notes will now be many to one")

  """The notes wombats have saved on the user"""
  agent_notes: [AgentNote]

  """The two letter code of the user's preferred language, ex: en"""
  preferred_language: String

  """The two letter code of the user's preferred country, ex: US"""
  preferred_country: String

  """The three letter code of the user's preferred currency, ex: USD"""
  preferred_currency: String

  """The user's role. We should really change this to an enum."""
  role: String

  """
  The user's status. active, banned, etc. We really should change this to an enum.
  """
  status: String

  """
  Display short name for clients. In the future this may be fancier than just first name
  """
  short_name: String
  first_name: String @deprecated(reason: "Please use chosen_first_name instead. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  last_name: String @deprecated(reason: "Please use chosen_last_name instead. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  gender: EnumString @deprecated(reason: "Please use chosen_gender and chosen_pronoun instead. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  email: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  birthdate: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  deleted: Boolean @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  email_validated: Boolean @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  enterprise: Boolean @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  facebook_id: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  latitude: Float @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  longitude: Float @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  modified: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  phone: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  phone_validated: Boolean @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  properties: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  tags: JSONString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  timezone: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  username: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  version: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")

  """Whether user is in a one profile enabled group"""
  is_one_profile_enabled: Boolean
}

type UserIndexNode {
  username: String
  status: String
  last_name: String

  """
  The two letter code of the preferred country explicitly set by the user, ex: US
  """
  preferred_country: String
  tags: JSONString
  deleted: Boolean
  email_validated: Boolean
  phone: String
  timezone: String
  id: ID!

  """Deprecated in favor of preferred_language and preferred_country"""
  preferred_locale: String
  first_name: String

  """
  The two letter code of the preferred language explicitly set by the user, ex: en
  """
  preferred_language: String
  created: DateTime
  gender: EnumString
  modified: DateTime
  longitude: Float
  role: String

  """
  The three letter code of the preferred currency explicitly set by the user, ex: USD
  """
  preferred_currency: String
  enterprise: Boolean
  latitude: Float
  phone_validated: Boolean
  email: String
}

type UserLoyaltyProgram {
  id: ID
  traveler_profile_id: ID

  """The name of the loyalty program"""
  name: String!

  """The long name of the loyalty program"""
  long_name: String!

  """The type of the loyalty program"""
  program_type: LoyaltyProgramType!

  """The user's loyalty program membership number."""
  number: String!
  created: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  creator: User @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  creator_id: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  deleted: Boolean @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  loyalty_program: LoyaltyProgram @deprecated(reason: "Please use name, long_name and program_type fields instead.")
  loyalty_program_id: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  loyalty_program_number: String @deprecated(reason: "Please use number instead. \nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  modified: DateTime @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  properties: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  tags: JSONString @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  user: User @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  user_id: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  verified: String @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  version: Int @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

type UserNode {
  """The chosen pronouns this User would like to use in our app"""
  chosen_pronoun: String
  username: String

  """The chosen or given last name of the User"""
  last_name: String

  """Deprecated with the addition of the TravelProfile model"""
  birthdate: DateTime

  """The chosen gender this User would like to use in our app"""
  chosen_gender: String
  timezone: String
  id: ID!

  """Deprecated in favor of preferred_language and preferred_country"""
  preferred_locale: String

  """The chosen or given first name of the User"""
  first_name: String
  secrets_key: String
  version: Int
  role: String
  facebook_id: String
  latitude: Float
  phone_validated: Boolean
  email: String
  default_payment_method_id: String
  default_traveler_profile_id: String

  """
  The two letter code of the preferred country explicitly set by the user, ex: US
  """
  preferred_country: String
  tags: JSONString
  deleted: Boolean
  phone: String
  password: String
  properties: GenericScalar
  email_validated: Boolean

  """
  The two letter code of the preferred language explicitly set by the user, ex: en
  """
  preferred_language: String
  created: DateTime

  """Deprecated with the addition of the TravelProfile model"""
  gender: EnumString
  modified: DateTime
  longitude: Float
  status: String

  """
  The three letter code of the preferred currency explicitly set by the user, ex: USD
  """
  preferred_currency: String

  """Deprecated with the addition of the TravelProfile model"""
  enterprise: Boolean
}

type UserQueryNode {
  trip_plan_id: String
  trip_plan: TripPlanNode
  user_id: String
  user: UserNode!
  display_results: JSONString
  tags: JSONString
  deleted: Boolean
  created: DateTime
  modified: DateTime
  id: ID!
  version: Int
  query: GenericScalar
  swiped_results: JSONString
  trip_id: String
  trip: TripNode
  properties: GenericScalar
}

"""A plain ol' Hotel derived directly from a DB hotel"""
type VanillaHotel implements Hotel {
  """id of the Hotel."""
  id: ID

  """name of the hotel"""
  name: String

  """ First Address Line of the hotel"""
  address1: String

  """ Second Address Line of the hotel"""
  address2: String

  """Amenities available at the hotel"""
  raw_amenities: RawHotelAmenityInformation

  """city where the hotel is located"""
  city: String

  """country where the hotel is located"""
  country: String

  """country code for the location of this hotel"""
  country_code: ISOCountryCode

  """province where the hotel is located"""
  province: String

  """province code for the location of this hotel"""
  province_code: String

  """website of this hotel"""
  website: String

  """additional derived features for this hotel"""
  raw_supplements: RawHotelSupplementInfo

  """local currency accepted by the hotel"""
  currency: ISOCurrencyCode

  """data describing the hotel"""
  description: HotelDescription

  """contact email for this hotel"""
  email: String

  """contact fax number for this hotel"""
  fax: String

  """star rating for this hotel"""
  star_rating: String

  """category for this hotel"""
  category: String

  """tag line for this hotel"""
  tag_line: String

  """contact phone number for this hotel"""
  phone: String

  """postal code for the location of this hotel"""
  postal_code: String

  """latitude for the location of this hotel"""
  latitude: String

  """longitude for the location of this hotel"""
  longitude: String

  """hotel media associated with this hotel"""
  media: [Media]

  """The chain associated with this hotel"""
  chain: String

  """the brand associated with this hotel"""
  master_brand: String

  """
  local checkin timedelta from the beginning of the day for the hotel in seconds
  """
  checkin_time: Int

  """
  local checkout timedelta from the beginning of the day for the hotel in seconds
  """
  checkout_time: Int

  """The number of ratings for the hotel."""
  num_ratings: Int

  """Whether or not the active user has already booked this hotel"""
  booked_before: Boolean

  """Whether or not the active user's group(s) prefer this hotel"""
  group_admin_preferred: Boolean
  group_hotel_negotiated_rates: GroupHotelNegotiatedRatesOutput

  """availability summary for the hotel and given search parameters"""
  availability(search_query: HotelAvailabilityInput!): HotelAvailabilitySummary
  rooms(
    """
    A HotelRoomInput object representing the dates and guests to check availability against
    """
    hotel_room_info: HotelRoomInput!
  ): [HotelRoom]

  """Google directions from a given origin to the hotel"""
  google_directions(
    """starting point for a google directions lookup to the hotel"""
    starting_point: LocationInput!
  ): [GoogleDirectionsRoute]

  """Please use raw_amenities instead."""
  amenities: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
  supplements: DerivedHotelAttributesNode @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")

  """Only for Lola Desktop"""
  backwards_compatible_media: GenericScalar @deprecated(reason: "\nThis field was automatically generated by a node created from a Peewee model. We want to be explicit about what we\ndefine in our API, so we deprecated it. You can still access it but please do not start relying on a deprecated field,\nwhere you haven't previously, without consulting the backend team.\n")
}

type VerifyTripFollowerEmail {
  ok: Boolean
  email_validated: Boolean
  invalid_code: Boolean

  """The id of the trip that the email is following."""
  trip_id: String
}

type VerticalSavingsSummary {
  policy_savings: Int
  alt_price_savings: Int
  total_savings: Int
  spend: Int
  num_bookings: Int
  num_travelers: Int
  num_bookings_assoc_with_dep: Int
  by_date: [MonthSavingsSummary]
}

enum ViewCategory {
  """CITY"""
  CITY

  """COURTYARD"""
  COURTYARD

  """GARDEN"""
  GARDEN

  """MOUNTAIN"""
  MOUNTAIN

  """OCEAN"""
  OCEAN

  """OTHER"""
  OTHER

  """WATER"""
  WATER
}

type WhatsNew {
  """The name of the new item"""
  name: String!

  """When was the item changed"""
  changed: DateTime!
}

"""
This mutation allows a group admin to "whitelist" an email domain, allowing any user with a verified email in that
domain to join the group without an invitation, if they want to.
You must provide _either_ a group domain ID or the string of the domain you want to whitelist.
"""
type WhitelistDomain {
  ok: Boolean
  domain: GroupDomain
}
